"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.header_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class PowerStatus(google.protobuf.message.Message):
    """Power on or off of components of the SpotCam."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PTZ_FIELD_NUMBER: builtins.int
    AUX1_FIELD_NUMBER: builtins.int
    AUX2_FIELD_NUMBER: builtins.int
    EXTERNAL_MIC_FIELD_NUMBER: builtins.int
    @property
    def ptz(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """these switches are 'true' for power-on, 'false' for power-off"""
        pass
    @property
    def aux1(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    @property
    def aux2(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    @property
    def external_mic(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    def __init__(self,
        *,
        ptz: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        aux1: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        aux2: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        external_mic: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["aux1",b"aux1","aux2",b"aux2","external_mic",b"external_mic","ptz",b"ptz"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aux1",b"aux1","aux2",b"aux2","external_mic",b"external_mic","ptz",b"ptz"]) -> None: ...
global___PowerStatus = PowerStatus

class GetPowerStatusRequest(google.protobuf.message.Message):
    """Request component power status."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header"]) -> None: ...
global___GetPowerStatusRequest = GetPowerStatusRequest

class GetPowerStatusResponse(google.protobuf.message.Message):
    """Provides the power status of all components."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def status(self) -> global___PowerStatus:
        """status indicates the power status of the controllable devices
        'true' for power-on, 'false' for power-off
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: typing.Optional[global___PowerStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> None: ...
global___GetPowerStatusResponse = GetPowerStatusResponse

class SetPowerStatusRequest(google.protobuf.message.Message):
    """Turn components on or off."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def status(self) -> global___PowerStatus:
        """status indicates the requested power status of the controllable devices
        'true' for power-on, 'false' for power-off
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        status: typing.Optional[global___PowerStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> None: ...
global___SetPowerStatusRequest = SetPowerStatusRequest

class SetPowerStatusResponse(google.protobuf.message.Message):
    """Result of turning components on or off."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def status(self) -> global___PowerStatus:
        """status indicates the requested changes upon success
        'true' for power-on, 'false' for power-off
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: typing.Optional[global___PowerStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> None: ...
global___SetPowerStatusResponse = SetPowerStatusResponse

class CyclePowerRequest(google.protobuf.message.Message):
    """Turn components off and then back on without needing two separate requests."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def status(self) -> global___PowerStatus:
        """status indicates the devices for which cycle-power is requested
        'true' for cycle-power, else no effect
        power cycle will not be performed on a given device if its state is power-off prior to this call
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        status: typing.Optional[global___PowerStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> None: ...
global___CyclePowerRequest = CyclePowerRequest

class CyclePowerResponse(google.protobuf.message.Message):
    """Result of power cycling components."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def status(self) -> global___PowerStatus:
        """status indicates the power status of the controllable devices after a successful power cycle
        'true' for power-on, 'false' for power-off
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: typing.Optional[global___PowerStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> None: ...
global___CyclePowerResponse = CyclePowerResponse
