"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.header_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class StreamParams(google.protobuf.message.Message):
    """Parameters for how the video stream should be processed and compressed."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _AwbModeEnum:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AwbModeEnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[StreamParams._AwbModeEnum.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        OFF: StreamParams._AwbModeEnum.ValueType  # 0
        AUTO: StreamParams._AwbModeEnum.ValueType  # 1
        INCANDESCENT: StreamParams._AwbModeEnum.ValueType  # 2
        FLUORESCENT: StreamParams._AwbModeEnum.ValueType  # 3
        WARM_FLUORESCENT: StreamParams._AwbModeEnum.ValueType  # 4
        DAYLIGHT: StreamParams._AwbModeEnum.ValueType  # 5
        CLOUDY: StreamParams._AwbModeEnum.ValueType  # 6
        TWILIGHT: StreamParams._AwbModeEnum.ValueType  # 7
        SHADE: StreamParams._AwbModeEnum.ValueType  # 8
        DARK: StreamParams._AwbModeEnum.ValueType  # 9
    class AwbModeEnum(_AwbModeEnum, metaclass=_AwbModeEnumEnumTypeWrapper):
        """Options for automatic white balancing mode."""
        pass

    OFF: StreamParams.AwbModeEnum.ValueType  # 0
    AUTO: StreamParams.AwbModeEnum.ValueType  # 1
    INCANDESCENT: StreamParams.AwbModeEnum.ValueType  # 2
    FLUORESCENT: StreamParams.AwbModeEnum.ValueType  # 3
    WARM_FLUORESCENT: StreamParams.AwbModeEnum.ValueType  # 4
    DAYLIGHT: StreamParams.AwbModeEnum.ValueType  # 5
    CLOUDY: StreamParams.AwbModeEnum.ValueType  # 6
    TWILIGHT: StreamParams.AwbModeEnum.ValueType  # 7
    SHADE: StreamParams.AwbModeEnum.ValueType  # 8
    DARK: StreamParams.AwbModeEnum.ValueType  # 9

    class AwbMode(google.protobuf.message.Message):
        """Wrapper for AwbModeEnum to allow it to be optionally set."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        AWB_FIELD_NUMBER: builtins.int
        awb: global___StreamParams.AwbModeEnum.ValueType
        def __init__(self,
            *,
            awb: global___StreamParams.AwbModeEnum.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["awb",b"awb"]) -> None: ...

    TARGETBITRATE_FIELD_NUMBER: builtins.int
    REFRESHINTERVAL_FIELD_NUMBER: builtins.int
    IDRINTERVAL_FIELD_NUMBER: builtins.int
    AWB_FIELD_NUMBER: builtins.int
    @property
    def targetbitrate(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """The compression level in target BPS"""
        pass
    @property
    def refreshinterval(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """How often should the entire feed be refreshed? (in frames)
        Note: the feed is refreshed on a macroblock level; there are no full I-frames
        """
        pass
    @property
    def idrinterval(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """How often should an IDR message get sent? (in frames)"""
        pass
    @property
    def awb(self) -> global___StreamParams.AwbMode:
        """Optional setting of automatic white balancing mode."""
        pass
    def __init__(self,
        *,
        targetbitrate: typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        refreshinterval: typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        idrinterval: typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        awb: typing.Optional[global___StreamParams.AwbMode] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["awb",b"awb","idrinterval",b"idrinterval","refreshinterval",b"refreshinterval","targetbitrate",b"targetbitrate"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["awb",b"awb","idrinterval",b"idrinterval","refreshinterval",b"refreshinterval","targetbitrate",b"targetbitrate"]) -> None: ...
global___StreamParams = StreamParams

class GetStreamParamsRequest(google.protobuf.message.Message):
    """Request the current video stream parameters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header"]) -> None: ...
global___GetStreamParamsRequest = GetStreamParamsRequest

class GetStreamParamsResponse(google.protobuf.message.Message):
    """Provides the current video stream parameters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def params(self) -> global___StreamParams:
        """Current video stream parameters."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        params: typing.Optional[global___StreamParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","params",b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","params",b"params"]) -> None: ...
global___GetStreamParamsResponse = GetStreamParamsResponse

class SetStreamParamsRequest(google.protobuf.message.Message):
    """Modify the video stream parameters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def params(self) -> global___StreamParams:
        """Set only the fields that should be modified."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        params: typing.Optional[global___StreamParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","params",b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","params",b"params"]) -> None: ...
global___SetStreamParamsRequest = SetStreamParamsRequest

class SetStreamParamsResponse(google.protobuf.message.Message):
    """Result of setting video stream parameters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def params(self) -> global___StreamParams:
        """Applied video stream parameters."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        params: typing.Optional[global___StreamParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","params",b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","params",b"params"]) -> None: ...
global___SetStreamParamsResponse = SetStreamParamsResponse

class EnableCongestionControlRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    ENABLE_CONGESTION_CONTROL_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader: ...
    enable_congestion_control: builtins.bool
    """A boolean 'true' enables receiver congestion control while 'false' disables it"""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        enable_congestion_control: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_congestion_control",b"enable_congestion_control","header",b"header"]) -> None: ...
global___EnableCongestionControlRequest = EnableCongestionControlRequest

class EnableCongestionControlResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader: ...
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header"]) -> None: ...
global___EnableCongestionControlResponse = EnableCongestionControlResponse
