"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.header_pb2
import bosdyn.api.lease_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class SpotCheckCommandRequest(google.protobuf.message.Message):
    """Request for the SpotCheckCommand service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Command:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CommandEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SpotCheckCommandRequest._Command.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        COMMAND_UNKNOWN: SpotCheckCommandRequest._Command.ValueType  # 0
        """Unused enum."""

        COMMAND_START: SpotCheckCommandRequest._Command.ValueType  # 1
        """Start spot check joint calibration and camera checks."""

        COMMAND_ABORT: SpotCheckCommandRequest._Command.ValueType  # 2
        """Abort spot check joint calibration and camera check."""

        COMMAND_REVERT_CAL: SpotCheckCommandRequest._Command.ValueType  # 3
        """Revert joint calibration back to the previous values."""

    class Command(_Command, metaclass=_CommandEnumTypeWrapper):
        pass

    COMMAND_UNKNOWN: SpotCheckCommandRequest.Command.ValueType  # 0
    """Unused enum."""

    COMMAND_START: SpotCheckCommandRequest.Command.ValueType  # 1
    """Start spot check joint calibration and camera checks."""

    COMMAND_ABORT: SpotCheckCommandRequest.Command.ValueType  # 2
    """Abort spot check joint calibration and camera check."""

    COMMAND_REVERT_CAL: SpotCheckCommandRequest.Command.ValueType  # 3
    """Revert joint calibration back to the previous values."""


    HEADER_FIELD_NUMBER: builtins.int
    LEASE_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def lease(self) -> bosdyn.api.lease_pb2.Lease:
        """The Lease to show ownership of the robot. Lease required to issue any SpotCheck command."""
        pass
    command: global___SpotCheckCommandRequest.Command.ValueType
    """The describing what the spot check service should do."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        lease: typing.Optional[bosdyn.api.lease_pb2.Lease] = ...,
        command: global___SpotCheckCommandRequest.Command.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","lease",b"lease"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["command",b"command","header",b"header","lease",b"lease"]) -> None: ...
global___SpotCheckCommandRequest = SpotCheckCommandRequest

class SpotCheckCommandResponse(google.protobuf.message.Message):
    """Response for the SpotCheckCommand service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SpotCheckCommandResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: SpotCheckCommandResponse._Status.ValueType  # 0
        """Unknown"""

        STATUS_OK: SpotCheckCommandResponse._Status.ValueType  # 1
        """Request was accepted."""

        STATUS_ERROR: SpotCheckCommandResponse._Status.ValueType  # 2
        """An error ocurred."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: SpotCheckCommandResponse.Status.ValueType  # 0
    """Unknown"""

    STATUS_OK: SpotCheckCommandResponse.Status.ValueType  # 1
    """Request was accepted."""

    STATUS_ERROR: SpotCheckCommandResponse.Status.ValueType  # 2
    """An error ocurred."""


    HEADER_FIELD_NUMBER: builtins.int
    LEASE_USE_RESULT_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def lease_use_result(self) -> bosdyn.api.lease_pb2.LeaseUseResult:
        """Details about how the lease was used."""
        pass
    status: global___SpotCheckCommandResponse.Status.ValueType
    """Command status"""

    message: typing.Text
    """Human-readable description if an error occurred."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        lease_use_result: typing.Optional[bosdyn.api.lease_pb2.LeaseUseResult] = ...,
        status: global___SpotCheckCommandResponse.Status.ValueType = ...,
        message: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","lease_use_result",b"lease_use_result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","lease_use_result",b"lease_use_result","message",b"message","status",b"status"]) -> None: ...
global___SpotCheckCommandResponse = SpotCheckCommandResponse

class SpotCheckFeedbackRequest(google.protobuf.message.Message):
    """Request for the SpotCheckFeedback service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header"]) -> None: ...
global___SpotCheckFeedbackRequest = SpotCheckFeedbackRequest

class SpotCheckFeedbackResponse(google.protobuf.message.Message):
    """Response for the SpotCheckFeedback service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SpotCheckFeedbackResponse._State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATE_UNKNOWN: SpotCheckFeedbackResponse._State.ValueType  # 0
        """Unused enum."""

        STATE_USER_ABORTED: SpotCheckFeedbackResponse._State.ValueType  # 1
        """SpotCheck is aborted by the user."""

        STATE_STARTING: SpotCheckFeedbackResponse._State.ValueType  # 2
        """SpotCheck is initializing."""

        STATE_LOADCELL_CAL: SpotCheckFeedbackResponse._State.ValueType  # 3
        """Load cell calibration underway."""

        STATE_ENDSTOP_CAL: SpotCheckFeedbackResponse._State.ValueType  # 4
        """Endstop calibration underway."""

        STATE_CAMERA_CHECK: SpotCheckFeedbackResponse._State.ValueType  # 5
        """Camera check underway."""

        STATE_BODY_POSING: SpotCheckFeedbackResponse._State.ValueType  # 6
        """Body pose routine underway."""

        STATE_FINISHED: SpotCheckFeedbackResponse._State.ValueType  # 7
        """Spot check successfully finished."""

        STATE_REVERTING_CAL: SpotCheckFeedbackResponse._State.ValueType  # 8
        """Reverting calibration to previous values."""

        STATE_ERROR: SpotCheckFeedbackResponse._State.ValueType  # 9
        """Error occurred while running spotcheck. Inspect error for more info."""

        STATE_WAITING_FOR_COMMAND: SpotCheckFeedbackResponse._State.ValueType  # 10
        """Waiting for user command."""

        STATE_HIP_RANGE_OF_MOTION_CHECK: SpotCheckFeedbackResponse._State.ValueType  # 11
        """Hip range of motion check underway."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        pass

    STATE_UNKNOWN: SpotCheckFeedbackResponse.State.ValueType  # 0
    """Unused enum."""

    STATE_USER_ABORTED: SpotCheckFeedbackResponse.State.ValueType  # 1
    """SpotCheck is aborted by the user."""

    STATE_STARTING: SpotCheckFeedbackResponse.State.ValueType  # 2
    """SpotCheck is initializing."""

    STATE_LOADCELL_CAL: SpotCheckFeedbackResponse.State.ValueType  # 3
    """Load cell calibration underway."""

    STATE_ENDSTOP_CAL: SpotCheckFeedbackResponse.State.ValueType  # 4
    """Endstop calibration underway."""

    STATE_CAMERA_CHECK: SpotCheckFeedbackResponse.State.ValueType  # 5
    """Camera check underway."""

    STATE_BODY_POSING: SpotCheckFeedbackResponse.State.ValueType  # 6
    """Body pose routine underway."""

    STATE_FINISHED: SpotCheckFeedbackResponse.State.ValueType  # 7
    """Spot check successfully finished."""

    STATE_REVERTING_CAL: SpotCheckFeedbackResponse.State.ValueType  # 8
    """Reverting calibration to previous values."""

    STATE_ERROR: SpotCheckFeedbackResponse.State.ValueType  # 9
    """Error occurred while running spotcheck. Inspect error for more info."""

    STATE_WAITING_FOR_COMMAND: SpotCheckFeedbackResponse.State.ValueType  # 10
    """Waiting for user command."""

    STATE_HIP_RANGE_OF_MOTION_CHECK: SpotCheckFeedbackResponse.State.ValueType  # 11
    """Hip range of motion check underway."""


    class _Error:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ErrorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SpotCheckFeedbackResponse._Error.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ERROR_UNKNOWN: SpotCheckFeedbackResponse._Error.ValueType  # 0
        """Unused enum."""

        ERROR_NONE: SpotCheckFeedbackResponse._Error.ValueType  # 1
        """No error has occurred."""

        ERROR_UNEXPECTED_POWER_CHANGE: SpotCheckFeedbackResponse._Error.ValueType  # 2
        """Unexpected motor power state transition."""

        ERROR_INIT_IMU_CHECK: SpotCheckFeedbackResponse._Error.ValueType  # 3
        """Robot body is not flat on the ground."""

        ERROR_INIT_NOT_SITTING: SpotCheckFeedbackResponse._Error.ValueType  # 4
        """Robot body is not close to a sitting pose"""

        ERROR_LOADCELL_TIMEOUT: SpotCheckFeedbackResponse._Error.ValueType  # 5
        """Timeout during loadcell calibration."""

        ERROR_POWER_ON_FAILURE: SpotCheckFeedbackResponse._Error.ValueType  # 6
        """Error enabling motor power."""

        ERROR_ENDSTOP_TIMEOUT: SpotCheckFeedbackResponse._Error.ValueType  # 7
        """Timeout during endstop calibration."""

        ERROR_FAILED_STAND: SpotCheckFeedbackResponse._Error.ValueType  # 8
        """Robot failed to stand."""

        ERROR_CAMERA_TIMEOUT: SpotCheckFeedbackResponse._Error.ValueType  # 9
        """Timeout during camera check."""

        ERROR_GROUND_CHECK: SpotCheckFeedbackResponse._Error.ValueType  # 10
        """Flat ground check failed."""

        ERROR_POWER_OFF_FAILURE: SpotCheckFeedbackResponse._Error.ValueType  # 11
        """Robot failed to power off."""

        ERROR_REVERT_FAILURE: SpotCheckFeedbackResponse._Error.ValueType  # 12
        """Robot failed to revert calibration."""

        ERROR_FGKC_FAILURE: SpotCheckFeedbackResponse._Error.ValueType  # 13
        """Robot failed to do flat ground kinematic calibration."""

    class Error(_Error, metaclass=_ErrorEnumTypeWrapper):
        """If SpotCheck experienced an error, specific error details reported here.
        This reflects an error in the routine.
        """
        pass

    ERROR_UNKNOWN: SpotCheckFeedbackResponse.Error.ValueType  # 0
    """Unused enum."""

    ERROR_NONE: SpotCheckFeedbackResponse.Error.ValueType  # 1
    """No error has occurred."""

    ERROR_UNEXPECTED_POWER_CHANGE: SpotCheckFeedbackResponse.Error.ValueType  # 2
    """Unexpected motor power state transition."""

    ERROR_INIT_IMU_CHECK: SpotCheckFeedbackResponse.Error.ValueType  # 3
    """Robot body is not flat on the ground."""

    ERROR_INIT_NOT_SITTING: SpotCheckFeedbackResponse.Error.ValueType  # 4
    """Robot body is not close to a sitting pose"""

    ERROR_LOADCELL_TIMEOUT: SpotCheckFeedbackResponse.Error.ValueType  # 5
    """Timeout during loadcell calibration."""

    ERROR_POWER_ON_FAILURE: SpotCheckFeedbackResponse.Error.ValueType  # 6
    """Error enabling motor power."""

    ERROR_ENDSTOP_TIMEOUT: SpotCheckFeedbackResponse.Error.ValueType  # 7
    """Timeout during endstop calibration."""

    ERROR_FAILED_STAND: SpotCheckFeedbackResponse.Error.ValueType  # 8
    """Robot failed to stand."""

    ERROR_CAMERA_TIMEOUT: SpotCheckFeedbackResponse.Error.ValueType  # 9
    """Timeout during camera check."""

    ERROR_GROUND_CHECK: SpotCheckFeedbackResponse.Error.ValueType  # 10
    """Flat ground check failed."""

    ERROR_POWER_OFF_FAILURE: SpotCheckFeedbackResponse.Error.ValueType  # 11
    """Robot failed to power off."""

    ERROR_REVERT_FAILURE: SpotCheckFeedbackResponse.Error.ValueType  # 12
    """Robot failed to revert calibration."""

    ERROR_FGKC_FAILURE: SpotCheckFeedbackResponse.Error.ValueType  # 13
    """Robot failed to do flat ground kinematic calibration."""


    class CameraResultsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___DepthPlaneSpotCheckResult: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___DepthPlaneSpotCheckResult] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class LoadCellResultsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___LoadCellSpotCheckResult: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___LoadCellSpotCheckResult] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class KinematicCalResultsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___JointKinematicCheckResult: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___JointKinematicCheckResult] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class FootHeightResultsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___FootHeightCheckResult: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___FootHeightCheckResult] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class LegPairResultsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___LegPairCheckResult: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___LegPairCheckResult] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class HipRangeOfMotionResultsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___HipRangeOfMotionResult: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___HipRangeOfMotionResult] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    HEADER_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    LAST_COMMAND_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    CAMERA_RESULTS_FIELD_NUMBER: builtins.int
    LOAD_CELL_RESULTS_FIELD_NUMBER: builtins.int
    KINEMATIC_CAL_RESULTS_FIELD_NUMBER: builtins.int
    PAYLOAD_RESULT_FIELD_NUMBER: builtins.int
    FOOT_HEIGHT_RESULTS_FIELD_NUMBER: builtins.int
    LEG_PAIR_RESULTS_FIELD_NUMBER: builtins.int
    HIP_RANGE_OF_MOTION_RESULTS_FIELD_NUMBER: builtins.int
    PROGRESS_FIELD_NUMBER: builtins.int
    LAST_CAL_TIMESTAMP_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    state: global___SpotCheckFeedbackResponse.State.ValueType
    """The state of the spot check routine."""

    last_command: global___SpotCheckCommandRequest.Command.ValueType
    """The last command executed by Spotcheck. When SpotCheck is in state WAITING_FOR_COMMAND,
    the last command has completed.
    """

    error: global___SpotCheckFeedbackResponse.Error.ValueType
    """The specifics of the error for the SpotCheck service."""

    @property
    def camera_results(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___DepthPlaneSpotCheckResult]:
        """Results from camera check.
        The key string is the location of the camera (e.g. frontright, frontleft, left, ...)
        """
        pass
    @property
    def load_cell_results(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___LoadCellSpotCheckResult]:
        """Results from load cell calibration.
        The key string is the location of the joint (e.g. fl.hxa, fl.hya, fl.kna, ...)
        """
        pass
    @property
    def kinematic_cal_results(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___JointKinematicCheckResult]:
        """Results from output position sensor calibration.
        The key string is the location of the joint (e.g. fl.hx, fl.hy, fl.kn, ...)
        """
        pass
    @property
    def payload_result(self) -> global___PayloadCheckResult:
        """Result from the payload check"""
        pass
    @property
    def foot_height_results(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___FootHeightCheckResult]:
        """Deprecated. Results of foot height validation.
        The key string is the name of the leg (e.g. fl, fr, hl, ...)
        """
        pass
    @property
    def leg_pair_results(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___LegPairCheckResult]:
        """Deprecated. Results of leg pair validation.
        The key string is the name of the leg pair (e.g. fl-fr, fl-hl, ...)
        """
        pass
    @property
    def hip_range_of_motion_results(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___HipRangeOfMotionResult]:
        """Results of the hip range of motion check
        The key string is the name of the leg (e.g. fl, fr, hl, ...)
        """
        pass
    progress: builtins.float
    """The approximate progress of the spot check routine, range [0-1]."""

    @property
    def last_cal_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp for the most up-to-date calibration"""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        state: global___SpotCheckFeedbackResponse.State.ValueType = ...,
        last_command: global___SpotCheckCommandRequest.Command.ValueType = ...,
        error: global___SpotCheckFeedbackResponse.Error.ValueType = ...,
        camera_results: typing.Optional[typing.Mapping[typing.Text, global___DepthPlaneSpotCheckResult]] = ...,
        load_cell_results: typing.Optional[typing.Mapping[typing.Text, global___LoadCellSpotCheckResult]] = ...,
        kinematic_cal_results: typing.Optional[typing.Mapping[typing.Text, global___JointKinematicCheckResult]] = ...,
        payload_result: typing.Optional[global___PayloadCheckResult] = ...,
        foot_height_results: typing.Optional[typing.Mapping[typing.Text, global___FootHeightCheckResult]] = ...,
        leg_pair_results: typing.Optional[typing.Mapping[typing.Text, global___LegPairCheckResult]] = ...,
        hip_range_of_motion_results: typing.Optional[typing.Mapping[typing.Text, global___HipRangeOfMotionResult]] = ...,
        progress: builtins.float = ...,
        last_cal_timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","last_cal_timestamp",b"last_cal_timestamp","payload_result",b"payload_result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["camera_results",b"camera_results","error",b"error","foot_height_results",b"foot_height_results","header",b"header","hip_range_of_motion_results",b"hip_range_of_motion_results","kinematic_cal_results",b"kinematic_cal_results","last_cal_timestamp",b"last_cal_timestamp","last_command",b"last_command","leg_pair_results",b"leg_pair_results","load_cell_results",b"load_cell_results","payload_result",b"payload_result","progress",b"progress","state",b"state"]) -> None: ...
global___SpotCheckFeedbackResponse = SpotCheckFeedbackResponse

class DepthPlaneSpotCheckResult(google.protobuf.message.Message):
    """Results from camera check."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DepthPlaneSpotCheckResult._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: DepthPlaneSpotCheckResult._Status.ValueType  # 0
        """Unused enum."""

        STATUS_OK: DepthPlaneSpotCheckResult._Status.ValueType  # 1
        """No detected calibration error."""

        STATUS_WARNING: DepthPlaneSpotCheckResult._Status.ValueType  # 2
        """Possible calibration error detected."""

        STATUS_ERROR: DepthPlaneSpotCheckResult._Status.ValueType  # 3
        """Error with robot calibration."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Errors reflect an issue with camera hardware."""
        pass

    STATUS_UNKNOWN: DepthPlaneSpotCheckResult.Status.ValueType  # 0
    """Unused enum."""

    STATUS_OK: DepthPlaneSpotCheckResult.Status.ValueType  # 1
    """No detected calibration error."""

    STATUS_WARNING: DepthPlaneSpotCheckResult.Status.ValueType  # 2
    """Possible calibration error detected."""

    STATUS_ERROR: DepthPlaneSpotCheckResult.Status.ValueType  # 3
    """Error with robot calibration."""


    STATUS_FIELD_NUMBER: builtins.int
    SEVERITY_SCORE_FIELD_NUMBER: builtins.int
    status: global___DepthPlaneSpotCheckResult.Status.ValueType
    """Return status for the request."""

    severity_score: builtins.float
    """Higher is worse. Above 100 means the camera is severely out of calibration."""

    def __init__(self,
        *,
        status: global___DepthPlaneSpotCheckResult.Status.ValueType = ...,
        severity_score: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["severity_score",b"severity_score","status",b"status"]) -> None: ...
global___DepthPlaneSpotCheckResult = DepthPlaneSpotCheckResult

class PayloadCheckResult(google.protobuf.message.Message):
    """Results of payload check."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Error:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ErrorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PayloadCheckResult._Error.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ERROR_UNKNOWN: PayloadCheckResult._Error.ValueType  # 0
        """Unused enum."""

        ERROR_NONE: PayloadCheckResult._Error.ValueType  # 1
        """No error found in the payloads."""

        ERROR_MASS_DISCREPANCY: PayloadCheckResult._Error.ValueType  # 2
        """There is a mass discrepancy between the registered payload and what is estimated."""

    class Error(_Error, metaclass=_ErrorEnumTypeWrapper):
        """Errors reflect an issue with payload configuration."""
        pass

    ERROR_UNKNOWN: PayloadCheckResult.Error.ValueType  # 0
    """Unused enum."""

    ERROR_NONE: PayloadCheckResult.Error.ValueType  # 1
    """No error found in the payloads."""

    ERROR_MASS_DISCREPANCY: PayloadCheckResult.Error.ValueType  # 2
    """There is a mass discrepancy between the registered payload and what is estimated."""


    ERROR_FIELD_NUMBER: builtins.int
    EXTRA_PAYLOAD_FIELD_NUMBER: builtins.int
    error: global___PayloadCheckResult.Error.ValueType
    """A flag to indicate if configuration has an error."""

    extra_payload: builtins.float
    """Indicates how much extra payload (in kg) we think the robot has
    Positive indicates robot has more payload than it is configured.
    Negative indicates robot has less payload than it is configured.
    """

    def __init__(self,
        *,
        error: global___PayloadCheckResult.Error.ValueType = ...,
        extra_payload: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","extra_payload",b"extra_payload"]) -> None: ...
global___PayloadCheckResult = PayloadCheckResult

class LoadCellSpotCheckResult(google.protobuf.message.Message):
    """Results from load cell check."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Error:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ErrorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LoadCellSpotCheckResult._Error.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ERROR_UNKNOWN: LoadCellSpotCheckResult._Error.ValueType  # 0
        """Unused enum."""

        ERROR_NONE: LoadCellSpotCheckResult._Error.ValueType  # 1
        """No hardware error detected."""

        ERROR_ZERO_OUT_OF_RANGE: LoadCellSpotCheckResult._Error.ValueType  # 2
        """Load cell calibration failure."""

    class Error(_Error, metaclass=_ErrorEnumTypeWrapper):
        """Errors reflect an issue with robot hardware."""
        pass

    ERROR_UNKNOWN: LoadCellSpotCheckResult.Error.ValueType  # 0
    """Unused enum."""

    ERROR_NONE: LoadCellSpotCheckResult.Error.ValueType  # 1
    """No hardware error detected."""

    ERROR_ZERO_OUT_OF_RANGE: LoadCellSpotCheckResult.Error.ValueType  # 2
    """Load cell calibration failure."""


    ERROR_FIELD_NUMBER: builtins.int
    ZERO_FIELD_NUMBER: builtins.int
    OLD_ZERO_FIELD_NUMBER: builtins.int
    error: global___LoadCellSpotCheckResult.Error.ValueType
    """A flag to indicate if results has an error."""

    zero: builtins.float
    """The current loadcell zero as fraction of full range [0-1]"""

    old_zero: builtins.float
    """The previous loadcell zero as fraction of full range [0-1]"""

    def __init__(self,
        *,
        error: global___LoadCellSpotCheckResult.Error.ValueType = ...,
        zero: builtins.float = ...,
        old_zero: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","old_zero",b"old_zero","zero",b"zero"]) -> None: ...
global___LoadCellSpotCheckResult = LoadCellSpotCheckResult

class JointKinematicCheckResult(google.protobuf.message.Message):
    """Kinematic calibration results"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Error:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ErrorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[JointKinematicCheckResult._Error.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ERROR_UNKNOWN: JointKinematicCheckResult._Error.ValueType  # 0
        """Unused enum."""

        ERROR_NONE: JointKinematicCheckResult._Error.ValueType  # 1
        """No hardware error detected."""

        ERROR_CLUTCH_SLIP: JointKinematicCheckResult._Error.ValueType  # 2
        """Error detected in clutch performance."""

    class Error(_Error, metaclass=_ErrorEnumTypeWrapper):
        """Errors reflect an issue with robot hardware."""
        pass

    ERROR_UNKNOWN: JointKinematicCheckResult.Error.ValueType  # 0
    """Unused enum."""

    ERROR_NONE: JointKinematicCheckResult.Error.ValueType  # 1
    """No hardware error detected."""

    ERROR_CLUTCH_SLIP: JointKinematicCheckResult.Error.ValueType  # 2
    """Error detected in clutch performance."""


    ERROR_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    OLD_OFFSET_FIELD_NUMBER: builtins.int
    HEALTH_SCORE_FIELD_NUMBER: builtins.int
    error: global___JointKinematicCheckResult.Error.ValueType
    """A flag to indicate if results has an error."""

    offset: builtins.float
    """The current offset [rad]"""

    old_offset: builtins.float
    """The previous offset [rad]"""

    health_score: builtins.float
    """Joint calibration health score. range [0-1]
    0 indicates an unhealthy kinematic joint calibration
    1 indicates a perfect kinematic joint calibration
    Typically, values greater than 0.8 should be expected.
    """

    def __init__(self,
        *,
        error: global___JointKinematicCheckResult.Error.ValueType = ...,
        offset: builtins.float = ...,
        old_offset: builtins.float = ...,
        health_score: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","health_score",b"health_score","offset",b"offset","old_offset",b"old_offset"]) -> None: ...
global___JointKinematicCheckResult = JointKinematicCheckResult

class FootHeightCheckResult(google.protobuf.message.Message):
    """Results from foot height checks."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[FootHeightCheckResult._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: FootHeightCheckResult._Status.ValueType  # 0
        """Unused enum."""

        STATUS_OK: FootHeightCheckResult._Status.ValueType  # 1
        """No detected calibration error."""

        STATUS_WARNING: FootHeightCheckResult._Status.ValueType  # 2
        """Possible calibration error detected."""

        STATUS_ERROR: FootHeightCheckResult._Status.ValueType  # 3
        """Error with robot calibration."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Errors reflect an issue with robot calibration."""
        pass

    STATUS_UNKNOWN: FootHeightCheckResult.Status.ValueType  # 0
    """Unused enum."""

    STATUS_OK: FootHeightCheckResult.Status.ValueType  # 1
    """No detected calibration error."""

    STATUS_WARNING: FootHeightCheckResult.Status.ValueType  # 2
    """Possible calibration error detected."""

    STATUS_ERROR: FootHeightCheckResult.Status.ValueType  # 3
    """Error with robot calibration."""


    STATUS_FIELD_NUMBER: builtins.int
    FOOT_HEIGHT_ERROR_FROM_MEAN_FIELD_NUMBER: builtins.int
    status: global___FootHeightCheckResult.Status.ValueType
    """Return status for the request."""

    foot_height_error_from_mean: builtins.float
    """The difference between foot height and mean feet height (m)."""

    def __init__(self,
        *,
        status: global___FootHeightCheckResult.Status.ValueType = ...,
        foot_height_error_from_mean: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["foot_height_error_from_mean",b"foot_height_error_from_mean","status",b"status"]) -> None: ...
global___FootHeightCheckResult = FootHeightCheckResult

class LegPairCheckResult(google.protobuf.message.Message):
    """Results from leg pair checks.."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LegPairCheckResult._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: LegPairCheckResult._Status.ValueType  # 0
        """Unused enum."""

        STATUS_OK: LegPairCheckResult._Status.ValueType  # 1
        """No detected calibration error."""

        STATUS_WARNING: LegPairCheckResult._Status.ValueType  # 2
        """Possible calibration error detected."""

        STATUS_ERROR: LegPairCheckResult._Status.ValueType  # 3
        """Error with robot calibration."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: LegPairCheckResult.Status.ValueType  # 0
    """Unused enum."""

    STATUS_OK: LegPairCheckResult.Status.ValueType  # 1
    """No detected calibration error."""

    STATUS_WARNING: LegPairCheckResult.Status.ValueType  # 2
    """Possible calibration error detected."""

    STATUS_ERROR: LegPairCheckResult.Status.ValueType  # 3
    """Error with robot calibration."""


    STATUS_FIELD_NUMBER: builtins.int
    LEG_PAIR_DISTANCE_CHANGE_FIELD_NUMBER: builtins.int
    status: global___LegPairCheckResult.Status.ValueType
    """Return status for the request."""

    leg_pair_distance_change: builtins.float
    """The change in estimated distance between two feet from tall to short stand (m)"""

    def __init__(self,
        *,
        status: global___LegPairCheckResult.Status.ValueType = ...,
        leg_pair_distance_change: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["leg_pair_distance_change",b"leg_pair_distance_change","status",b"status"]) -> None: ...
global___LegPairCheckResult = LegPairCheckResult

class HipRangeOfMotionResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Error:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ErrorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[HipRangeOfMotionResult._Error.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ERROR_UNKNOWN: HipRangeOfMotionResult._Error.ValueType  # 0
        ERROR_NONE: HipRangeOfMotionResult._Error.ValueType  # 1
        ERROR_OBSTRUCTED: HipRangeOfMotionResult._Error.ValueType  # 2
    class Error(_Error, metaclass=_ErrorEnumTypeWrapper):
        """Errors reflect an issue with hip range of motion"""
        pass

    ERROR_UNKNOWN: HipRangeOfMotionResult.Error.ValueType  # 0
    ERROR_NONE: HipRangeOfMotionResult.Error.ValueType  # 1
    ERROR_OBSTRUCTED: HipRangeOfMotionResult.Error.ValueType  # 2

    ERROR_FIELD_NUMBER: builtins.int
    HX_FIELD_NUMBER: builtins.int
    HY_FIELD_NUMBER: builtins.int
    error: global___HipRangeOfMotionResult.Error.ValueType
    @property
    def hx(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """The measured angles (radians) of the HX and HY joints where the obstruction was detected"""
        pass
    @property
    def hy(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(self,
        *,
        error: global___HipRangeOfMotionResult.Error.ValueType = ...,
        hx: typing.Optional[typing.Iterable[builtins.float]] = ...,
        hy: typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","hx",b"hx","hy",b"hy"]) -> None: ...
global___HipRangeOfMotionResult = HipRangeOfMotionResult

class CameraCalibrationCommandRequest(google.protobuf.message.Message):
    """Request for the CameraCalibrationCommand service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Command:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CommandEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[CameraCalibrationCommandRequest._Command.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        COMMAND_UNKNOWN: CameraCalibrationCommandRequest._Command.ValueType  # 0
        """Unused enum."""

        COMMAND_START: CameraCalibrationCommandRequest._Command.ValueType  # 1
        """Start calibration routine."""

        COMMAND_CANCEL: CameraCalibrationCommandRequest._Command.ValueType  # 2
        """Cancel calibration routine."""

    class Command(_Command, metaclass=_CommandEnumTypeWrapper):
        pass

    COMMAND_UNKNOWN: CameraCalibrationCommandRequest.Command.ValueType  # 0
    """Unused enum."""

    COMMAND_START: CameraCalibrationCommandRequest.Command.ValueType  # 1
    """Start calibration routine."""

    COMMAND_CANCEL: CameraCalibrationCommandRequest.Command.ValueType  # 2
    """Cancel calibration routine."""


    HEADER_FIELD_NUMBER: builtins.int
    LEASE_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def lease(self) -> bosdyn.api.lease_pb2.Lease:
        """The Lease to show ownership of the robot. Lease is required for all cal commands."""
        pass
    command: global___CameraCalibrationCommandRequest.Command.ValueType
    """Command to start/stop the calibration."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        lease: typing.Optional[bosdyn.api.lease_pb2.Lease] = ...,
        command: global___CameraCalibrationCommandRequest.Command.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","lease",b"lease"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["command",b"command","header",b"header","lease",b"lease"]) -> None: ...
global___CameraCalibrationCommandRequest = CameraCalibrationCommandRequest

class CameraCalibrationCommandResponse(google.protobuf.message.Message):
    """Response for the CameraCalibrationCommand service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    LEASE_USE_RESULT_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def lease_use_result(self) -> bosdyn.api.lease_pb2.LeaseUseResult:
        """Details about how the lease was used."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        lease_use_result: typing.Optional[bosdyn.api.lease_pb2.LeaseUseResult] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","lease_use_result",b"lease_use_result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","lease_use_result",b"lease_use_result"]) -> None: ...
global___CameraCalibrationCommandResponse = CameraCalibrationCommandResponse

class CameraCalibrationFeedbackRequest(google.protobuf.message.Message):
    """Request for the CameraCalibrationFeedback service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header"]) -> None: ...
global___CameraCalibrationFeedbackRequest = CameraCalibrationFeedbackRequest

class CameraCalibrationFeedbackResponse(google.protobuf.message.Message):
    """Response for the CameraCalibrationFeedback service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[CameraCalibrationFeedbackResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: CameraCalibrationFeedbackResponse._Status.ValueType  # 0
        """Unused enum."""

        STATUS_PROCESSING: CameraCalibrationFeedbackResponse._Status.ValueType  # 1
        """The robot is actively running calibration routine."""

        STATUS_SUCCESS: CameraCalibrationFeedbackResponse._Status.ValueType  # 2
        """The robot successfully ran calibration routine and
        is ready to use again.
        """

        STATUS_USER_CANCELED: CameraCalibrationFeedbackResponse._Status.ValueType  # 3
        """API client canceled calibration."""

        STATUS_POWER_ERROR: CameraCalibrationFeedbackResponse._Status.ValueType  # 4
        """The robot is not powered on."""

        STATUS_LEASE_ERROR: CameraCalibrationFeedbackResponse._Status.ValueType  # 5
        """Ownership error during calibration."""

        STATUS_ROBOT_COMMAND_ERROR: CameraCalibrationFeedbackResponse._Status.ValueType  # 7
        """Robot encountered an error while trying to move
        around the calibration target. Robot possibly
        encountered a fault. Check robot state for more
        details
        """

        STATUS_CALIBRATION_ERROR: CameraCalibrationFeedbackResponse._Status.ValueType  # 8
        """Calibration procedure produced an invalid result.
        This may occur in poor lighting conditions or if
        calibration target moved during calibration
        procedure.
        """

        STATUS_INTERNAL_ERROR: CameraCalibrationFeedbackResponse._Status.ValueType  # 9
        """Something extraordinary happened. Try power cycling robot or contact BD."""

        STATUS_CAMERA_FOCUS_ERROR: CameraCalibrationFeedbackResponse._Status.ValueType  # 14
        """Camera focus issue detected. This is a hardware issue."""

        STATUS_TARGET_NOT_CENTERED: CameraCalibrationFeedbackResponse._Status.ValueType  # 6
        """Target partially, but not fully, in view when starting calibration."""

        STATUS_TARGET_NOT_IN_VIEW: CameraCalibrationFeedbackResponse._Status.ValueType  # 11
        """Target not visible when starting calibration."""

        STATUS_TARGET_NOT_GRAVITY_ALIGNED: CameraCalibrationFeedbackResponse._Status.ValueType  # 12
        """Target not aligned with gravity when starting calibration."""

        STATUS_TARGET_UPSIDE_DOWN: CameraCalibrationFeedbackResponse._Status.ValueType  # 13
        """Target upside down when starting calibration."""

        STATUS_NEVER_RUN: CameraCalibrationFeedbackResponse._Status.ValueType  # 10
        """Calibration routine has never been run. No feedback to give."""

        STATUS_CAMERA_NOT_DETECTED: CameraCalibrationFeedbackResponse._Status.ValueType  # 15
        """One of the cameras is not detected on the USB bus."""

        STATUS_INTRINSIC_WRITE_FAILED: CameraCalibrationFeedbackResponse._Status.ValueType  # 16
        """Failed to write intrinsic calibration."""

        STATUS_EXTRINSIC_WRITE_FAILED: CameraCalibrationFeedbackResponse._Status.ValueType  # 17
        """Failed to write extrinsic calibration."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: CameraCalibrationFeedbackResponse.Status.ValueType  # 0
    """Unused enum."""

    STATUS_PROCESSING: CameraCalibrationFeedbackResponse.Status.ValueType  # 1
    """The robot is actively running calibration routine."""

    STATUS_SUCCESS: CameraCalibrationFeedbackResponse.Status.ValueType  # 2
    """The robot successfully ran calibration routine and
    is ready to use again.
    """

    STATUS_USER_CANCELED: CameraCalibrationFeedbackResponse.Status.ValueType  # 3
    """API client canceled calibration."""

    STATUS_POWER_ERROR: CameraCalibrationFeedbackResponse.Status.ValueType  # 4
    """The robot is not powered on."""

    STATUS_LEASE_ERROR: CameraCalibrationFeedbackResponse.Status.ValueType  # 5
    """Ownership error during calibration."""

    STATUS_ROBOT_COMMAND_ERROR: CameraCalibrationFeedbackResponse.Status.ValueType  # 7
    """Robot encountered an error while trying to move
    around the calibration target. Robot possibly
    encountered a fault. Check robot state for more
    details
    """

    STATUS_CALIBRATION_ERROR: CameraCalibrationFeedbackResponse.Status.ValueType  # 8
    """Calibration procedure produced an invalid result.
    This may occur in poor lighting conditions or if
    calibration target moved during calibration
    procedure.
    """

    STATUS_INTERNAL_ERROR: CameraCalibrationFeedbackResponse.Status.ValueType  # 9
    """Something extraordinary happened. Try power cycling robot or contact BD."""

    STATUS_CAMERA_FOCUS_ERROR: CameraCalibrationFeedbackResponse.Status.ValueType  # 14
    """Camera focus issue detected. This is a hardware issue."""

    STATUS_TARGET_NOT_CENTERED: CameraCalibrationFeedbackResponse.Status.ValueType  # 6
    """Target partially, but not fully, in view when starting calibration."""

    STATUS_TARGET_NOT_IN_VIEW: CameraCalibrationFeedbackResponse.Status.ValueType  # 11
    """Target not visible when starting calibration."""

    STATUS_TARGET_NOT_GRAVITY_ALIGNED: CameraCalibrationFeedbackResponse.Status.ValueType  # 12
    """Target not aligned with gravity when starting calibration."""

    STATUS_TARGET_UPSIDE_DOWN: CameraCalibrationFeedbackResponse.Status.ValueType  # 13
    """Target upside down when starting calibration."""

    STATUS_NEVER_RUN: CameraCalibrationFeedbackResponse.Status.ValueType  # 10
    """Calibration routine has never been run. No feedback to give."""

    STATUS_CAMERA_NOT_DETECTED: CameraCalibrationFeedbackResponse.Status.ValueType  # 15
    """One of the cameras is not detected on the USB bus."""

    STATUS_INTRINSIC_WRITE_FAILED: CameraCalibrationFeedbackResponse.Status.ValueType  # 16
    """Failed to write intrinsic calibration."""

    STATUS_EXTRINSIC_WRITE_FAILED: CameraCalibrationFeedbackResponse.Status.ValueType  # 17
    """Failed to write extrinsic calibration."""


    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    PROGRESS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    status: global___CameraCalibrationFeedbackResponse.Status.ValueType
    """Status of camera calibration procedure."""

    progress: builtins.float
    """The approximate progress of the calibration routine, range [0-1].
    Status takes precedence over progress value.
    """

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: global___CameraCalibrationFeedbackResponse.Status.ValueType = ...,
        progress: builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","progress",b"progress","status",b"status"]) -> None: ...
global___CameraCalibrationFeedbackResponse = CameraCalibrationFeedbackResponse
