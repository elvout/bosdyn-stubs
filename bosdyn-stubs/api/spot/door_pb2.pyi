"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.basic_command_pb2
import bosdyn.api.geometry_pb2
import bosdyn.api.header_pb2
import bosdyn.api.lease_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class OpenDoorCommandRequest(google.protobuf.message.Message):
    """A door command for the robot to execute plus a lease."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    LEASE_FIELD_NUMBER: builtins.int
    DOOR_COMMAND_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def lease(self) -> bosdyn.api.lease_pb2.Lease:
        """The Lease to show ownership of the robot."""
        pass
    @property
    def door_command(self) -> global___DoorCommand.Request:
        """The command to execute."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        lease: typing.Optional[bosdyn.api.lease_pb2.Lease] = ...,
        door_command: typing.Optional[global___DoorCommand.Request] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["door_command",b"door_command","header",b"header","lease",b"lease"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["door_command",b"door_command","header",b"header","lease",b"lease"]) -> None: ...
global___OpenDoorCommandRequest = OpenDoorCommandRequest

class OpenDoorCommandResponse(google.protobuf.message.Message):
    """Response to the door command request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[OpenDoorCommandResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: OpenDoorCommandResponse._Status.ValueType  # 0
        """An unknown / unexpected error occurred."""

        STATUS_OK: OpenDoorCommandResponse._Status.ValueType  # 1
        """Request was accepted."""

        STATUS_ROBOT_COMMAND_ERROR: OpenDoorCommandResponse._Status.ValueType  # 2
        """Error sending command to RobotCommandService."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: OpenDoorCommandResponse.Status.ValueType  # 0
    """An unknown / unexpected error occurred."""

    STATUS_OK: OpenDoorCommandResponse.Status.ValueType  # 1
    """Request was accepted."""

    STATUS_ROBOT_COMMAND_ERROR: OpenDoorCommandResponse.Status.ValueType  # 2
    """Error sending command to RobotCommandService."""


    HEADER_FIELD_NUMBER: builtins.int
    LEASE_USE_RESULT_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    DOOR_COMMAND_ID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def lease_use_result(self) -> bosdyn.api.lease_pb2.LeaseUseResult:
        """Details about how the lease was used."""
        pass
    status: global___OpenDoorCommandResponse.Status.ValueType
    """Return status for a request."""

    message: typing.Text
    """Human-readable error description.  Not for programmatic analysis."""

    door_command_id: builtins.int
    """Unique identifier for the command, If empty, command was not accepted."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        lease_use_result: typing.Optional[bosdyn.api.lease_pb2.LeaseUseResult] = ...,
        status: global___OpenDoorCommandResponse.Status.ValueType = ...,
        message: typing.Text = ...,
        door_command_id: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","lease_use_result",b"lease_use_result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["door_command_id",b"door_command_id","header",b"header","lease_use_result",b"lease_use_result","message",b"message","status",b"status"]) -> None: ...
global___OpenDoorCommandResponse = OpenDoorCommandResponse

class OpenDoorFeedbackRequest(google.protobuf.message.Message):
    """A request for feedback of a specific door command."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    DOOR_COMMAND_ID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    door_command_id: builtins.int
    """Unique identifier for the command, provided by OpenDoorResponse."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        door_command_id: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["door_command_id",b"door_command_id","header",b"header"]) -> None: ...
global___OpenDoorFeedbackRequest = OpenDoorFeedbackRequest

class OpenDoorFeedbackResponse(google.protobuf.message.Message):
    """Feedback for a specific door command. This RPC reports the robot's progress opening a door."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    FEEDBACK_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    status: bosdyn.api.basic_command_pb2.RobotCommandFeedbackStatus.Status.ValueType
    """Generic robot command feedback."""

    @property
    def feedback(self) -> global___DoorCommand.Feedback:
        """Specific door full body command feedback."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: bosdyn.api.basic_command_pb2.RobotCommandFeedbackStatus.Status.ValueType = ...,
        feedback: typing.Optional[global___DoorCommand.Feedback] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["feedback",b"feedback","header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["feedback",b"feedback","header",b"header","status",b"status"]) -> None: ...
global___OpenDoorFeedbackResponse = OpenDoorFeedbackResponse

class DoorCommand(google.protobuf.message.Message):
    """ Door Command specific request and Feedback."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _HingeSide:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _HingeSideEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DoorCommand._HingeSide.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        HINGE_SIDE_UNKNOWN: DoorCommand._HingeSide.ValueType  # 0
        HINGE_SIDE_LEFT: DoorCommand._HingeSide.ValueType  # 1
        HINGE_SIDE_RIGHT: DoorCommand._HingeSide.ValueType  # 2
    class HingeSide(_HingeSide, metaclass=_HingeSideEnumTypeWrapper):
        """Specify if the hinge is on the left or right side of the door, when looking at the door,
        relative to the door handle.
        """
        pass

    HINGE_SIDE_UNKNOWN: DoorCommand.HingeSide.ValueType  # 0
    HINGE_SIDE_LEFT: DoorCommand.HingeSide.ValueType  # 1
    HINGE_SIDE_RIGHT: DoorCommand.HingeSide.ValueType  # 2

    class _SwingDirection:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SwingDirectionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DoorCommand._SwingDirection.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SWING_DIRECTION_UNKNOWN: DoorCommand._SwingDirection.ValueType  # 0
        SWING_DIRECTION_INSWING: DoorCommand._SwingDirection.ValueType  # 1
        SWING_DIRECTION_OUTSWING: DoorCommand._SwingDirection.ValueType  # 2
    class SwingDirection(_SwingDirection, metaclass=_SwingDirectionEnumTypeWrapper):
        """Specify if the door is push or pull, when looking at the door."""
        pass

    SWING_DIRECTION_UNKNOWN: DoorCommand.SwingDirection.ValueType  # 0
    SWING_DIRECTION_INSWING: DoorCommand.SwingDirection.ValueType  # 1
    SWING_DIRECTION_OUTSWING: DoorCommand.SwingDirection.ValueType  # 2

    class _HandleType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _HandleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DoorCommand._HandleType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        HANDLE_TYPE_UNKNOWN: DoorCommand._HandleType.ValueType  # 0
        HANDLE_TYPE_LEVER: DoorCommand._HandleType.ValueType  # 1
        HANDLE_TYPE_KNOB: DoorCommand._HandleType.ValueType  # 2
        HANDLE_TYPE_FIXED_GRASP: DoorCommand._HandleType.ValueType  # 3
    class HandleType(_HandleType, metaclass=_HandleTypeEnumTypeWrapper):
        """Specify type of door handle."""
        pass

    HANDLE_TYPE_UNKNOWN: DoorCommand.HandleType.ValueType  # 0
    HANDLE_TYPE_LEVER: DoorCommand.HandleType.ValueType  # 1
    HANDLE_TYPE_KNOB: DoorCommand.HandleType.ValueType  # 2
    HANDLE_TYPE_FIXED_GRASP: DoorCommand.HandleType.ValueType  # 3

    class AutoGraspCommand(google.protobuf.message.Message):
        """The robot searches along a ray for the door handle and automatically grasp it before
        executing door opening.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FRAME_NAME_FIELD_NUMBER: builtins.int
        SEARCH_RAY_START_IN_FRAME_FIELD_NUMBER: builtins.int
        SEARCH_RAY_END_IN_FRAME_FIELD_NUMBER: builtins.int
        HINGE_SIDE_FIELD_NUMBER: builtins.int
        SWING_DIRECTION_FIELD_NUMBER: builtins.int
        frame_name: typing.Text
        """The name of the frame that the following fields are expressed in."""

        @property
        def search_ray_start_in_frame(self) -> bosdyn.api.geometry_pb2.Vec3:
            """The start of the ray the robot searches along for the door handle."""
            pass
        @property
        def search_ray_end_in_frame(self) -> bosdyn.api.geometry_pb2.Vec3:
            """The end of the ray the robot searches along for the door handle."""
            pass
        hinge_side: global___DoorCommand.HingeSide.ValueType
        """The side of the hinge with respect to the robot when facing the door."""

        swing_direction: global___DoorCommand.SwingDirection.ValueType
        """The direction the door moves with respect to the robot."""

        def __init__(self,
            *,
            frame_name: typing.Text = ...,
            search_ray_start_in_frame: typing.Optional[bosdyn.api.geometry_pb2.Vec3] = ...,
            search_ray_end_in_frame: typing.Optional[bosdyn.api.geometry_pb2.Vec3] = ...,
            hinge_side: global___DoorCommand.HingeSide.ValueType = ...,
            swing_direction: global___DoorCommand.SwingDirection.ValueType = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["search_ray_end_in_frame",b"search_ray_end_in_frame","search_ray_start_in_frame",b"search_ray_start_in_frame"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["frame_name",b"frame_name","hinge_side",b"hinge_side","search_ray_end_in_frame",b"search_ray_end_in_frame","search_ray_start_in_frame",b"search_ray_start_in_frame","swing_direction",b"swing_direction"]) -> None: ...

    class WarmstartCommand(google.protobuf.message.Message):
        """The robot is already grasping the door handle and will continue opening the door based on
        user specified params.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        HINGE_SIDE_FIELD_NUMBER: builtins.int
        SWING_DIRECTION_FIELD_NUMBER: builtins.int
        HANDLE_TYPE_FIELD_NUMBER: builtins.int
        hinge_side: global___DoorCommand.HingeSide.ValueType
        """The side of the hinge with respect to the robot when facing the door."""

        swing_direction: global___DoorCommand.SwingDirection.ValueType
        """The direction the door moves with respect to the robot."""

        handle_type: global___DoorCommand.HandleType.ValueType
        """The type of handle on the door."""

        def __init__(self,
            *,
            hinge_side: global___DoorCommand.HingeSide.ValueType = ...,
            swing_direction: global___DoorCommand.SwingDirection.ValueType = ...,
            handle_type: global___DoorCommand.HandleType.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["handle_type",b"handle_type","hinge_side",b"hinge_side","swing_direction",b"swing_direction"]) -> None: ...

    class AutoPushCommand(google.protobuf.message.Message):
        """Open doors that do not require a grasp, just a push. This could be a door with no latching
        mechanism that just requires a push, or a door with a pushbar.
        The robot will automatically push the door open and walk through.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FRAME_NAME_FIELD_NUMBER: builtins.int
        PUSH_POINT_IN_FRAME_FIELD_NUMBER: builtins.int
        HINGE_SIDE_FIELD_NUMBER: builtins.int
        frame_name: typing.Text
        """The name of the frame that the following fields are expressed in."""

        @property
        def push_point_in_frame(self) -> bosdyn.api.geometry_pb2.Vec3:
            """The point that the robot will push on."""
            pass
        hinge_side: global___DoorCommand.HingeSide.ValueType
        """The side of the hinge with respect to the robot when facing the door."""

        def __init__(self,
            *,
            frame_name: typing.Text = ...,
            push_point_in_frame: typing.Optional[bosdyn.api.geometry_pb2.Vec3] = ...,
            hinge_side: global___DoorCommand.HingeSide.ValueType = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["push_point_in_frame",b"push_point_in_frame"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["frame_name",b"frame_name","hinge_side",b"hinge_side","push_point_in_frame",b"push_point_in_frame"]) -> None: ...

    class Request(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        AUTO_GRASP_COMMAND_FIELD_NUMBER: builtins.int
        WARMSTART_COMMAND_FIELD_NUMBER: builtins.int
        AUTO_PUSH_COMMAND_FIELD_NUMBER: builtins.int
        @property
        def auto_grasp_command(self) -> global___DoorCommand.AutoGraspCommand: ...
        @property
        def warmstart_command(self) -> global___DoorCommand.WarmstartCommand: ...
        @property
        def auto_push_command(self) -> global___DoorCommand.AutoPushCommand: ...
        def __init__(self,
            *,
            auto_grasp_command: typing.Optional[global___DoorCommand.AutoGraspCommand] = ...,
            warmstart_command: typing.Optional[global___DoorCommand.WarmstartCommand] = ...,
            auto_push_command: typing.Optional[global___DoorCommand.AutoPushCommand] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["auto_grasp_command",b"auto_grasp_command","auto_push_command",b"auto_push_command","command",b"command","warmstart_command",b"warmstart_command"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["auto_grasp_command",b"auto_grasp_command","auto_push_command",b"auto_push_command","command",b"command","warmstart_command",b"warmstart_command"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["command",b"command"]) -> typing.Optional[typing_extensions.Literal["auto_grasp_command","warmstart_command","auto_push_command"]]: ...

    class Feedback(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Status:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DoorCommand.Feedback._Status.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            STATUS_UNKNOWN: DoorCommand.Feedback._Status.ValueType  # 0
            """STATUS_UNKNOWN should never be used. If used, an internal error has happened."""

            STATUS_COMPLETED: DoorCommand.Feedback._Status.ValueType  # 1
            """Robot has finished opening the door."""

            STATUS_IN_PROGRESS: DoorCommand.Feedback._Status.ValueType  # 2
            """Robot is attempting to open the door."""

        class Status(_Status, metaclass=_StatusEnumTypeWrapper):
            pass

        STATUS_UNKNOWN: DoorCommand.Feedback.Status.ValueType  # 0
        """STATUS_UNKNOWN should never be used. If used, an internal error has happened."""

        STATUS_COMPLETED: DoorCommand.Feedback.Status.ValueType  # 1
        """Robot has finished opening the door."""

        STATUS_IN_PROGRESS: DoorCommand.Feedback.Status.ValueType  # 2
        """Robot is attempting to open the door."""


        STATUS_FIELD_NUMBER: builtins.int
        status: global___DoorCommand.Feedback.Status.ValueType
        """Current status of the command."""

        def __init__(self,
            *,
            status: global___DoorCommand.Feedback.Status.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["status",b"status"]) -> None: ...

    def __init__(self,
        ) -> None: ...
global___DoorCommand = DoorCommand
