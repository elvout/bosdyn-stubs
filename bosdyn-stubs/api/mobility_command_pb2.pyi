"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.basic_command_pb2
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class MobilityCommand(google.protobuf.message.Message):
    """The robot command message to specify a basic command that moves the robot."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Request(google.protobuf.message.Message):
        """The mobility request must be one of the basic command primitives."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        SE2_TRAJECTORY_REQUEST_FIELD_NUMBER: builtins.int
        SE2_VELOCITY_REQUEST_FIELD_NUMBER: builtins.int
        SIT_REQUEST_FIELD_NUMBER: builtins.int
        STAND_REQUEST_FIELD_NUMBER: builtins.int
        STANCE_REQUEST_FIELD_NUMBER: builtins.int
        STOP_REQUEST_FIELD_NUMBER: builtins.int
        FOLLOW_ARM_REQUEST_FIELD_NUMBER: builtins.int
        PARAMS_FIELD_NUMBER: builtins.int
        @property
        def se2_trajectory_request(self) -> bosdyn.api.basic_command_pb2.SE2TrajectoryCommand.Request:
            """Command to move the robot along a trajectory."""
            pass
        @property
        def se2_velocity_request(self) -> bosdyn.api.basic_command_pb2.SE2VelocityCommand.Request:
            """Command to move the robot at a fixed velocity."""
            pass
        @property
        def sit_request(self) -> bosdyn.api.basic_command_pb2.SitCommand.Request:
            """Command to sit the robot down."""
            pass
        @property
        def stand_request(self) -> bosdyn.api.basic_command_pb2.StandCommand.Request:
            """Command to stand up the robot."""
            pass
        @property
        def stance_request(self) -> bosdyn.api.basic_command_pb2.StanceCommand.Request: ...
        @property
        def stop_request(self) -> bosdyn.api.basic_command_pb2.StopCommand.Request: ...
        @property
        def follow_arm_request(self) -> bosdyn.api.basic_command_pb2.FollowArmCommand.Request: ...
        @property
        def params(self) -> google.protobuf.any_pb2.Any:
            """Robot specific command parameters."""
            pass
        def __init__(self,
            *,
            se2_trajectory_request: typing.Optional[bosdyn.api.basic_command_pb2.SE2TrajectoryCommand.Request] = ...,
            se2_velocity_request: typing.Optional[bosdyn.api.basic_command_pb2.SE2VelocityCommand.Request] = ...,
            sit_request: typing.Optional[bosdyn.api.basic_command_pb2.SitCommand.Request] = ...,
            stand_request: typing.Optional[bosdyn.api.basic_command_pb2.StandCommand.Request] = ...,
            stance_request: typing.Optional[bosdyn.api.basic_command_pb2.StanceCommand.Request] = ...,
            stop_request: typing.Optional[bosdyn.api.basic_command_pb2.StopCommand.Request] = ...,
            follow_arm_request: typing.Optional[bosdyn.api.basic_command_pb2.FollowArmCommand.Request] = ...,
            params: typing.Optional[google.protobuf.any_pb2.Any] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["command",b"command","follow_arm_request",b"follow_arm_request","params",b"params","se2_trajectory_request",b"se2_trajectory_request","se2_velocity_request",b"se2_velocity_request","sit_request",b"sit_request","stance_request",b"stance_request","stand_request",b"stand_request","stop_request",b"stop_request"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["command",b"command","follow_arm_request",b"follow_arm_request","params",b"params","se2_trajectory_request",b"se2_trajectory_request","se2_velocity_request",b"se2_velocity_request","sit_request",b"sit_request","stance_request",b"stance_request","stand_request",b"stand_request","stop_request",b"stop_request"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["command",b"command"]) -> typing.Optional[typing_extensions.Literal["se2_trajectory_request","se2_velocity_request","sit_request","stand_request","stance_request","stop_request","follow_arm_request"]]: ...

    class Feedback(google.protobuf.message.Message):
        """The feedback for the mobility command that will provide information on the progress
        of the robot command.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        SE2_TRAJECTORY_FEEDBACK_FIELD_NUMBER: builtins.int
        SE2_VELOCITY_FEEDBACK_FIELD_NUMBER: builtins.int
        SIT_FEEDBACK_FIELD_NUMBER: builtins.int
        STAND_FEEDBACK_FIELD_NUMBER: builtins.int
        STANCE_FEEDBACK_FIELD_NUMBER: builtins.int
        STOP_FEEDBACK_FIELD_NUMBER: builtins.int
        FOLLOW_ARM_FEEDBACK_FIELD_NUMBER: builtins.int
        STATUS_FIELD_NUMBER: builtins.int
        @property
        def se2_trajectory_feedback(self) -> bosdyn.api.basic_command_pb2.SE2TrajectoryCommand.Feedback:
            """Feedback for the trajectory command."""
            pass
        @property
        def se2_velocity_feedback(self) -> bosdyn.api.basic_command_pb2.SE2VelocityCommand.Feedback:
            """Feedback for the velocity command."""
            pass
        @property
        def sit_feedback(self) -> bosdyn.api.basic_command_pb2.SitCommand.Feedback:
            """Feedback for the sit command."""
            pass
        @property
        def stand_feedback(self) -> bosdyn.api.basic_command_pb2.StandCommand.Feedback:
            """Feedback for the stand command."""
            pass
        @property
        def stance_feedback(self) -> bosdyn.api.basic_command_pb2.StanceCommand.Feedback: ...
        @property
        def stop_feedback(self) -> bosdyn.api.basic_command_pb2.StopCommand.Feedback: ...
        @property
        def follow_arm_feedback(self) -> bosdyn.api.basic_command_pb2.FollowArmCommand.Feedback: ...
        status: bosdyn.api.basic_command_pb2.RobotCommandFeedbackStatus.Status.ValueType
        def __init__(self,
            *,
            se2_trajectory_feedback: typing.Optional[bosdyn.api.basic_command_pb2.SE2TrajectoryCommand.Feedback] = ...,
            se2_velocity_feedback: typing.Optional[bosdyn.api.basic_command_pb2.SE2VelocityCommand.Feedback] = ...,
            sit_feedback: typing.Optional[bosdyn.api.basic_command_pb2.SitCommand.Feedback] = ...,
            stand_feedback: typing.Optional[bosdyn.api.basic_command_pb2.StandCommand.Feedback] = ...,
            stance_feedback: typing.Optional[bosdyn.api.basic_command_pb2.StanceCommand.Feedback] = ...,
            stop_feedback: typing.Optional[bosdyn.api.basic_command_pb2.StopCommand.Feedback] = ...,
            follow_arm_feedback: typing.Optional[bosdyn.api.basic_command_pb2.FollowArmCommand.Feedback] = ...,
            status: bosdyn.api.basic_command_pb2.RobotCommandFeedbackStatus.Status.ValueType = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["feedback",b"feedback","follow_arm_feedback",b"follow_arm_feedback","se2_trajectory_feedback",b"se2_trajectory_feedback","se2_velocity_feedback",b"se2_velocity_feedback","sit_feedback",b"sit_feedback","stance_feedback",b"stance_feedback","stand_feedback",b"stand_feedback","stop_feedback",b"stop_feedback"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["feedback",b"feedback","follow_arm_feedback",b"follow_arm_feedback","se2_trajectory_feedback",b"se2_trajectory_feedback","se2_velocity_feedback",b"se2_velocity_feedback","sit_feedback",b"sit_feedback","stance_feedback",b"stance_feedback","stand_feedback",b"stand_feedback","status",b"status","stop_feedback",b"stop_feedback"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["feedback",b"feedback"]) -> typing.Optional[typing_extensions.Literal["se2_trajectory_feedback","se2_velocity_feedback","sit_feedback","stand_feedback","stance_feedback","stop_feedback","follow_arm_feedback"]]: ...

    def __init__(self,
        ) -> None: ...
global___MobilityCommand = MobilityCommand
