"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.header_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class TimeSyncRoundTrip(google.protobuf.message.Message):
    """Timestamp information from a full GRPC call round-trip.
    These are used to estimate the round-trip communication time and difference between
    client and server clocks.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLIENT_TX_FIELD_NUMBER: builtins.int
    SERVER_RX_FIELD_NUMBER: builtins.int
    SERVER_TX_FIELD_NUMBER: builtins.int
    CLIENT_RX_FIELD_NUMBER: builtins.int
    @property
    def client_tx(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Client system time when the message was sent, if not zero."""
        pass
    @property
    def server_rx(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Server system time when the message was received, if not zero."""
        pass
    @property
    def server_tx(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Server system time when the response was sent, if not zero."""
        pass
    @property
    def client_rx(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Client time when the response was received, if not zero."""
        pass
    def __init__(self,
        *,
        client_tx: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        server_rx: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        server_tx: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        client_rx: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client_rx",b"client_rx","client_tx",b"client_tx","server_rx",b"server_rx","server_tx",b"server_tx"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["client_rx",b"client_rx","client_tx",b"client_tx","server_rx",b"server_rx","server_tx",b"server_tx"]) -> None: ...
global___TimeSyncRoundTrip = TimeSyncRoundTrip

class TimeSyncEstimate(google.protobuf.message.Message):
    """Estimate of network speed and clock skew.  Both for the last
    complete sample and a recent average.  Populated by the server.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ROUND_TRIP_TIME_FIELD_NUMBER: builtins.int
    CLOCK_SKEW_FIELD_NUMBER: builtins.int
    @property
    def round_trip_time(self) -> google.protobuf.duration_pb2.Duration:
        """Observed network delay (excludes processing between server_rx and server_tx).
        If zero, this estimate is unpopulated.
        """
        pass
    @property
    def clock_skew(self) -> google.protobuf.duration_pb2.Duration:
        """Add the skew to the client system clock to get the server clock."""
        pass
    def __init__(self,
        *,
        round_trip_time: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        clock_skew: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["clock_skew",b"clock_skew","round_trip_time",b"round_trip_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["clock_skew",b"clock_skew","round_trip_time",b"round_trip_time"]) -> None: ...
global___TimeSyncEstimate = TimeSyncEstimate

class TimeSyncState(google.protobuf.message.Message):
    """Current best estimate status of time sync."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TimeSyncState._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: TimeSyncState._Status.ValueType  # 0
        """Invalid, do not use."""

        STATUS_OK: TimeSyncState._Status.ValueType  # 1
        """Clock skew is available."""

        STATUS_MORE_SAMPLES_NEEDED: TimeSyncState._Status.ValueType  # 2
        """More updates are required to establish a synchronization estimate."""

        STATUS_SERVICE_NOT_READY: TimeSyncState._Status.ValueType  # 3
        """Server still establishing time sync internally."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: TimeSyncState.Status.ValueType  # 0
    """Invalid, do not use."""

    STATUS_OK: TimeSyncState.Status.ValueType  # 1
    """Clock skew is available."""

    STATUS_MORE_SAMPLES_NEEDED: TimeSyncState.Status.ValueType  # 2
    """More updates are required to establish a synchronization estimate."""

    STATUS_SERVICE_NOT_READY: TimeSyncState.Status.ValueType  # 3
    """Server still establishing time sync internally."""


    BEST_ESTIMATE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    MEASUREMENT_TIME_FIELD_NUMBER: builtins.int
    @property
    def best_estimate(self) -> global___TimeSyncEstimate:
        """Best clock synchronization estimate currently available, if any."""
        pass
    status: global___TimeSyncState.Status.ValueType
    """STATUS_OK once time sync is established."""

    @property
    def measurement_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time of best estimate, in server time."""
        pass
    def __init__(self,
        *,
        best_estimate: typing.Optional[global___TimeSyncEstimate] = ...,
        status: global___TimeSyncState.Status.ValueType = ...,
        measurement_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["best_estimate",b"best_estimate","measurement_time",b"measurement_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["best_estimate",b"best_estimate","measurement_time",b"measurement_time","status",b"status"]) -> None: ...
global___TimeSyncState = TimeSyncState

class TimeSyncUpdateRequest(google.protobuf.message.Message):
    """Request message for a time-sync Update RPC."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    PREVIOUS_ROUND_TRIP_FIELD_NUMBER: builtins.int
    CLOCK_IDENTIFIER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def previous_round_trip(self) -> global___TimeSyncRoundTrip:
        """Round-trip timing information from the previous Update request."""
        pass
    clock_identifier: typing.Text
    """Identifier to verify time sync between robot and client. If unset, server will assign
    one to client.
    """

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        previous_round_trip: typing.Optional[global___TimeSyncRoundTrip] = ...,
        clock_identifier: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","previous_round_trip",b"previous_round_trip"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["clock_identifier",b"clock_identifier","header",b"header","previous_round_trip",b"previous_round_trip"]) -> None: ...
global___TimeSyncUpdateRequest = TimeSyncUpdateRequest

class TimeSyncUpdateResponse(google.protobuf.message.Message):
    """Request message for a time-sync Update RPC."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    PREVIOUS_ESTIMATE_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    CLOCK_IDENTIFIER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def previous_estimate(self) -> global___TimeSyncEstimate:
        """Clock synchronization estimate from the previous RPC round-trip, if available."""
        pass
    @property
    def state(self) -> global___TimeSyncState:
        """Current best clock synchronization estimate according to server."""
        pass
    clock_identifier: typing.Text
    """Identifier to verify time sync between robot and client. Assigned upon first Request and
    echoed with each subsequent request.
    """

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        previous_estimate: typing.Optional[global___TimeSyncEstimate] = ...,
        state: typing.Optional[global___TimeSyncState] = ...,
        clock_identifier: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","previous_estimate",b"previous_estimate","state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["clock_identifier",b"clock_identifier","header",b"header","previous_estimate",b"previous_estimate","state",b"state"]) -> None: ...
global___TimeSyncUpdateResponse = TimeSyncUpdateResponse
