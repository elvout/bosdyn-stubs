"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.header_pb2
import bosdyn.api.lease_pb2
import bosdyn.api.mission.util_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class EstablishSessionRequest(google.protobuf.message.Message):
    """Information to initialize a session to the remote service
    for a particular mission node.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    LEASES_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def leases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.lease_pb2.Lease]:
        """All leases that the remote service may need."""
        pass
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.mission.util_pb2.VariableDeclaration]:
        """Use this to provide other data (e.g. from the blackboard).
        The RemoteGrpc node will provide the name of the node automatically.
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        leases: typing.Optional[typing.Iterable[bosdyn.api.lease_pb2.Lease]] = ...,
        inputs: typing.Optional[typing.Iterable[bosdyn.api.mission.util_pb2.VariableDeclaration]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","inputs",b"inputs","leases",b"leases"]) -> None: ...
global___EstablishSessionRequest = EstablishSessionRequest

class EstablishSessionResponse(google.protobuf.message.Message):
    """Provide the id to use for the particular mission node to tick this remote service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[EstablishSessionResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: EstablishSessionResponse._Status.ValueType  # 0
        """Status unknown/unset."""

        STATUS_OK: EstablishSessionResponse._Status.ValueType  # 1
        """Provided inputs / outputs are compatible."""

        STATUS_MISSING_LEASES: EstablishSessionResponse._Status.ValueType  # 2
        """Remote service needs leases on additional resources.
        If set, the missing_lease_resources field should contain the resources needed but not
        provided.
        """

        STATUS_MISSING_INPUTS: EstablishSessionResponse._Status.ValueType  # 3
        """Remote service needs additional inputs."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Possible results of establishing a session."""
        pass

    STATUS_UNKNOWN: EstablishSessionResponse.Status.ValueType  # 0
    """Status unknown/unset."""

    STATUS_OK: EstablishSessionResponse.Status.ValueType  # 1
    """Provided inputs / outputs are compatible."""

    STATUS_MISSING_LEASES: EstablishSessionResponse.Status.ValueType  # 2
    """Remote service needs leases on additional resources.
    If set, the missing_lease_resources field should contain the resources needed but not
    provided.
    """

    STATUS_MISSING_INPUTS: EstablishSessionResponse.Status.ValueType  # 3
    """Remote service needs additional inputs."""


    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    MISSING_LEASE_RESOURCES_FIELD_NUMBER: builtins.int
    LEASE_USE_RESULTS_FIELD_NUMBER: builtins.int
    MISSING_INPUTS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    status: global___EstablishSessionResponse.Status.ValueType
    """Result of this establish session request."""

    session_id: typing.Text
    """On success, contains an ID for this session."""

    @property
    def missing_lease_resources(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Need to provide leases on these resources."""
        pass
    @property
    def lease_use_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.lease_pb2.LeaseUseResult]:
        """Details about how any leases were used.
        Allowed to be empty, if leases were not actually used.
        """
        pass
    @property
    def missing_inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.mission.util_pb2.VariableDeclaration]:
        """The inputs required by the contacted node that were not mentioned in the request."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: global___EstablishSessionResponse.Status.ValueType = ...,
        session_id: typing.Text = ...,
        missing_lease_resources: typing.Optional[typing.Iterable[typing.Text]] = ...,
        lease_use_results: typing.Optional[typing.Iterable[bosdyn.api.lease_pb2.LeaseUseResult]] = ...,
        missing_inputs: typing.Optional[typing.Iterable[bosdyn.api.mission.util_pb2.VariableDeclaration]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","lease_use_results",b"lease_use_results","missing_inputs",b"missing_inputs","missing_lease_resources",b"missing_lease_resources","session_id",b"session_id","status",b"status"]) -> None: ...
global___EstablishSessionResponse = EstablishSessionResponse

class TickRequest(google.protobuf.message.Message):
    """Request that the remote tick itself for a particular node in the mission."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    LEASES_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    session_id: typing.Text
    """Session ID as returned by the EstablishSessionResponse.
    Used to guarantee coherence between a single client and a servicer.
    """

    @property
    def leases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.lease_pb2.Lease]:
        """All leases that the remote service may need."""
        pass
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.mission.util_pb2.KeyValue]:
        """Inputs provided to the servicer."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        session_id: typing.Text = ...,
        leases: typing.Optional[typing.Iterable[bosdyn.api.lease_pb2.Lease]] = ...,
        inputs: typing.Optional[typing.Iterable[bosdyn.api.mission.util_pb2.KeyValue]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","inputs",b"inputs","leases",b"leases","session_id",b"session_id"]) -> None: ...
global___TickRequest = TickRequest

class TickResponse(google.protobuf.message.Message):
    """Response with the results of the tick.
    Remote services should strive to return quickly, even if only returning RUNNING.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TickResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: TickResponse._Status.ValueType  # 0
        """Invalid; do not use."""

        STATUS_FAILURE: TickResponse._Status.ValueType  # 1
        """Node completed but failed."""

        STATUS_RUNNING: TickResponse._Status.ValueType  # 2
        """Node is processing and may finish in a future tick."""

        STATUS_SUCCESS: TickResponse._Status.ValueType  # 3
        """Node completed and succeeded."""

        STATUS_INVALID_SESSION_ID: TickResponse._Status.ValueType  # 4
        """The request provided an invalid session ID."""

        STATUS_MISSING_LEASES: TickResponse._Status.ValueType  # 5
        """The request was missing required leases."""

        STATUS_MISSING_INPUTS: TickResponse._Status.ValueType  # 6
        """The request was missing required inputs."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Possible results from the node. The FAILURE, RUNNING, and SUCCESS statuses map to the
        behavior tree terms, all others indicate an error in the TickRequest.
        """
        pass

    STATUS_UNKNOWN: TickResponse.Status.ValueType  # 0
    """Invalid; do not use."""

    STATUS_FAILURE: TickResponse.Status.ValueType  # 1
    """Node completed but failed."""

    STATUS_RUNNING: TickResponse.Status.ValueType  # 2
    """Node is processing and may finish in a future tick."""

    STATUS_SUCCESS: TickResponse.Status.ValueType  # 3
    """Node completed and succeeded."""

    STATUS_INVALID_SESSION_ID: TickResponse.Status.ValueType  # 4
    """The request provided an invalid session ID."""

    STATUS_MISSING_LEASES: TickResponse.Status.ValueType  # 5
    """The request was missing required leases."""

    STATUS_MISSING_INPUTS: TickResponse.Status.ValueType  # 6
    """The request was missing required inputs."""


    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    MISSING_LEASE_RESOURCES_FIELD_NUMBER: builtins.int
    LEASE_USE_RESULTS_FIELD_NUMBER: builtins.int
    MISSING_INPUTS_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    status: global___TickResponse.Status.ValueType
    """Result of the current tick."""

    @property
    def missing_lease_resources(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Need to provide leases on these resources."""
        pass
    @property
    def lease_use_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.lease_pb2.LeaseUseResult]:
        """Details about how any leases were used.
        Allowed to be empty, if leases were not actually used.
        """
        pass
    @property
    def missing_inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.mission.util_pb2.VariableDeclaration]:
        """Filled out when status is STATUS_MISSING_INPUTS, indicating what inputs were not in the
        request.
        """
        pass
    error_message: typing.Text
    """If you need to report other error details, you can use this field."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: global___TickResponse.Status.ValueType = ...,
        missing_lease_resources: typing.Optional[typing.Iterable[typing.Text]] = ...,
        lease_use_results: typing.Optional[typing.Iterable[bosdyn.api.lease_pb2.LeaseUseResult]] = ...,
        missing_inputs: typing.Optional[typing.Iterable[bosdyn.api.mission.util_pb2.VariableDeclaration]] = ...,
        error_message: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error_message",b"error_message","header",b"header","lease_use_results",b"lease_use_results","missing_inputs",b"missing_inputs","missing_lease_resources",b"missing_lease_resources","status",b"status"]) -> None: ...
global___TickResponse = TickResponse

class StopRequest(google.protobuf.message.Message):
    """Used to stop a node that was previously ticked, so that it knows that
    the next Tick represents a restart rather than a continuation.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    session_id: typing.Text
    """Session ID as returned by the EstablishSessionResponse.
    Used to guarantee coherence between a single client and a servicer.
    """

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        session_id: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","session_id",b"session_id"]) -> None: ...
global___StopRequest = StopRequest

class StopResponse(google.protobuf.message.Message):
    """Results of attempting to stop a remote node."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[StopResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: StopResponse._Status.ValueType  # 0
        """Status unknown/unset."""

        STATUS_OK: StopResponse._Status.ValueType  # 1
        """Service stopped."""

        STATUS_INVALID_SESSION_ID: StopResponse._Status.ValueType  # 2
        """The request provided an invalid session ID."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Possible results for a StopRequest."""
        pass

    STATUS_UNKNOWN: StopResponse.Status.ValueType  # 0
    """Status unknown/unset."""

    STATUS_OK: StopResponse.Status.ValueType  # 1
    """Service stopped."""

    STATUS_INVALID_SESSION_ID: StopResponse.Status.ValueType  # 2
    """The request provided an invalid session ID."""


    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    status: global___StopResponse.Status.ValueType
    """Result of the stop request."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: global___StopResponse.Status.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> None: ...
global___StopResponse = StopResponse

class TeardownSessionRequest(google.protobuf.message.Message):
    """End the session originally established by an EstablishSessionRequest."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    session_id: typing.Text
    """Session ID as returned by the EstablishSessionResponse.
    Used to guarantee coherence between a single client and a servicer.
    """

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        session_id: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","session_id",b"session_id"]) -> None: ...
global___TeardownSessionRequest = TeardownSessionRequest

class TeardownSessionResponse(google.protobuf.message.Message):
    """Results of ending a session."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TeardownSessionResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: TeardownSessionResponse._Status.ValueType  # 0
        """Status unknown/unset."""

        STATUS_OK: TeardownSessionResponse._Status.ValueType  # 1
        """Session was torn down -- servicer has probably wiped all associated data / state."""

        STATUS_INVALID_SESSION_ID: TeardownSessionResponse._Status.ValueType  # 2
        """The request provided an invalid session ID.
        This may mean the session was already torn down.
        """

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Possible results of ending a session."""
        pass

    STATUS_UNKNOWN: TeardownSessionResponse.Status.ValueType  # 0
    """Status unknown/unset."""

    STATUS_OK: TeardownSessionResponse.Status.ValueType  # 1
    """Session was torn down -- servicer has probably wiped all associated data / state."""

    STATUS_INVALID_SESSION_ID: TeardownSessionResponse.Status.ValueType  # 2
    """The request provided an invalid session ID.
    This may mean the session was already torn down.
    """


    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    status: global___TeardownSessionResponse.Status.ValueType
    """The result of a TeardownSessionRequest."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: global___TeardownSessionResponse.Status.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> None: ...
global___TeardownSessionResponse = TeardownSessionResponse
