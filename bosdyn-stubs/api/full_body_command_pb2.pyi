"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.basic_command_pb2
import bosdyn.api.payload_estimation_pb2
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class FullBodyCommand(google.protobuf.message.Message):
    """The robot command message to specify a basic command that requires full control of the entire
    robot to be completed.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Request(google.protobuf.message.Message):
        """The full body request must be one of the basic command primitives."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        STOP_REQUEST_FIELD_NUMBER: builtins.int
        FREEZE_REQUEST_FIELD_NUMBER: builtins.int
        SELFRIGHT_REQUEST_FIELD_NUMBER: builtins.int
        SAFE_POWER_OFF_REQUEST_FIELD_NUMBER: builtins.int
        BATTERY_CHANGE_POSE_REQUEST_FIELD_NUMBER: builtins.int
        PAYLOAD_ESTIMATION_REQUEST_FIELD_NUMBER: builtins.int
        CONSTRAINED_MANIPULATION_REQUEST_FIELD_NUMBER: builtins.int
        PARAMS_FIELD_NUMBER: builtins.int
        @property
        def stop_request(self) -> bosdyn.api.basic_command_pb2.StopCommand.Request:
            """Command to stop the robot."""
            pass
        @property
        def freeze_request(self) -> bosdyn.api.basic_command_pb2.FreezeCommand.Request:
            """Command to freeze all joints of the robot."""
            pass
        @property
        def selfright_request(self) -> bosdyn.api.basic_command_pb2.SelfRightCommand.Request:
            """Command to self-right the robot to a ready position."""
            pass
        @property
        def safe_power_off_request(self) -> bosdyn.api.basic_command_pb2.SafePowerOffCommand.Request:
            """Command to safely power off the robot."""
            pass
        @property
        def battery_change_pose_request(self) -> bosdyn.api.basic_command_pb2.BatteryChangePoseCommand.Request:
            """Command to put the robot in a position to easily change the battery."""
            pass
        @property
        def payload_estimation_request(self) -> bosdyn.api.payload_estimation_pb2.PayloadEstimationCommand.Request:
            """Command to perform payload mass property estimation"""
            pass
        @property
        def constrained_manipulation_request(self) -> bosdyn.api.basic_command_pb2.ConstrainedManipulationCommand.Request:
            """Command to perform full body constrained manipulation moves"""
            pass
        @property
        def params(self) -> google.protobuf.any_pb2.Any:
            """Robot specific command parameters."""
            pass
        def __init__(self,
            *,
            stop_request: typing.Optional[bosdyn.api.basic_command_pb2.StopCommand.Request] = ...,
            freeze_request: typing.Optional[bosdyn.api.basic_command_pb2.FreezeCommand.Request] = ...,
            selfright_request: typing.Optional[bosdyn.api.basic_command_pb2.SelfRightCommand.Request] = ...,
            safe_power_off_request: typing.Optional[bosdyn.api.basic_command_pb2.SafePowerOffCommand.Request] = ...,
            battery_change_pose_request: typing.Optional[bosdyn.api.basic_command_pb2.BatteryChangePoseCommand.Request] = ...,
            payload_estimation_request: typing.Optional[bosdyn.api.payload_estimation_pb2.PayloadEstimationCommand.Request] = ...,
            constrained_manipulation_request: typing.Optional[bosdyn.api.basic_command_pb2.ConstrainedManipulationCommand.Request] = ...,
            params: typing.Optional[google.protobuf.any_pb2.Any] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["battery_change_pose_request",b"battery_change_pose_request","command",b"command","constrained_manipulation_request",b"constrained_manipulation_request","freeze_request",b"freeze_request","params",b"params","payload_estimation_request",b"payload_estimation_request","safe_power_off_request",b"safe_power_off_request","selfright_request",b"selfright_request","stop_request",b"stop_request"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["battery_change_pose_request",b"battery_change_pose_request","command",b"command","constrained_manipulation_request",b"constrained_manipulation_request","freeze_request",b"freeze_request","params",b"params","payload_estimation_request",b"payload_estimation_request","safe_power_off_request",b"safe_power_off_request","selfright_request",b"selfright_request","stop_request",b"stop_request"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["command",b"command"]) -> typing.Optional[typing_extensions.Literal["stop_request","freeze_request","selfright_request","safe_power_off_request","battery_change_pose_request","payload_estimation_request","constrained_manipulation_request"]]: ...

    class Feedback(google.protobuf.message.Message):
        """The feedback for the fully body command that will provide information on the progress
        of the robot command.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        STOP_FEEDBACK_FIELD_NUMBER: builtins.int
        FREEZE_FEEDBACK_FIELD_NUMBER: builtins.int
        SELFRIGHT_FEEDBACK_FIELD_NUMBER: builtins.int
        SAFE_POWER_OFF_FEEDBACK_FIELD_NUMBER: builtins.int
        BATTERY_CHANGE_POSE_FEEDBACK_FIELD_NUMBER: builtins.int
        PAYLOAD_ESTIMATION_FEEDBACK_FIELD_NUMBER: builtins.int
        CONSTRAINED_MANIPULATION_FEEDBACK_FIELD_NUMBER: builtins.int
        STATUS_FIELD_NUMBER: builtins.int
        @property
        def stop_feedback(self) -> bosdyn.api.basic_command_pb2.StopCommand.Feedback:
            """Feedback for the stop command request."""
            pass
        @property
        def freeze_feedback(self) -> bosdyn.api.basic_command_pb2.FreezeCommand.Feedback:
            """Feedback for the freeze command request."""
            pass
        @property
        def selfright_feedback(self) -> bosdyn.api.basic_command_pb2.SelfRightCommand.Feedback:
            """Feedback for the self-right command request."""
            pass
        @property
        def safe_power_off_feedback(self) -> bosdyn.api.basic_command_pb2.SafePowerOffCommand.Feedback:
            """Feedback for the safe power off command request."""
            pass
        @property
        def battery_change_pose_feedback(self) -> bosdyn.api.basic_command_pb2.BatteryChangePoseCommand.Feedback:
            """Feedback for the battery change pose command request."""
            pass
        @property
        def payload_estimation_feedback(self) -> bosdyn.api.payload_estimation_pb2.PayloadEstimationCommand.Feedback:
            """Feedback for the payload estimation command request."""
            pass
        @property
        def constrained_manipulation_feedback(self) -> bosdyn.api.basic_command_pb2.ConstrainedManipulationCommand.Feedback:
            """Feedback for the constrained manipulation command request"""
            pass
        status: bosdyn.api.basic_command_pb2.RobotCommandFeedbackStatus.Status.ValueType
        def __init__(self,
            *,
            stop_feedback: typing.Optional[bosdyn.api.basic_command_pb2.StopCommand.Feedback] = ...,
            freeze_feedback: typing.Optional[bosdyn.api.basic_command_pb2.FreezeCommand.Feedback] = ...,
            selfright_feedback: typing.Optional[bosdyn.api.basic_command_pb2.SelfRightCommand.Feedback] = ...,
            safe_power_off_feedback: typing.Optional[bosdyn.api.basic_command_pb2.SafePowerOffCommand.Feedback] = ...,
            battery_change_pose_feedback: typing.Optional[bosdyn.api.basic_command_pb2.BatteryChangePoseCommand.Feedback] = ...,
            payload_estimation_feedback: typing.Optional[bosdyn.api.payload_estimation_pb2.PayloadEstimationCommand.Feedback] = ...,
            constrained_manipulation_feedback: typing.Optional[bosdyn.api.basic_command_pb2.ConstrainedManipulationCommand.Feedback] = ...,
            status: bosdyn.api.basic_command_pb2.RobotCommandFeedbackStatus.Status.ValueType = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["battery_change_pose_feedback",b"battery_change_pose_feedback","constrained_manipulation_feedback",b"constrained_manipulation_feedback","feedback",b"feedback","freeze_feedback",b"freeze_feedback","payload_estimation_feedback",b"payload_estimation_feedback","safe_power_off_feedback",b"safe_power_off_feedback","selfright_feedback",b"selfright_feedback","stop_feedback",b"stop_feedback"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["battery_change_pose_feedback",b"battery_change_pose_feedback","constrained_manipulation_feedback",b"constrained_manipulation_feedback","feedback",b"feedback","freeze_feedback",b"freeze_feedback","payload_estimation_feedback",b"payload_estimation_feedback","safe_power_off_feedback",b"safe_power_off_feedback","selfright_feedback",b"selfright_feedback","status",b"status","stop_feedback",b"stop_feedback"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["feedback",b"feedback"]) -> typing.Optional[typing_extensions.Literal["stop_feedback","freeze_feedback","selfright_feedback","safe_power_off_feedback","battery_change_pose_feedback","payload_estimation_feedback","constrained_manipulation_feedback"]]: ...

    def __init__(self,
        ) -> None: ...
global___FullBodyCommand = FullBodyCommand
