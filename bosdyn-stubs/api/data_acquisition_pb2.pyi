"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.header_pb2
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class DataAcquisitionCapability(google.protobuf.message.Message):
    """Description of a data acquisition capability. A data acquisition plugin service will have a
    set of capabilities for which it can acquire and save the appropriate data.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CHANNEL_NAME_FIELD_NUMBER: builtins.int
    SERVICE_NAME_FIELD_NUMBER: builtins.int
    name: typing.Text
    """Unique identifier for the data acquisition capability. Used for identification purposes
    when making acquire data requests.
    """

    description: typing.Text
    """A human readable name of the data acquisition capability that will be shown on the tablet."""

    channel_name: typing.Text
    """Channel name that will be associated with all data stored in the data buffer through
    each data acquisition plugin. Metadata acquirers do not specify this field.
    """

    service_name: typing.Text
    """The data acquisition plugin service's service name used in directory registration."""

    def __init__(self,
        *,
        name: typing.Text = ...,
        description: typing.Text = ...,
        channel_name: typing.Text = ...,
        service_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel_name",b"channel_name","description",b"description","name",b"name","service_name",b"service_name"]) -> None: ...
global___DataAcquisitionCapability = DataAcquisitionCapability

class ImageAcquisitionCapability(google.protobuf.message.Message):
    """Description of an image acquisition capability. The image acquisition capabilities will be available
    through the main data acquisition service on robot and are populated based on all bosdyn.api.ImageService
    services registered to the robot's directory.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SERVICE_NAME_FIELD_NUMBER: builtins.int
    IMAGE_SOURCE_NAMES_FIELD_NUMBER: builtins.int
    service_name: typing.Text
    """The image service's service name used in directory registration."""

    @property
    def image_source_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of the image source names reported by the image service (through the ListImageSources RPC)."""
        pass
    def __init__(self,
        *,
        service_name: typing.Text = ...,
        image_source_names: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["image_source_names",b"image_source_names","service_name",b"service_name"]) -> None: ...
global___ImageAcquisitionCapability = ImageAcquisitionCapability

class AcquisitionCapabilityList(google.protobuf.message.Message):
    """A list of all capabilities (data and images) that a specific data acquisition plugin service can successfully
    acquire and save the data specified in each capability.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_SOURCES_FIELD_NUMBER: builtins.int
    IMAGE_SOURCES_FIELD_NUMBER: builtins.int
    @property
    def data_sources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DataAcquisitionCapability]:
        """List of non-image data acquisition capabilities."""
        pass
    @property
    def image_sources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageAcquisitionCapability]:
        """List of image data acquisition capabilities."""
        pass
    def __init__(self,
        *,
        data_sources: typing.Optional[typing.Iterable[global___DataAcquisitionCapability]] = ...,
        image_sources: typing.Optional[typing.Iterable[global___ImageAcquisitionCapability]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_sources",b"data_sources","image_sources",b"image_sources"]) -> None: ...
global___AcquisitionCapabilityList = AcquisitionCapabilityList

class CaptureActionId(google.protobuf.message.Message):
    """The CaptureActionId describes the entire capture action for an AcquireData request and will be used
    to uniquely identify that full request's set of stored data.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACTION_NAME_FIELD_NUMBER: builtins.int
    GROUP_NAME_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    action_name: typing.Text
    """The action name is used to group all pieces of data associated with a single AcquireData
    request. The action name must be unique for the given group name, meaning no two actions
    with the same group name can have the same action name.
    """

    group_name: typing.Text
    """The group name is used to group a "session" of data, such as a mission or a teleop capture session, which
    includes multiple capture actions (from multiple AcquireData RPCs).
    """

    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time (in the robot's clock) at which this capture was triggered. If the timestamp is not specified
        in the AcquireData RPC, the main data acquisition service on robot will populate the timestamp field
        with the timestamp of when the RPC was recieved.
        """
        pass
    def __init__(self,
        *,
        action_name: typing.Text = ...,
        group_name: typing.Text = ...,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action_name",b"action_name","group_name",b"group_name","timestamp",b"timestamp"]) -> None: ...
global___CaptureActionId = CaptureActionId

class DataIdentifier(google.protobuf.message.Message):
    """A way to identify an individual piece of data stored in the data buffer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACTION_ID_FIELD_NUMBER: builtins.int
    CHANNEL_FIELD_NUMBER: builtins.int
    DATA_NAME_FIELD_NUMBER: builtins.int
    @property
    def action_id(self) -> global___CaptureActionId:
        """The action where the data was acquired."""
        pass
    channel: typing.Text
    """Data buffer channel associated with the DataBlob. The channel is used to group data across
    actions by a specific source, and it can be used in queries to retrieve some subset of data. For example,
    the channel could be "ptz" and queries can be made for all PTZ images.
    """

    data_name: typing.Text
    """Data-specific identifier that can optionally be used to disambiguate cases where the action_id and
    channel are insufficient. For example, you save cropped SpotCAM pano image that are detected as gauges to
    a "detected_gauges" channel, but want a way to further individually identify them as each specific gauge,
    so you give each detection a unique data_name.
    """

    def __init__(self,
        *,
        action_id: typing.Optional[global___CaptureActionId] = ...,
        channel: typing.Text = ...,
        data_name: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action_id",b"action_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action_id",b"action_id","channel",b"channel","data_name",b"data_name"]) -> None: ...
global___DataIdentifier = DataIdentifier

class Metadata(google.protobuf.message.Message):
    """Structured data that can be included within a AcquireData RPC and saved in association with
    that capture action.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.struct_pb2.Struct:
        """JSON representation of metadata."""
        pass
    def __init__(self,
        *,
        data: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data",b"data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data"]) -> None: ...
global___Metadata = Metadata

class AssociatedMetadata(google.protobuf.message.Message):
    """This message can be stored as a DataBlob in the data buffer in order to be recognized as
    metadata that is associated with previously stored data.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REFERENCE_ID_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    @property
    def reference_id(self) -> global___DataIdentifier:
        """The data that this metadata refers to.
        The timestamp field is ignored.
        If only the action_id is filled out, this metadata is associated with the entire capture action.
        """
        pass
    @property
    def metadata(self) -> global___Metadata:
        """Metadata message to be stored."""
        pass
    def __init__(self,
        *,
        reference_id: typing.Optional[global___DataIdentifier] = ...,
        metadata: typing.Optional[global___Metadata] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata",b"metadata","reference_id",b"reference_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadata",b"metadata","reference_id",b"reference_id"]) -> None: ...
global___AssociatedMetadata = AssociatedMetadata

class ImageSourceCapture(google.protobuf.message.Message):
    """An individual capture which can be specified in the AcquireData request to identify a piece of
    image data to be collected.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    IMAGE_SERVICE_FIELD_NUMBER: builtins.int
    IMAGE_SOURCE_FIELD_NUMBER: builtins.int
    image_service: typing.Text
    """Name of the image service that the data should be requested from."""

    image_source: typing.Text
    """Specific image source to use from the list reported by the image service within the
    ImageAcquisitionCapability message.
    """

    def __init__(self,
        *,
        image_service: typing.Text = ...,
        image_source: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["image_service",b"image_service","image_source",b"image_source"]) -> None: ...
global___ImageSourceCapture = ImageSourceCapture

class DataCapture(google.protobuf.message.Message):
    """An individual capture which can be specified in the AcquireData request to identify a piece of
    non-image data to be collected.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text
    """Name of the data to be captured. This should match the uniquely identifying name from
    the DataAcquisitionCapability.
    """

    def __init__(self,
        *,
        name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DataCapture = DataCapture

class AcquisitionRequestList(google.protobuf.message.Message):
    """The grouping of all individual image and data captures for a given capture action."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    IMAGE_CAPTURES_FIELD_NUMBER: builtins.int
    DATA_CAPTURES_FIELD_NUMBER: builtins.int
    @property
    def image_captures(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageSourceCapture]:
        """List of image requests."""
        pass
    @property
    def data_captures(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DataCapture]:
        """List of non-image data and metadata requests."""
        pass
    def __init__(self,
        *,
        image_captures: typing.Optional[typing.Iterable[global___ImageSourceCapture]] = ...,
        data_captures: typing.Optional[typing.Iterable[global___DataCapture]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_captures",b"data_captures","image_captures",b"image_captures"]) -> None: ...
global___AcquisitionRequestList = AcquisitionRequestList

class DataError(google.protobuf.message.Message):
    """An error associated with a particular capture action and piece of data."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_ID_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    ERROR_DATA_FIELD_NUMBER: builtins.int
    @property
    def data_id(self) -> global___DataIdentifier:
        """Identifier for the data to be saved."""
        pass
    error_message: typing.Text
    """Human-readable message describing the error."""

    @property
    def error_data(self) -> google.protobuf.any_pb2.Any:
        """Custom plugin-specific data about the problem."""
        pass
    def __init__(self,
        *,
        data_id: typing.Optional[global___DataIdentifier] = ...,
        error_message: typing.Text = ...,
        error_data: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_id",b"data_id","error_data",b"error_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_id",b"data_id","error_data",b"error_data","error_message",b"error_message"]) -> None: ...
global___DataError = DataError

class PluginServiceError(google.protobuf.message.Message):
    """An error associated with a particular data acquisition plugin service that was"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ErrorCode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ErrorCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PluginServiceError._ErrorCode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: PluginServiceError._ErrorCode.ValueType  # 0
        STATUS_REQUEST_ERROR: PluginServiceError._ErrorCode.ValueType  # 1
        """The initial RPC to the plugin failed"""

        STATUS_GETSTATUS_ERROR: PluginServiceError._ErrorCode.ValueType  # 2
        """The GetStatus request to the plugin failed with a data error or timeout."""

        STATUS_INTERNAL_ERROR: PluginServiceError._ErrorCode.ValueType  # 3
        """The plugin reported an internal error."""

    class ErrorCode(_ErrorCode, metaclass=_ErrorCodeEnumTypeWrapper):
        """Possible ways a plugin can fail."""
        pass

    STATUS_UNKNOWN: PluginServiceError.ErrorCode.ValueType  # 0
    STATUS_REQUEST_ERROR: PluginServiceError.ErrorCode.ValueType  # 1
    """The initial RPC to the plugin failed"""

    STATUS_GETSTATUS_ERROR: PluginServiceError.ErrorCode.ValueType  # 2
    """The GetStatus request to the plugin failed with a data error or timeout."""

    STATUS_INTERNAL_ERROR: PluginServiceError.ErrorCode.ValueType  # 3
    """The plugin reported an internal error."""


    SERVICE_NAME_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    service_name: typing.Text
    """Name of the service with the error"""

    error: global___PluginServiceError.ErrorCode.ValueType
    """Failure mode."""

    message: typing.Text
    """Description of the error."""

    def __init__(self,
        *,
        service_name: typing.Text = ...,
        error: global___PluginServiceError.ErrorCode.ValueType = ...,
        message: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","message",b"message","service_name",b"service_name"]) -> None: ...
global___PluginServiceError = PluginServiceError

class AcquireDataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    ACTION_ID_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    ACQUISITION_REQUESTS_FIELD_NUMBER: builtins.int
    MIN_TIMEOUT_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def action_id(self) -> global___CaptureActionId:
        """Define the unique action that all data should be saved with."""
        pass
    @property
    def metadata(self) -> global___Metadata:
        """Metadata to store with the data capture. The main DAQ service saves it in the DataBuffer."""
        pass
    @property
    def acquisition_requests(self) -> global___AcquisitionRequestList:
        """List of capability requests that should be collected as part of this capture action."""
        pass
    @property
    def min_timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Optional duration used to extend the amount of time that the data request may take, in
        the event that a plugin is incorrectly specifying its timeout.
        The amount of time allowed will be the maximum of this duration and any requests
        made to plugins or other capture sources.
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        action_id: typing.Optional[global___CaptureActionId] = ...,
        metadata: typing.Optional[global___Metadata] = ...,
        acquisition_requests: typing.Optional[global___AcquisitionRequestList] = ...,
        min_timeout: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["acquisition_requests",b"acquisition_requests","action_id",b"action_id","header",b"header","metadata",b"metadata","min_timeout",b"min_timeout"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["acquisition_requests",b"acquisition_requests","action_id",b"action_id","header",b"header","metadata",b"metadata","min_timeout",b"min_timeout"]) -> None: ...
global___AcquireDataRequest = AcquireDataRequest

class AcquireDataResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AcquireDataResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: AcquireDataResponse._Status.ValueType  # 0
        STATUS_OK: AcquireDataResponse._Status.ValueType  # 1
        """The capture action has successfully started acquiring the data."""

        STATUS_UNKNOWN_CAPTURE_TYPE: AcquireDataResponse._Status.ValueType  # 2
        """One of the capability requests in the AcquisitionRequestList is unknown."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: AcquireDataResponse.Status.ValueType  # 0
    STATUS_OK: AcquireDataResponse.Status.ValueType  # 1
    """The capture action has successfully started acquiring the data."""

    STATUS_UNKNOWN_CAPTURE_TYPE: AcquireDataResponse.Status.ValueType  # 2
    """One of the capability requests in the AcquisitionRequestList is unknown."""


    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header"""
        pass
    status: global___AcquireDataResponse.Status.ValueType
    """Result of the AcquirePluginData RPC call. Further monitoring on the success of the
    acquisition request can be done using the GetStatus RPC.
    """

    request_id: builtins.int
    """Identifier which can be used to check the status of or cancel the acquisition action.."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: global___AcquireDataResponse.Status.ValueType = ...,
        request_id: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","request_id",b"request_id","status",b"status"]) -> None: ...
global___AcquireDataResponse = AcquireDataResponse

class AcquirePluginDataRequest(google.protobuf.message.Message):
    """Message sent by main DAQ service to all data acquisition plugin services."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    DATA_ID_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    ACTION_ID_FIELD_NUMBER: builtins.int
    ACQUISITION_REQUESTS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header"""
        pass
    @property
    def data_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DataIdentifier]:
        """Metadata acquirers use these DataIdentifier objects to associate them with the acquired
        metadata when storing them in the DataBuffer.
        Data acquirers simply get the timestamp from these DataIdentifier objects to use when
        storing the data in the DataBuffer.
        """
        pass
    @property
    def metadata(self) -> global___Metadata:
        """Metadata specified by the requestor."""
        pass
    @property
    def action_id(self) -> global___CaptureActionId:
        """Id to be associated with all the data buffered for this request. It will be stored
        in the DataIdentifier field of each piece of data buffered from this request.
        """
        pass
    @property
    def acquisition_requests(self) -> global___AcquisitionRequestList:
        """List of capability requests specific for this DAQ plugin."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        data_id: typing.Optional[typing.Iterable[global___DataIdentifier]] = ...,
        metadata: typing.Optional[global___Metadata] = ...,
        action_id: typing.Optional[global___CaptureActionId] = ...,
        acquisition_requests: typing.Optional[global___AcquisitionRequestList] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["acquisition_requests",b"acquisition_requests","action_id",b"action_id","header",b"header","metadata",b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["acquisition_requests",b"acquisition_requests","action_id",b"action_id","data_id",b"data_id","header",b"header","metadata",b"metadata"]) -> None: ...
global___AcquirePluginDataRequest = AcquirePluginDataRequest

class AcquirePluginDataResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AcquirePluginDataResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: AcquirePluginDataResponse._Status.ValueType  # 0
        STATUS_OK: AcquirePluginDataResponse._Status.ValueType  # 1
        """The capture action has successfully started acquiring the data."""

        STATUS_UNKNOWN_CAPTURE_TYPE: AcquirePluginDataResponse._Status.ValueType  # 2
        """One of the capability requests in the AcquisitionRequestList is unknown."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: AcquirePluginDataResponse.Status.ValueType  # 0
    STATUS_OK: AcquirePluginDataResponse.Status.ValueType  # 1
    """The capture action has successfully started acquiring the data."""

    STATUS_UNKNOWN_CAPTURE_TYPE: AcquirePluginDataResponse.Status.ValueType  # 2
    """One of the capability requests in the AcquisitionRequestList is unknown."""


    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TIMEOUT_DEADLINE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header"""
        pass
    status: global___AcquirePluginDataResponse.Status.ValueType
    """Result of the AcquirePluginData RPC call. Further monitoring on the success of the
    acquisition request can be done using the GetStatus RPC.
    """

    request_id: builtins.int
    """Identifier which can be used to check the status of or cancel the acquisition action.."""

    @property
    def timeout_deadline(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time (in the robot's clock) by which this capture should definitely be complete.
        If it is not complete by this time, something has gone wrong.
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: global___AcquirePluginDataResponse.Status.ValueType = ...,
        request_id: builtins.int = ...,
        timeout_deadline: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","timeout_deadline",b"timeout_deadline"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","request_id",b"request_id","status",b"status","timeout_deadline",b"timeout_deadline"]) -> None: ...
global___AcquirePluginDataResponse = AcquirePluginDataResponse

class GetStatusRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header"""
        pass
    request_id: builtins.int
    """Which acquisition to check the status of."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        request_id: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","request_id",b"request_id"]) -> None: ...
global___GetStatusRequest = GetStatusRequest

class GetStatusResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[GetStatusResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: GetStatusResponse._Status.ValueType  # 0
        STATUS_ACQUIRING: GetStatusResponse._Status.ValueType  # 1
        """[Status] Data acquisition is still in progress"""

        STATUS_SAVING: GetStatusResponse._Status.ValueType  # 2
        """[Status] Data has been acquired, processing and storage is now in progress."""

        STATUS_COMPLETE: GetStatusResponse._Status.ValueType  # 3
        """[Status] Data acquisition is complete."""

        STATUS_CANCEL_IN_PROGRESS: GetStatusResponse._Status.ValueType  # 4
        """[Status] The data acquisition service is working to cancel the request."""

        STATUS_ACQUISITION_CANCELLED: GetStatusResponse._Status.ValueType  # 5
        """[Status] The data acquisition request was cancelled manually."""

        STATUS_DATA_ERROR: GetStatusResponse._Status.ValueType  # 10
        """[Error - AcquireData] An error occurred while acquiring, processing, or saving data."""

        STATUS_TIMEDOUT: GetStatusResponse._Status.ValueType  # 11
        """[Error - AcquireData] The data collection has passed the deadline for completion."""

        STATUS_INTERNAL_ERROR: GetStatusResponse._Status.ValueType  # 12
        """[Error - AcquireData] An error occurred such that we don't even know our status."""

        STATUS_CANCEL_ACQUISITION_FAILED: GetStatusResponse._Status.ValueType  # 30
        """[Error -CancelAcquisition] The cancellation request failed to complete."""

        STATUS_REQUEST_ID_DOES_NOT_EXIST: GetStatusResponse._Status.ValueType  # 20
        """[Error - GetStatus] The request_id does not exist."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: GetStatusResponse.Status.ValueType  # 0
    STATUS_ACQUIRING: GetStatusResponse.Status.ValueType  # 1
    """[Status] Data acquisition is still in progress"""

    STATUS_SAVING: GetStatusResponse.Status.ValueType  # 2
    """[Status] Data has been acquired, processing and storage is now in progress."""

    STATUS_COMPLETE: GetStatusResponse.Status.ValueType  # 3
    """[Status] Data acquisition is complete."""

    STATUS_CANCEL_IN_PROGRESS: GetStatusResponse.Status.ValueType  # 4
    """[Status] The data acquisition service is working to cancel the request."""

    STATUS_ACQUISITION_CANCELLED: GetStatusResponse.Status.ValueType  # 5
    """[Status] The data acquisition request was cancelled manually."""

    STATUS_DATA_ERROR: GetStatusResponse.Status.ValueType  # 10
    """[Error - AcquireData] An error occurred while acquiring, processing, or saving data."""

    STATUS_TIMEDOUT: GetStatusResponse.Status.ValueType  # 11
    """[Error - AcquireData] The data collection has passed the deadline for completion."""

    STATUS_INTERNAL_ERROR: GetStatusResponse.Status.ValueType  # 12
    """[Error - AcquireData] An error occurred such that we don't even know our status."""

    STATUS_CANCEL_ACQUISITION_FAILED: GetStatusResponse.Status.ValueType  # 30
    """[Error -CancelAcquisition] The cancellation request failed to complete."""

    STATUS_REQUEST_ID_DOES_NOT_EXIST: GetStatusResponse.Status.ValueType  # 20
    """[Error - GetStatus] The request_id does not exist."""


    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    DATA_SAVED_FIELD_NUMBER: builtins.int
    DATA_ERRORS_FIELD_NUMBER: builtins.int
    SERVICE_ERRORS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header"""
        pass
    status: global___GetStatusResponse.Status.ValueType
    @property
    def data_saved(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DataIdentifier]:
        """Data that has been successfully saved into the data buffer for the capture action."""
        pass
    @property
    def data_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DataError]:
        """A list of data captures which have failed in some way during the action.
        For example, the data acquisition plugin is unable to communicate to a sensor and responds with
        a data error for that specific data capture.
        """
        pass
    @property
    def service_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PluginServiceError]:
        """Services which failed independent of a particular data id.
        For example, if a plugin times out or crashes, it could be reported here.
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: global___GetStatusResponse.Status.ValueType = ...,
        data_saved: typing.Optional[typing.Iterable[global___DataIdentifier]] = ...,
        data_errors: typing.Optional[typing.Iterable[global___DataError]] = ...,
        service_errors: typing.Optional[typing.Iterable[global___PluginServiceError]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_errors",b"data_errors","data_saved",b"data_saved","header",b"header","service_errors",b"service_errors","status",b"status"]) -> None: ...
global___GetStatusResponse = GetStatusResponse

class GetServiceInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header"""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header"]) -> None: ...
global___GetServiceInfoRequest = GetServiceInfoRequest

class GetServiceInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    CAPABILITIES_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def capabilities(self) -> global___AcquisitionCapabilityList:
        """List of capabilities that the data acquisition (plugin) service can
        collect and save data for.
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        capabilities: typing.Optional[global___AcquisitionCapabilityList] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["capabilities",b"capabilities","header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["capabilities",b"capabilities","header",b"header"]) -> None: ...
global___GetServiceInfoResponse = GetServiceInfoResponse

class CancelAcquisitionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header"""
        pass
    request_id: builtins.int
    """Which acquisition request to cancel."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        request_id: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","request_id",b"request_id"]) -> None: ...
global___CancelAcquisitionRequest = CancelAcquisitionRequest

class CancelAcquisitionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[CancelAcquisitionResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: CancelAcquisitionResponse._Status.ValueType  # 0
        STATUS_OK: CancelAcquisitionResponse._Status.ValueType  # 1
        """Successfully cancelled the data acquisition request."""

        STATUS_FAILED_TO_CANCEL: CancelAcquisitionResponse._Status.ValueType  # 2
        """Unable to stop the data acquisition request."""

        STATUS_REQUEST_ID_DOES_NOT_EXIST: CancelAcquisitionResponse._Status.ValueType  # 3
        """[Error] The request_id does not exist."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: CancelAcquisitionResponse.Status.ValueType  # 0
    STATUS_OK: CancelAcquisitionResponse.Status.ValueType  # 1
    """Successfully cancelled the data acquisition request."""

    STATUS_FAILED_TO_CANCEL: CancelAcquisitionResponse.Status.ValueType  # 2
    """Unable to stop the data acquisition request."""

    STATUS_REQUEST_ID_DOES_NOT_EXIST: CancelAcquisitionResponse.Status.ValueType  # 3
    """[Error] The request_id does not exist."""


    HEADER_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header"""
        pass
    status: global___CancelAcquisitionResponse.Status.ValueType
    """The status of the Cancellation RPC. Further monitoring on the success of the cancellation
    request can be done using the GetStatus RPC.
    """

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        status: global___CancelAcquisitionResponse.Status.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","status",b"status"]) -> None: ...
global___CancelAcquisitionResponse = CancelAcquisitionResponse
