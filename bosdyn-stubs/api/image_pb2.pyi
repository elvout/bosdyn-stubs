"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.geometry_pb2
import bosdyn.api.header_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Image(google.protobuf.message.Message):
    """Rectangular color/greyscale/depth images."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Format:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Image._Format.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        FORMAT_UNKNOWN: Image._Format.ValueType  # 0
        """Unknown image format."""

        FORMAT_JPEG: Image._Format.ValueType  # 1
        """Color/greyscale formats.
        JPEG format.
        """

        FORMAT_RAW: Image._Format.ValueType  # 2
        """Uncompressed.  Requires pixel_format."""

        FORMAT_RLE: Image._Format.ValueType  # 3
        """1 byte run-length before each pixel value."""

    class Format(_Format, metaclass=_FormatEnumTypeWrapper):
        pass

    FORMAT_UNKNOWN: Image.Format.ValueType  # 0
    """Unknown image format."""

    FORMAT_JPEG: Image.Format.ValueType  # 1
    """Color/greyscale formats.
    JPEG format.
    """

    FORMAT_RAW: Image.Format.ValueType  # 2
    """Uncompressed.  Requires pixel_format."""

    FORMAT_RLE: Image.Format.ValueType  # 3
    """1 byte run-length before each pixel value."""


    class _PixelFormat:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PixelFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Image._PixelFormat.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        PIXEL_FORMAT_UNKNOWN: Image._PixelFormat.ValueType  # 0
        """Unspecified value -- should not be used."""

        PIXEL_FORMAT_GREYSCALE_U8: Image._PixelFormat.ValueType  # 1
        """One byte per pixel."""

        PIXEL_FORMAT_RGB_U8: Image._PixelFormat.ValueType  # 3
        """Three bytes per pixel."""

        PIXEL_FORMAT_RGBA_U8: Image._PixelFormat.ValueType  # 4
        """Four bytes per pixel."""

        PIXEL_FORMAT_DEPTH_U16: Image._PixelFormat.ValueType  # 5
        """Little-endian uint16 z-distance from camera (mm)."""

        PIXEL_FORMAT_GREYSCALE_U16: Image._PixelFormat.ValueType  # 6
        """Two bytes per pixel."""

    class PixelFormat(_PixelFormat, metaclass=_PixelFormatEnumTypeWrapper):
        pass

    PIXEL_FORMAT_UNKNOWN: Image.PixelFormat.ValueType  # 0
    """Unspecified value -- should not be used."""

    PIXEL_FORMAT_GREYSCALE_U8: Image.PixelFormat.ValueType  # 1
    """One byte per pixel."""

    PIXEL_FORMAT_RGB_U8: Image.PixelFormat.ValueType  # 3
    """Three bytes per pixel."""

    PIXEL_FORMAT_RGBA_U8: Image.PixelFormat.ValueType  # 4
    """Four bytes per pixel."""

    PIXEL_FORMAT_DEPTH_U16: Image.PixelFormat.ValueType  # 5
    """Little-endian uint16 z-distance from camera (mm)."""

    PIXEL_FORMAT_GREYSCALE_U16: Image.PixelFormat.ValueType  # 6
    """Two bytes per pixel."""


    COLS_FIELD_NUMBER: builtins.int
    ROWS_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    FORMAT_FIELD_NUMBER: builtins.int
    PIXEL_FORMAT_FIELD_NUMBER: builtins.int
    cols: builtins.int
    """Number of columns in the image (in pixels)."""

    rows: builtins.int
    """Number of rows in the image (in pixels)."""

    data: builtins.bytes
    """Raw image data."""

    format: global___Image.Format.ValueType
    """How the image is encoded."""

    pixel_format: global___Image.PixelFormat.ValueType
    """Pixel format of the image; this will be set even when the Format implies
    the pixel format.
    """

    def __init__(self,
        *,
        cols: builtins.int = ...,
        rows: builtins.int = ...,
        data: builtins.bytes = ...,
        format: global___Image.Format.ValueType = ...,
        pixel_format: global___Image.PixelFormat.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cols",b"cols","data",b"data","format",b"format","pixel_format",b"pixel_format","rows",b"rows"]) -> None: ...
global___Image = Image

class CaptureParameters(google.protobuf.message.Message):
    """Sensor parameters associated with an image capture."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXPOSURE_DURATION_FIELD_NUMBER: builtins.int
    GAIN_FIELD_NUMBER: builtins.int
    @property
    def exposure_duration(self) -> google.protobuf.duration_pb2.Duration:
        """The duration of exposure in microseconds."""
        pass
    gain: builtins.float
    """Sensor gain in dB."""

    def __init__(self,
        *,
        exposure_duration: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        gain: builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["exposure_duration",b"exposure_duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["exposure_duration",b"exposure_duration","gain",b"gain"]) -> None: ...
global___CaptureParameters = CaptureParameters

class ImageCapture(google.protobuf.message.Message):
    """Rectangular color/greyscale images."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ACQUISITION_TIME_FIELD_NUMBER: builtins.int
    TRANSFORMS_SNAPSHOT_FIELD_NUMBER: builtins.int
    FRAME_NAME_IMAGE_SENSOR_FIELD_NUMBER: builtins.int
    IMAGE_FIELD_NUMBER: builtins.int
    CAPTURE_PARAMS_FIELD_NUMBER: builtins.int
    @property
    def acquisition_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the image data was acquired in the robot's time basis."""
        pass
    @property
    def transforms_snapshot(self) -> bosdyn.api.geometry_pb2.FrameTreeSnapshot:
        """A tree-based collection of transformations, which will include the transformations to each image's
        sensor in addition to transformations to the common frames ("vision", "body", "odom").
        All transforms within the snapshot are at the acquistion time of the image.
        """
        pass
    frame_name_image_sensor: typing.Text
    """The frame name for the image's sensor source. This will be included in the transform snapshot."""

    @property
    def image(self) -> global___Image:
        """Image data."""
        pass
    @property
    def capture_params(self) -> global___CaptureParameters:
        """Sensor parameters associated with this image capture."""
        pass
    def __init__(self,
        *,
        acquisition_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        transforms_snapshot: typing.Optional[bosdyn.api.geometry_pb2.FrameTreeSnapshot] = ...,
        frame_name_image_sensor: typing.Text = ...,
        image: typing.Optional[global___Image] = ...,
        capture_params: typing.Optional[global___CaptureParameters] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["acquisition_time",b"acquisition_time","capture_params",b"capture_params","image",b"image","transforms_snapshot",b"transforms_snapshot"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["acquisition_time",b"acquisition_time","capture_params",b"capture_params","frame_name_image_sensor",b"frame_name_image_sensor","image",b"image","transforms_snapshot",b"transforms_snapshot"]) -> None: ...
global___ImageCapture = ImageCapture

class ImageSource(google.protobuf.message.Message):
    """Proto for a description of an image source on the robot."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ImageType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ImageTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ImageSource._ImageType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        IMAGE_TYPE_UNKNOWN: ImageSource._ImageType.ValueType  # 0
        """Unspecified image type."""

        IMAGE_TYPE_VISUAL: ImageSource._ImageType.ValueType  # 1
        """Color or greyscale intensity image."""

        IMAGE_TYPE_DEPTH: ImageSource._ImageType.ValueType  # 2
        """Pixel values represent distances to objects/surfaces."""

    class ImageType(_ImageType, metaclass=_ImageTypeEnumTypeWrapper):
        pass

    IMAGE_TYPE_UNKNOWN: ImageSource.ImageType.ValueType  # 0
    """Unspecified image type."""

    IMAGE_TYPE_VISUAL: ImageSource.ImageType.ValueType  # 1
    """Color or greyscale intensity image."""

    IMAGE_TYPE_DEPTH: ImageSource.ImageType.ValueType  # 2
    """Pixel values represent distances to objects/surfaces."""


    class PinholeModel(google.protobuf.message.Message):
        """The camera can be modeled as a pinhole camera described with a matrix.
        Camera Matrix can be constructed by the camera intrinsics:
        [[focal_length.x,         skew.x, principal_point.x],
        [[        skew.y, focal_length.y, principal_point.y],
        [[             0,              0,                 1]]
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class CameraIntrinsics(google.protobuf.message.Message):
            """Intrinsic parameters are in pixel space."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            FOCAL_LENGTH_FIELD_NUMBER: builtins.int
            PRINCIPAL_POINT_FIELD_NUMBER: builtins.int
            SKEW_FIELD_NUMBER: builtins.int
            @property
            def focal_length(self) -> bosdyn.api.geometry_pb2.Vec2:
                """The focal length of the camera."""
                pass
            @property
            def principal_point(self) -> bosdyn.api.geometry_pb2.Vec2:
                """The optical center in sensor coordinates."""
                pass
            @property
            def skew(self) -> bosdyn.api.geometry_pb2.Vec2:
                """The skew for the intrinsic matrix."""
                pass
            def __init__(self,
                *,
                focal_length: typing.Optional[bosdyn.api.geometry_pb2.Vec2] = ...,
                principal_point: typing.Optional[bosdyn.api.geometry_pb2.Vec2] = ...,
                skew: typing.Optional[bosdyn.api.geometry_pb2.Vec2] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["focal_length",b"focal_length","principal_point",b"principal_point","skew",b"skew"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["focal_length",b"focal_length","principal_point",b"principal_point","skew",b"skew"]) -> None: ...

        INTRINSICS_FIELD_NUMBER: builtins.int
        @property
        def intrinsics(self) -> global___ImageSource.PinholeModel.CameraIntrinsics:
            """The camera intrinsics are necessary for descrbing the pinhole camera matrix."""
            pass
        def __init__(self,
            *,
            intrinsics: typing.Optional[global___ImageSource.PinholeModel.CameraIntrinsics] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["intrinsics",b"intrinsics"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["intrinsics",b"intrinsics"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    COLS_FIELD_NUMBER: builtins.int
    ROWS_FIELD_NUMBER: builtins.int
    DEPTH_SCALE_FIELD_NUMBER: builtins.int
    PINHOLE_FIELD_NUMBER: builtins.int
    IMAGE_TYPE_FIELD_NUMBER: builtins.int
    name: typing.Text
    """The name of this image source used to get images."""

    cols: builtins.int
    """Number of columns in the image (in pixels)."""

    rows: builtins.int
    """Number of rows in the image (in pixels)."""

    depth_scale: builtins.float
    """The depth scale for the image data. Typically 1000, which converts it from mm to m."""

    @property
    def pinhole(self) -> global___ImageSource.PinholeModel:
        """Rectilinear camera model."""
        pass
    image_type: global___ImageSource.ImageType.ValueType
    """The kind of images returned by this image source."""

    def __init__(self,
        *,
        name: typing.Text = ...,
        cols: builtins.int = ...,
        rows: builtins.int = ...,
        depth_scale: builtins.float = ...,
        pinhole: typing.Optional[global___ImageSource.PinholeModel] = ...,
        image_type: global___ImageSource.ImageType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["camera_models",b"camera_models","pinhole",b"pinhole"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["camera_models",b"camera_models","cols",b"cols","depth_scale",b"depth_scale","image_type",b"image_type","name",b"name","pinhole",b"pinhole","rows",b"rows"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["camera_models",b"camera_models"]) -> typing.Optional[typing_extensions.Literal["pinhole"]]: ...
global___ImageSource = ImageSource

class ListImageSourcesRequest(google.protobuf.message.Message):
    """The ListImageSources request message for the robot image service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header"]) -> None: ...
global___ListImageSourcesRequest = ListImageSourcesRequest

class ListImageSourcesResponse(google.protobuf.message.Message):
    """The ListImageSources response message which contains all known image sources for the robot."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    IMAGE_SOURCES_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response Header."""
        pass
    @property
    def image_sources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageSource]:
        """The set of ImageSources available from this service.
        May be empty if the service serves no cameras (e.g., if no cameras were found on startup).
        """
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        image_sources: typing.Optional[typing.Iterable[global___ImageSource]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","image_sources",b"image_sources"]) -> None: ...
global___ListImageSourcesResponse = ListImageSourcesResponse

class ImageRequest(google.protobuf.message.Message):
    """The image request specifying the image source and data format desired."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    IMAGE_SOURCE_NAME_FIELD_NUMBER: builtins.int
    QUALITY_PERCENT_FIELD_NUMBER: builtins.int
    IMAGE_FORMAT_FIELD_NUMBER: builtins.int
    image_source_name: typing.Text
    """The string name of the image source to get image data from."""

    quality_percent: builtins.float
    """Image quality: a number from 0 (worst) to 100 (highest).
    Note that jpeg quality 100 is still lossy.
    """

    image_format: global___Image.Format.ValueType
    """Specify the desired image encoding (e.g. JPEG, RAW). If no format is specified (e.g. FORMAT_UNKNOWN), the image
    service will choose the best format for the data.
    """

    def __init__(self,
        *,
        image_source_name: typing.Text = ...,
        quality_percent: builtins.float = ...,
        image_format: global___Image.Format.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["image_format",b"image_format","image_source_name",b"image_source_name","quality_percent",b"quality_percent"]) -> None: ...
global___ImageRequest = ImageRequest

class GetImageRequest(google.protobuf.message.Message):
    """The GetImage request message which can send multiple different image source requests at once."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    IMAGE_REQUESTS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def image_requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageRequest]:
        """The different image requests for this rpc call."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        image_requests: typing.Optional[typing.Iterable[global___ImageRequest]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","image_requests",b"image_requests"]) -> None: ...
global___GetImageRequest = GetImageRequest

class ImageResponse(google.protobuf.message.Message):
    """The image response for each request, that includes image data and image source information."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ImageResponse._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: ImageResponse._Status.ValueType  # 0
        """UNKNOWN should never be used.
        An internal ImageService issue has happened if UNKNOWN is set.
        None of the other fields are filled out.
        """

        STATUS_OK: ImageResponse._Status.ValueType  # 1
        """Call succeeded at filling out all the fields."""

        STATUS_UNKNOWN_CAMERA: ImageResponse._Status.ValueType  # 2
        """Image source name in request is unknown.  Other fields are not filled out."""

        STATUS_SOURCE_DATA_ERROR: ImageResponse._Status.ValueType  # 3
        """Failed to fill out ImageSource.  All the other fields are not filled out."""

        STATUS_IMAGE_DATA_ERROR: ImageResponse._Status.ValueType  # 4
        """There was a problem with the image data.  Only the ImageSource is filled out."""

        STATUS_UNSUPPORTED_IMAGE_FORMAT_REQUESTED: ImageResponse._Status.ValueType  # 5
        """The requested image format is unsupported for the image-source named. The image data will
        not be filled out. Note, if an image request has "FORMAT_UNKNOWN", the service should choose the
        best format to provide the data in.
        """

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: ImageResponse.Status.ValueType  # 0
    """UNKNOWN should never be used.
    An internal ImageService issue has happened if UNKNOWN is set.
    None of the other fields are filled out.
    """

    STATUS_OK: ImageResponse.Status.ValueType  # 1
    """Call succeeded at filling out all the fields."""

    STATUS_UNKNOWN_CAMERA: ImageResponse.Status.ValueType  # 2
    """Image source name in request is unknown.  Other fields are not filled out."""

    STATUS_SOURCE_DATA_ERROR: ImageResponse.Status.ValueType  # 3
    """Failed to fill out ImageSource.  All the other fields are not filled out."""

    STATUS_IMAGE_DATA_ERROR: ImageResponse.Status.ValueType  # 4
    """There was a problem with the image data.  Only the ImageSource is filled out."""

    STATUS_UNSUPPORTED_IMAGE_FORMAT_REQUESTED: ImageResponse.Status.ValueType  # 5
    """The requested image format is unsupported for the image-source named. The image data will
    not be filled out. Note, if an image request has "FORMAT_UNKNOWN", the service should choose the
    best format to provide the data in.
    """


    SHOT_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def shot(self) -> global___ImageCapture:
        """The image capture contains the image data and information about the state of the camera and robot
        at the time the image was collected.
        """
        pass
    @property
    def source(self) -> global___ImageSource:
        """The source describes general information about the camera source the image data was collected from."""
        pass
    status: global___ImageResponse.Status.ValueType
    """Return status of the request."""

    def __init__(self,
        *,
        shot: typing.Optional[global___ImageCapture] = ...,
        source: typing.Optional[global___ImageSource] = ...,
        status: global___ImageResponse.Status.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["shot",b"shot","source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["shot",b"shot","source",b"source","status",b"status"]) -> None: ...
global___ImageResponse = ImageResponse

class GetImageResponse(google.protobuf.message.Message):
    """The GetImage response message which includes image data for all requested sources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    IMAGE_RESPONSES_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def image_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ImageResponse]:
        """The ordering of these image responses is defined by the order of the ImageRequests."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        image_responses: typing.Optional[typing.Iterable[global___ImageResponse]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","image_responses",b"image_responses"]) -> None: ...
global___GetImageResponse = GetImageResponse
