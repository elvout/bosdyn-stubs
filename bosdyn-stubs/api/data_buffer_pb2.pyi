"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.header_pb2
import bosdyn.api.parameter_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class RecordTextMessagesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    TEXT_MESSAGES_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def text_messages(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TextMessage]:
        """The text messages to be logged."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        text_messages: typing.Optional[typing.Iterable[global___TextMessage]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","text_messages",b"text_messages"]) -> None: ...
global___RecordTextMessagesRequest = RecordTextMessagesRequest

class RecordOperatorCommentsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    OPERATOR_COMMENTS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def operator_comments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OperatorComment]:
        """The operator comments to be logged."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        operator_comments: typing.Optional[typing.Iterable[global___OperatorComment]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","operator_comments",b"operator_comments"]) -> None: ...
global___RecordOperatorCommentsRequest = RecordOperatorCommentsRequest

class RecordDataBlobsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    BLOB_DATA_FIELD_NUMBER: builtins.int
    SYNC_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def blob_data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DataBlob]:
        """The data blobs to be logged."""
        pass
    sync: builtins.bool
    """When set, the data blob is committed to the log synchronously. The RPC does not return until
    the data is written.
    """

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        blob_data: typing.Optional[typing.Iterable[global___DataBlob]] = ...,
        sync: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["blob_data",b"blob_data","header",b"header","sync",b"sync"]) -> None: ...
global___RecordDataBlobsRequest = RecordDataBlobsRequest

class RecordSignalTicksRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    TICK_DATA_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def tick_data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SignalTick]:
        """The signals data to be logged."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        tick_data: typing.Optional[typing.Iterable[global___SignalTick]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","tick_data",b"tick_data"]) -> None: ...
global___RecordSignalTicksRequest = RecordSignalTicksRequest

class RecordEventsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    EVENTS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Event]:
        """The events to be logged."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        events: typing.Optional[typing.Iterable[global___Event]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["events",b"events","header",b"header"]) -> None: ...
global___RecordEventsRequest = RecordEventsRequest

class TextMessage(google.protobuf.message.Message):
    """A text message to add to the log.
    These could be internal text-log messages from a client for use in debugging, for example.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Level:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TextMessage._Level.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LEVEL_UNKNOWN: TextMessage._Level.ValueType  # 0
        """Invalid, do not use."""

        LEVEL_DEBUG: TextMessage._Level.ValueType  # 1
        """Events likely of interest only in a debugging context."""

        LEVEL_INFO: TextMessage._Level.ValueType  # 2
        """Informational message during normal operation."""

        LEVEL_WARN: TextMessage._Level.ValueType  # 3
        """Information about an unexpected but recoverable condition."""

        LEVEL_ERROR: TextMessage._Level.ValueType  # 4
        """Information about an operation which did not succeed."""

    class Level(_Level, metaclass=_LevelEnumTypeWrapper):
        pass

    LEVEL_UNKNOWN: TextMessage.Level.ValueType  # 0
    """Invalid, do not use."""

    LEVEL_DEBUG: TextMessage.Level.ValueType  # 1
    """Events likely of interest only in a debugging context."""

    LEVEL_INFO: TextMessage.Level.ValueType  # 2
    """Informational message during normal operation."""

    LEVEL_WARN: TextMessage.Level.ValueType  # 3
    """Information about an unexpected but recoverable condition."""

    LEVEL_ERROR: TextMessage.Level.ValueType  # 4
    """Information about an operation which did not succeed."""


    MESSAGE_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    FILENAME_FIELD_NUMBER: builtins.int
    LINE_NUMBER_FIELD_NUMBER: builtins.int
    message: typing.Text
    """String annotation message."""

    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp of the annotation.  This must be in robot time.
        If this is not specified, this will default to the time the server received the message.
        """
        pass
    source: typing.Text
    """The client name.
    This may be used to segregate data for the same variables to different parts of the buffer.
    """

    level: global___TextMessage.Level.ValueType
    """The relative importance of the message."""

    tag: typing.Text
    """Optional tag to identify from what code/module this message originated from."""

    filename: typing.Text
    """Optional source file name originating the log message."""

    line_number: builtins.int
    """Optional source file line number originating the log message."""

    def __init__(self,
        *,
        message: typing.Text = ...,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        source: typing.Text = ...,
        level: global___TextMessage.Level.ValueType = ...,
        tag: typing.Text = ...,
        filename: typing.Text = ...,
        line_number: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filename",b"filename","level",b"level","line_number",b"line_number","message",b"message","source",b"source","tag",b"tag","timestamp",b"timestamp"]) -> None: ...
global___TextMessage = TextMessage

class OperatorComment(google.protobuf.message.Message):
    """An operator comment to be added to the log.
    These are notes especially intended to mark when logs should be preserved and reviewed
     to ensure that robot hardware and/or software is working as intended.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MESSAGE_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    message: typing.Text
    """String annotation message to add to the log."""

    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp of the annotation.  This must be in robot time.
        If this is not specified, this will default to the time the server received the message.
        """
        pass
    def __init__(self,
        *,
        message: typing.Text = ...,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message",b"message","timestamp",b"timestamp"]) -> None: ...
global___OperatorComment = OperatorComment

class DataBlob(google.protobuf.message.Message):
    """Message-style data to add to the log."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIMESTAMP_FIELD_NUMBER: builtins.int
    CHANNEL_FIELD_NUMBER: builtins.int
    TYPE_ID_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of data in robot clock time.  This is required."""
        pass
    channel: typing.Text
    """A general label for this blob.
    This is distinct from type_id, which identifies how the blob is to be parsed.
    In practice, this is often the same as the type_id.
    """

    type_id: typing.Text
    """A description of the data's content and its encoding.  This is required.
    This should be sufficient for deciding how to deserialize the data.
    For example, this could be the full name of a protobuf message type.
    """

    data: builtins.bytes
    """Raw data.
    For example, jpeg data or a serialized protobuf.
    """

    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        channel: typing.Text = ...,
        type_id: typing.Text = ...,
        data: builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel",b"channel","data",b"data","timestamp",b"timestamp","type_id",b"type_id"]) -> None: ...
global___DataBlob = DataBlob

class SignalSchema(google.protobuf.message.Message):
    """A description of a set of signals-style variables to log together as timestamped samples."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Variable(google.protobuf.message.Message):
        """A variable of signals-style data, which will be sampled in time."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SignalSchema.Variable._Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            TYPE_UNKNOWN: SignalSchema.Variable._Type.ValueType  # 0
            TYPE_INT8: SignalSchema.Variable._Type.ValueType  # 1
            TYPE_INT16: SignalSchema.Variable._Type.ValueType  # 2
            TYPE_INT32: SignalSchema.Variable._Type.ValueType  # 3
            TYPE_INT64: SignalSchema.Variable._Type.ValueType  # 4
            TYPE_UINT8: SignalSchema.Variable._Type.ValueType  # 5
            TYPE_UINT16: SignalSchema.Variable._Type.ValueType  # 6
            TYPE_UINT32: SignalSchema.Variable._Type.ValueType  # 7
            TYPE_UINT64: SignalSchema.Variable._Type.ValueType  # 8
            TYPE_FLOAT32: SignalSchema.Variable._Type.ValueType  # 9
            TYPE_FLOAT64: SignalSchema.Variable._Type.ValueType  # 10
        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            pass

        TYPE_UNKNOWN: SignalSchema.Variable.Type.ValueType  # 0
        TYPE_INT8: SignalSchema.Variable.Type.ValueType  # 1
        TYPE_INT16: SignalSchema.Variable.Type.ValueType  # 2
        TYPE_INT32: SignalSchema.Variable.Type.ValueType  # 3
        TYPE_INT64: SignalSchema.Variable.Type.ValueType  # 4
        TYPE_UINT8: SignalSchema.Variable.Type.ValueType  # 5
        TYPE_UINT16: SignalSchema.Variable.Type.ValueType  # 6
        TYPE_UINT32: SignalSchema.Variable.Type.ValueType  # 7
        TYPE_UINT64: SignalSchema.Variable.Type.ValueType  # 8
        TYPE_FLOAT32: SignalSchema.Variable.Type.ValueType  # 9
        TYPE_FLOAT64: SignalSchema.Variable.Type.ValueType  # 10

        NAME_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        IS_TIME_FIELD_NUMBER: builtins.int
        name: typing.Text
        """The name of the variable."""

        type: global___SignalSchema.Variable.Type.ValueType
        """The type of the data."""

        is_time: builtins.bool
        """Zero or one variable in 'vars' may be specified as a time variable.
        A time variable must have type TYPE_FLOAT64.
        """

        def __init__(self,
            *,
            name: typing.Text = ...,
            type: global___SignalSchema.Variable.Type.ValueType = ...,
            is_time: builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["is_time",b"is_time","name",b"name","type",b"type"]) -> None: ...

    VARS_FIELD_NUMBER: builtins.int
    SCHEMA_NAME_FIELD_NUMBER: builtins.int
    @property
    def vars(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SignalSchema.Variable]:
        """A SignalTick using this schema contains the values of this ordered list of variables."""
        pass
    schema_name: typing.Text
    """The name of the schema."""

    def __init__(self,
        *,
        vars: typing.Optional[typing.Iterable[global___SignalSchema.Variable]] = ...,
        schema_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["schema_name",b"schema_name","vars",b"vars"]) -> None: ...
global___SignalSchema = SignalSchema

class SignalSchemaId(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SCHEMA_ID_FIELD_NUMBER: builtins.int
    SCHEMA_FIELD_NUMBER: builtins.int
    schema_id: builtins.int
    """{schema, id} pair"""

    @property
    def schema(self) -> global___SignalSchema: ...
    def __init__(self,
        *,
        schema_id: builtins.int = ...,
        schema: typing.Optional[global___SignalSchema] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["schema",b"schema"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["schema",b"schema","schema_id",b"schema_id"]) -> None: ...
global___SignalSchemaId = SignalSchemaId

class SignalTick(google.protobuf.message.Message):
    """A timestamped set of signals variable values."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Encoding:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EncodingEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SignalTick._Encoding.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ENCODING_UNKNOWN: SignalTick._Encoding.ValueType  # 0
        ENCODING_RAW: SignalTick._Encoding.ValueType  # 1
        """Bytes array is a concatination of little-endian machine representations of
         the variables from the SignalSchema, in order listed in that schema.
        """

    class Encoding(_Encoding, metaclass=_EncodingEnumTypeWrapper):
        pass

    ENCODING_UNKNOWN: SignalTick.Encoding.ValueType  # 0
    ENCODING_RAW: SignalTick.Encoding.ValueType  # 1
    """Bytes array is a concatination of little-endian machine representations of
     the variables from the SignalSchema, in order listed in that schema.
    """


    SEQUENCE_ID_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    SCHEMA_ID_FIELD_NUMBER: builtins.int
    ENCODING_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    sequence_id: builtins.int
    """Successive ticks should have successive sequence_id's.
    The robot uses this to determine if a tick was somehow lost.
    """

    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp at which the variable values were sampled."""
        pass
    source: typing.Text
    """The client name.
    This may be used to segregate data for the same variables to different parts of the buffer.
    """

    schema_id: builtins.int
    """This specifies the SignalSchema to be used in interpreting the |data| field.
    This value was returned by the server when the schema was registered.
    """

    encoding: global___SignalTick.Encoding.ValueType
    """Format describing how the data bytes array is encoded."""

    data: builtins.bytes
    """The encoded data representing a tick of multiple values of signal-styles data."""

    def __init__(self,
        *,
        sequence_id: builtins.int = ...,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        source: typing.Text = ...,
        schema_id: builtins.int = ...,
        encoding: global___SignalTick.Encoding.ValueType = ...,
        data: builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data","encoding",b"encoding","schema_id",b"schema_id","sequence_id",b"sequence_id","source",b"source","timestamp",b"timestamp"]) -> None: ...
global___SignalTick = SignalTick

class Event(google.protobuf.message.Message):
    """This message contains event data for logging to the public timeline."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Level:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Event._Level.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LEVEL_UNSET: Event._Level.ValueType  # 0
        """Non-critical events"""

        LEVEL_LOW: Event._Level.ValueType  # 1
        LEVEL_MEDIUM: Event._Level.ValueType  # 2
        LEVEL_HIGH: Event._Level.ValueType  # 3
        LEVEL_MISSION_CRITICAL: Event._Level.ValueType  # 4
        """Critical events"""

        LEVEL_SYSTEM_CRITICAL: Event._Level.ValueType  # 5
    class Level(_Level, metaclass=_LevelEnumTypeWrapper):
        """Level, or similarly "visibility," "importance," or "weight" of event.
         - Higher level events will increase the visibility on the event timeline, relative to other
           events.
         - In general, higher level events should be more consequential with respect to the robot
           operation on a per-occurence basis.
         - Lower level events should be less consequential on a per occurence basis.
         - Non-critical events may be one of LOW, MEDIUM, or HIGH.  UNSET is logically equivalent to
           LOW level.
         - Critical events may be either mission or system critical.
         - System-critical is quasi-reserved for internal robot use, and is used to identify events
           that directly affect robot status or capability, such as the onset of a critical fault or
           start of an enabling capability.
         - Mission-critical is quasi-reserved client use, and is intended for events that directly
           affect the ability of the robot to "do what the user wants," such as the onset of a
           service fault or start of an enabling capability.
        """
        pass

    LEVEL_UNSET: Event.Level.ValueType  # 0
    """Non-critical events"""

    LEVEL_LOW: Event.Level.ValueType  # 1
    LEVEL_MEDIUM: Event.Level.ValueType  # 2
    LEVEL_HIGH: Event.Level.ValueType  # 3
    LEVEL_MISSION_CRITICAL: Event.Level.ValueType  # 4
    """Critical events"""

    LEVEL_SYSTEM_CRITICAL: Event.Level.ValueType  # 5

    class _LogPreserveHint:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LogPreserveHintEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Event._LogPreserveHint.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LOG_PRESERVE_HINT_UNSET: Event._LogPreserveHint.ValueType  # 0
        """If this this is unset, it is equivalent to LOG_PRESERVE_HINT_NORMAL."""

        LOG_PRESERVE_HINT_NORMAL: Event._LogPreserveHint.ValueType  # 1
        """Do not change the robot's default log data preservation behavior in response to this
        event.
        """

        LOG_PRESERVE_HINT_PRESERVE: Event._LogPreserveHint.ValueType  # 2
        """Request that the robot try to preserve data near the time of this event.
        Log space on the robot is limited, so this does not guarentee that the data will be
        preserved.
        """

    class LogPreserveHint(_LogPreserveHint, metaclass=_LogPreserveHintEnumTypeWrapper):
        """LogPreserveHint may encode a hint to the robot's logging system for whether to preserve
        internal log data near the time of this event.  This could be useful in saving data
        to be used in a service log to send to Boston Dynamics.
        """
        pass

    LOG_PRESERVE_HINT_UNSET: Event.LogPreserveHint.ValueType  # 0
    """If this this is unset, it is equivalent to LOG_PRESERVE_HINT_NORMAL."""

    LOG_PRESERVE_HINT_NORMAL: Event.LogPreserveHint.ValueType  # 1
    """Do not change the robot's default log data preservation behavior in response to this
    event.
    """

    LOG_PRESERVE_HINT_PRESERVE: Event.LogPreserveHint.ValueType  # 2
    """Request that the robot try to preserve data near the time of this event.
    Log space on the robot is limited, so this does not guarentee that the data will be
    preserved.
    """


    TYPE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    PARAMETERS_FIELD_NUMBER: builtins.int
    LOG_PRESERVE_HINT_FIELD_NUMBER: builtins.int
    type: typing.Text
    """Type of event, typically prefixed with a project or organization, e.g. "bosdyn:startup" """

    description: typing.Text
    """Event description.
    This is optional.
    """

    source: typing.Text
    """A description of the source of this event. May be the client name.
    - Not required to be unique.
    - Disambiguates the source of similar event types.
    """

    id: typing.Text
    """Unique identifier to link start and end messages for events with a duration.
    - Long running events may have separate messages at the start and end, in case the message
       for the end of the event is lost.
    - For events without a separate start and end message (in which case both start_time and
       end time should be specified), the 'id' field should not be set.
    - This id is not tracked internally by the service. It is only used to consume the event
       timeline.
    - To be effective, the id value should be generated randomly by the client.
    """

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Start and end times for the event:
        - Some events are instantaneous. For these, set start_timestamp and end_timestamp to the
           same value and send a single message (without an id).
        - Some events take time. At the onset, send a message with a unique id, the start time, and
           type. The end message should include all data from the start message, any
           additional data, and an end time.  If you have the end message, you should not need
           the start message since it is a strict subset.
        """
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    level: global___Event.Level.ValueType
    """The relative importance of the event."""

    @property
    def parameters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.parameter_pb2.Parameter]:
        """Optional set of event parameters."""
        pass
    log_preserve_hint: global___Event.LogPreserveHint.ValueType
    """Optionally request that the robot try to preserve data near this time for a service log."""

    def __init__(self,
        *,
        type: typing.Text = ...,
        description: typing.Text = ...,
        source: typing.Text = ...,
        id: typing.Text = ...,
        start_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        level: global___Event.Level.ValueType = ...,
        parameters: typing.Optional[typing.Iterable[bosdyn.api.parameter_pb2.Parameter]] = ...,
        log_preserve_hint: global___Event.LogPreserveHint.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","end_time",b"end_time","id",b"id","level",b"level","log_preserve_hint",b"log_preserve_hint","parameters",b"parameters","source",b"source","start_time",b"start_time","type",b"type"]) -> None: ...
global___Event = Event

class RecordTextMessagesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Error(google.protobuf.message.Message):
        """Text message recording error."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RecordTextMessagesResponse.Error._Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            NONE: RecordTextMessagesResponse.Error._Type.ValueType  # 0
            CLIENT_ERROR: RecordTextMessagesResponse.Error._Type.ValueType  # 1
            SERVER_ERROR: RecordTextMessagesResponse.Error._Type.ValueType  # 2
        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            pass

        NONE: RecordTextMessagesResponse.Error.Type.ValueType  # 0
        CLIENT_ERROR: RecordTextMessagesResponse.Error.Type.ValueType  # 1
        SERVER_ERROR: RecordTextMessagesResponse.Error.Type.ValueType  # 2

        TYPE_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        INDEX_FIELD_NUMBER: builtins.int
        type: global___RecordTextMessagesResponse.Error.Type.ValueType
        """The type of error: if it was caused by the client or the service."""

        message: typing.Text
        """An error message."""

        index: builtins.int
        """The index to identify the data being stored."""

        def __init__(self,
            *,
            type: global___RecordTextMessagesResponse.Error.Type.ValueType = ...,
            message: typing.Text = ...,
            index: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["index",b"index","message",b"message","type",b"type"]) -> None: ...

    HEADER_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RecordTextMessagesResponse.Error]:
        """Errors which occurred when logging text message data."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        errors: typing.Optional[typing.Iterable[global___RecordTextMessagesResponse.Error]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","header",b"header"]) -> None: ...
global___RecordTextMessagesResponse = RecordTextMessagesResponse

class RecordOperatorCommentsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Error(google.protobuf.message.Message):
        """Operator comment recording error."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RecordOperatorCommentsResponse.Error._Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            NONE: RecordOperatorCommentsResponse.Error._Type.ValueType  # 0
            CLIENT_ERROR: RecordOperatorCommentsResponse.Error._Type.ValueType  # 1
            SERVER_ERROR: RecordOperatorCommentsResponse.Error._Type.ValueType  # 2
        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            pass

        NONE: RecordOperatorCommentsResponse.Error.Type.ValueType  # 0
        CLIENT_ERROR: RecordOperatorCommentsResponse.Error.Type.ValueType  # 1
        SERVER_ERROR: RecordOperatorCommentsResponse.Error.Type.ValueType  # 2

        TYPE_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        INDEX_FIELD_NUMBER: builtins.int
        type: global___RecordOperatorCommentsResponse.Error.Type.ValueType
        """The type of error: if it was caused by the client or the service."""

        message: typing.Text
        """An error message."""

        index: builtins.int
        """The index to identify the data being stored."""

        def __init__(self,
            *,
            type: global___RecordOperatorCommentsResponse.Error.Type.ValueType = ...,
            message: typing.Text = ...,
            index: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["index",b"index","message",b"message","type",b"type"]) -> None: ...

    HEADER_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RecordOperatorCommentsResponse.Error]:
        """Errors which occurred when logging operator comments."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        errors: typing.Optional[typing.Iterable[global___RecordOperatorCommentsResponse.Error]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","header",b"header"]) -> None: ...
global___RecordOperatorCommentsResponse = RecordOperatorCommentsResponse

class RecordDataBlobsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Error(google.protobuf.message.Message):
        """DataBlob recording error."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RecordDataBlobsResponse.Error._Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            NONE: RecordDataBlobsResponse.Error._Type.ValueType  # 0
            CLIENT_ERROR: RecordDataBlobsResponse.Error._Type.ValueType  # 1
            SERVER_ERROR: RecordDataBlobsResponse.Error._Type.ValueType  # 2
        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            pass

        NONE: RecordDataBlobsResponse.Error.Type.ValueType  # 0
        CLIENT_ERROR: RecordDataBlobsResponse.Error.Type.ValueType  # 1
        SERVER_ERROR: RecordDataBlobsResponse.Error.Type.ValueType  # 2

        TYPE_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        INDEX_FIELD_NUMBER: builtins.int
        type: global___RecordDataBlobsResponse.Error.Type.ValueType
        """The type of error: if it was caused by the client or the service."""

        message: typing.Text
        """An error message."""

        index: builtins.int
        """The index to identify the data being stored."""

        def __init__(self,
            *,
            type: global___RecordDataBlobsResponse.Error.Type.ValueType = ...,
            message: typing.Text = ...,
            index: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["index",b"index","message",b"message","type",b"type"]) -> None: ...

    HEADER_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RecordDataBlobsResponse.Error]:
        """Errors which occurred when logging data blobs."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        errors: typing.Optional[typing.Iterable[global___RecordDataBlobsResponse.Error]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","header",b"header"]) -> None: ...
global___RecordDataBlobsResponse = RecordDataBlobsResponse

class RecordSignalTicksResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Error(google.protobuf.message.Message):
        """Signal tick recording error."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RecordSignalTicksResponse.Error._Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            NONE: RecordSignalTicksResponse.Error._Type.ValueType  # 0
            CLIENT_ERROR: RecordSignalTicksResponse.Error._Type.ValueType  # 1
            SERVER_ERROR: RecordSignalTicksResponse.Error._Type.ValueType  # 2
            INVALID_SCHEMA_ID: RecordSignalTicksResponse.Error._Type.ValueType  # 3
        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            pass

        NONE: RecordSignalTicksResponse.Error.Type.ValueType  # 0
        CLIENT_ERROR: RecordSignalTicksResponse.Error.Type.ValueType  # 1
        SERVER_ERROR: RecordSignalTicksResponse.Error.Type.ValueType  # 2
        INVALID_SCHEMA_ID: RecordSignalTicksResponse.Error.Type.ValueType  # 3

        TYPE_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        INDEX_FIELD_NUMBER: builtins.int
        type: global___RecordSignalTicksResponse.Error.Type.ValueType
        """The type of error: if it was caused by the client, the service, or something else."""

        message: typing.Text
        """An error message."""

        index: builtins.int
        """The index to identify the data being stored."""

        def __init__(self,
            *,
            type: global___RecordSignalTicksResponse.Error.Type.ValueType = ...,
            message: typing.Text = ...,
            index: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["index",b"index","message",b"message","type",b"type"]) -> None: ...

    HEADER_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RecordSignalTicksResponse.Error]:
        """Errors which occurred when logging signal ticks."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        errors: typing.Optional[typing.Iterable[global___RecordSignalTicksResponse.Error]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","header",b"header"]) -> None: ...
global___RecordSignalTicksResponse = RecordSignalTicksResponse

class RecordEventsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Error(google.protobuf.message.Message):
        """Event recording error."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RecordEventsResponse.Error._Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            NONE: RecordEventsResponse.Error._Type.ValueType  # 0
            CLIENT_ERROR: RecordEventsResponse.Error._Type.ValueType  # 1
            SERVER_ERROR: RecordEventsResponse.Error._Type.ValueType  # 2
        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            pass

        NONE: RecordEventsResponse.Error.Type.ValueType  # 0
        CLIENT_ERROR: RecordEventsResponse.Error.Type.ValueType  # 1
        SERVER_ERROR: RecordEventsResponse.Error.Type.ValueType  # 2

        TYPE_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        INDEX_FIELD_NUMBER: builtins.int
        type: global___RecordEventsResponse.Error.Type.ValueType
        """The type of error: if it was caused by the client, the service, or something else."""

        message: typing.Text
        """An error message."""

        index: builtins.int
        """The index to identify the data being stored."""

        def __init__(self,
            *,
            type: global___RecordEventsResponse.Error.Type.ValueType = ...,
            message: typing.Text = ...,
            index: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["index",b"index","message",b"message","type",b"type"]) -> None: ...

    HEADER_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RecordEventsResponse.Error]:
        """Errors which occurred when logging events."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        errors: typing.Optional[typing.Iterable[global___RecordEventsResponse.Error]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","header",b"header"]) -> None: ...
global___RecordEventsResponse = RecordEventsResponse

class RegisterSignalSchemaRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    SCHEMA_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request/response header."""
        pass
    @property
    def schema(self) -> global___SignalSchema:
        """Defines a schema for interpreting SignalTick data containing packed signals-type data."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        schema: typing.Optional[global___SignalSchema] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","schema",b"schema"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","schema",b"schema"]) -> None: ...
global___RegisterSignalSchemaRequest = RegisterSignalSchemaRequest

class RegisterSignalSchemaResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    SCHEMA_ID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common request/response header."""
        pass
    schema_id: builtins.int
    """Server returns a unique ID based on the client ID and schema definition.
    Always greater than zero.
    """

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        schema_id: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","schema_id",b"schema_id"]) -> None: ...
global___RegisterSignalSchemaResponse = RegisterSignalSchemaResponse
