"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import bosdyn.api.geometry_pb2
import bosdyn.api.header_pb2
import bosdyn.api.parameter_pb2
import bosdyn.api.service_fault_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Skeleton(google.protobuf.message.Message):
    """Kinematic model of the robot skeleton."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Link(google.protobuf.message.Message):
        """Each link of the robot skeleton."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class ObjModel(google.protobuf.message.Message):
            """Model to draw, expressed as an obj file.
            Note: To limit the size of responses, obj_file_contents might be omitted.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            FILE_NAME_FIELD_NUMBER: builtins.int
            FILE_CONTENTS_FIELD_NUMBER: builtins.int
            file_name: typing.Text
            """Name of the file."""

            file_contents: typing.Text
            """The contents of the file."""

            def __init__(self,
                *,
                file_name: typing.Text = ...,
                file_contents: typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["file_contents",b"file_contents","file_name",b"file_name"]) -> None: ...

        NAME_FIELD_NUMBER: builtins.int
        OBJ_MODEL_FIELD_NUMBER: builtins.int
        name: typing.Text
        """The link name, which matches those used in the urdf."""

        @property
        def obj_model(self) -> global___Skeleton.Link.ObjModel:
            """The OBJ file representing the model of this link."""
            pass
        def __init__(self,
            *,
            name: typing.Text = ...,
            obj_model: typing.Optional[global___Skeleton.Link.ObjModel] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["obj_model",b"obj_model"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["name",b"name","obj_model",b"obj_model"]) -> None: ...

    LINKS_FIELD_NUMBER: builtins.int
    URDF_FIELD_NUMBER: builtins.int
    @property
    def links(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Skeleton.Link]:
        """The list of links that make up the robot skeleton."""
        pass
    urdf: typing.Text
    """URDF description of the robot skeleton."""

    def __init__(self,
        *,
        links: typing.Optional[typing.Iterable[global___Skeleton.Link]] = ...,
        urdf: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["links",b"links","urdf",b"urdf"]) -> None: ...
global___Skeleton = Skeleton

class HardwareConfiguration(google.protobuf.message.Message):
    """Robot Hardware Configuration, described with the robot skeleton."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SKELETON_FIELD_NUMBER: builtins.int
    CAN_POWER_COMMAND_REQUEST_OFF_ROBOT_FIELD_NUMBER: builtins.int
    CAN_POWER_COMMAND_REQUEST_CYCLE_ROBOT_FIELD_NUMBER: builtins.int
    CAN_POWER_COMMAND_REQUEST_PAYLOAD_PORTS_FIELD_NUMBER: builtins.int
    CAN_POWER_COMMAND_REQUEST_WIFI_RADIO_FIELD_NUMBER: builtins.int
    @property
    def skeleton(self) -> global___Skeleton:
        """Robot link and joint description."""
        pass
    can_power_command_request_off_robot: builtins.bool
    """Set of power features that are compatible with the robot hardware.
    See power.proto for the associated requests.

    Turn off the robot. Same as physical switch.
    """

    can_power_command_request_cycle_robot: builtins.bool
    """Power cycle the robot. Same as physical switch."""

    can_power_command_request_payload_ports: builtins.bool
    """Control power to the payload ports."""

    can_power_command_request_wifi_radio: builtins.bool
    """Control power to the hardware Wi-Fi radio."""

    def __init__(self,
        *,
        skeleton: typing.Optional[global___Skeleton] = ...,
        can_power_command_request_off_robot: builtins.bool = ...,
        can_power_command_request_cycle_robot: builtins.bool = ...,
        can_power_command_request_payload_ports: builtins.bool = ...,
        can_power_command_request_wifi_radio: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["skeleton",b"skeleton"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["can_power_command_request_cycle_robot",b"can_power_command_request_cycle_robot","can_power_command_request_off_robot",b"can_power_command_request_off_robot","can_power_command_request_payload_ports",b"can_power_command_request_payload_ports","can_power_command_request_wifi_radio",b"can_power_command_request_wifi_radio","skeleton",b"skeleton"]) -> None: ...
global___HardwareConfiguration = HardwareConfiguration

class RobotState(google.protobuf.message.Message):
    """The current state of the robot."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    POWER_STATE_FIELD_NUMBER: builtins.int
    BATTERY_STATES_FIELD_NUMBER: builtins.int
    COMMS_STATES_FIELD_NUMBER: builtins.int
    SYSTEM_FAULT_STATE_FIELD_NUMBER: builtins.int
    ESTOP_STATES_FIELD_NUMBER: builtins.int
    KINEMATIC_STATE_FIELD_NUMBER: builtins.int
    BEHAVIOR_FAULT_STATE_FIELD_NUMBER: builtins.int
    FOOT_STATE_FIELD_NUMBER: builtins.int
    MANIPULATOR_STATE_FIELD_NUMBER: builtins.int
    SERVICE_FAULT_STATE_FIELD_NUMBER: builtins.int
    @property
    def power_state(self) -> global___PowerState:
        """Power state (e.g. motor power)."""
        pass
    @property
    def battery_states(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BatteryState]:
        """Battery state (e.g. charge, temperature, current)."""
        pass
    @property
    def comms_states(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CommsState]:
        """Communication state (e.g. type of comms network)."""
        pass
    @property
    def system_fault_state(self) -> global___SystemFaultState:
        """Different system faults for the robot."""
        pass
    @property
    def estop_states(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EStopState]:
        """Because there may be multiple E-Stops, and because E-Stops may be supplied with payloads,
        this is a repeated field instead of a hardcoded list.
        """
        pass
    @property
    def kinematic_state(self) -> global___KinematicState:
        """Kinematic state of the robot (e.g. positions, velocities, other frame information)."""
        pass
    @property
    def behavior_fault_state(self) -> global___BehaviorFaultState:
        """Robot behavior fault state."""
        pass
    @property
    def foot_state(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FootState]:
        """The foot states (and contact information)."""
        pass
    @property
    def manipulator_state(self) -> global___ManipulatorState:
        """/ State of the manipulator, only populated if an arm is attached to the robot."""
        pass
    @property
    def service_fault_state(self) -> global___ServiceFaultState:
        """Service faults for services registered with the robot."""
        pass
    def __init__(self,
        *,
        power_state: typing.Optional[global___PowerState] = ...,
        battery_states: typing.Optional[typing.Iterable[global___BatteryState]] = ...,
        comms_states: typing.Optional[typing.Iterable[global___CommsState]] = ...,
        system_fault_state: typing.Optional[global___SystemFaultState] = ...,
        estop_states: typing.Optional[typing.Iterable[global___EStopState]] = ...,
        kinematic_state: typing.Optional[global___KinematicState] = ...,
        behavior_fault_state: typing.Optional[global___BehaviorFaultState] = ...,
        foot_state: typing.Optional[typing.Iterable[global___FootState]] = ...,
        manipulator_state: typing.Optional[global___ManipulatorState] = ...,
        service_fault_state: typing.Optional[global___ServiceFaultState] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["behavior_fault_state",b"behavior_fault_state","kinematic_state",b"kinematic_state","manipulator_state",b"manipulator_state","power_state",b"power_state","service_fault_state",b"service_fault_state","system_fault_state",b"system_fault_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["battery_states",b"battery_states","behavior_fault_state",b"behavior_fault_state","comms_states",b"comms_states","estop_states",b"estop_states","foot_state",b"foot_state","kinematic_state",b"kinematic_state","manipulator_state",b"manipulator_state","power_state",b"power_state","service_fault_state",b"service_fault_state","system_fault_state",b"system_fault_state"]) -> None: ...
global___RobotState = RobotState

class PowerState(google.protobuf.message.Message):
    """The power state for the robot.
    If a robot is not in the POWER OFF state, if is not safe to approach.
    The robot must not be E-Stopped to enter the POWER_ON state.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _MotorPowerState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MotorPowerStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PowerState._MotorPowerState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATE_UNKNOWN: PowerState._MotorPowerState.ValueType  # 0
        """Unknown motor power state. Do not use this field."""

        MOTOR_POWER_STATE_UNKNOWN: PowerState._MotorPowerState.ValueType  # 0
        STATE_OFF: PowerState._MotorPowerState.ValueType  # 1
        """Motors are off, the robot is safe to approach."""

        MOTOR_POWER_STATE_OFF: PowerState._MotorPowerState.ValueType  # 1
        STATE_ON: PowerState._MotorPowerState.ValueType  # 2
        """The motors are powered."""

        MOTOR_POWER_STATE_ON: PowerState._MotorPowerState.ValueType  # 2
        STATE_POWERING_ON: PowerState._MotorPowerState.ValueType  # 3
        """The robot has received an ON command, and is turning on."""

        MOTOR_POWER_STATE_POWERING_ON: PowerState._MotorPowerState.ValueType  # 3
        STATE_POWERING_OFF: PowerState._MotorPowerState.ValueType  # 4
        """In the process of powering down, not yet safe to approach."""

        MOTOR_POWER_STATE_POWERING_OFF: PowerState._MotorPowerState.ValueType  # 4
        STATE_ERROR: PowerState._MotorPowerState.ValueType  # 5
        """The robot is in an error state and must be powered off before attempting to re-power."""

        MOTOR_POWER_STATE_ERROR: PowerState._MotorPowerState.ValueType  # 5
    class MotorPowerState(_MotorPowerState, metaclass=_MotorPowerStateEnumTypeWrapper):
        pass

    STATE_UNKNOWN: PowerState.MotorPowerState.ValueType  # 0
    """Unknown motor power state. Do not use this field."""

    MOTOR_POWER_STATE_UNKNOWN: PowerState.MotorPowerState.ValueType  # 0
    STATE_OFF: PowerState.MotorPowerState.ValueType  # 1
    """Motors are off, the robot is safe to approach."""

    MOTOR_POWER_STATE_OFF: PowerState.MotorPowerState.ValueType  # 1
    STATE_ON: PowerState.MotorPowerState.ValueType  # 2
    """The motors are powered."""

    MOTOR_POWER_STATE_ON: PowerState.MotorPowerState.ValueType  # 2
    STATE_POWERING_ON: PowerState.MotorPowerState.ValueType  # 3
    """The robot has received an ON command, and is turning on."""

    MOTOR_POWER_STATE_POWERING_ON: PowerState.MotorPowerState.ValueType  # 3
    STATE_POWERING_OFF: PowerState.MotorPowerState.ValueType  # 4
    """In the process of powering down, not yet safe to approach."""

    MOTOR_POWER_STATE_POWERING_OFF: PowerState.MotorPowerState.ValueType  # 4
    STATE_ERROR: PowerState.MotorPowerState.ValueType  # 5
    """The robot is in an error state and must be powered off before attempting to re-power."""

    MOTOR_POWER_STATE_ERROR: PowerState.MotorPowerState.ValueType  # 5

    class _ShorePowerState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ShorePowerStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PowerState._ShorePowerState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATE_UNKNOWN_SHORE_POWER: PowerState._ShorePowerState.ValueType  # 0
        """Unknown shore power state. Do not use."""

        SHORE_POWER_STATE_UNKNOWN: PowerState._ShorePowerState.ValueType  # 0
        STATE_ON_SHORE_POWER: PowerState._ShorePowerState.ValueType  # 1
        """The robot is connected to shore power. The robot will not power on while connected to
        shore power.
        """

        SHORE_POWER_STATE_ON: PowerState._ShorePowerState.ValueType  # 1
        STATE_OFF_SHORE_POWER: PowerState._ShorePowerState.ValueType  # 2
        """The robot is disconnected from shore power and motors can be powered up."""

        SHORE_POWER_STATE_OFF: PowerState._ShorePowerState.ValueType  # 2
    class ShorePowerState(_ShorePowerState, metaclass=_ShorePowerStateEnumTypeWrapper):
        """State describing if robot is connected to shore (wall) power. Robot can't be powered on
        while on shore power
        """
        pass

    STATE_UNKNOWN_SHORE_POWER: PowerState.ShorePowerState.ValueType  # 0
    """Unknown shore power state. Do not use."""

    SHORE_POWER_STATE_UNKNOWN: PowerState.ShorePowerState.ValueType  # 0
    STATE_ON_SHORE_POWER: PowerState.ShorePowerState.ValueType  # 1
    """The robot is connected to shore power. The robot will not power on while connected to
    shore power.
    """

    SHORE_POWER_STATE_ON: PowerState.ShorePowerState.ValueType  # 1
    STATE_OFF_SHORE_POWER: PowerState.ShorePowerState.ValueType  # 2
    """The robot is disconnected from shore power and motors can be powered up."""

    SHORE_POWER_STATE_OFF: PowerState.ShorePowerState.ValueType  # 2

    class _RobotPowerState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RobotPowerStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PowerState._RobotPowerState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ROBOT_POWER_STATE_UNKNOWN: PowerState._RobotPowerState.ValueType  # 0
        """Unknown robot power state. Do not use this field."""

        ROBOT_POWER_STATE_ON: PowerState._RobotPowerState.ValueType  # 1
        """The robot is powered on."""

        ROBOT_POWER_STATE_OFF: PowerState._RobotPowerState.ValueType  # 2
        """The robot does not have power.
        Impossible to get this response, as the robot cannot respond if it is powered off.
        """

    class RobotPowerState(_RobotPowerState, metaclass=_RobotPowerStateEnumTypeWrapper):
        """State describing if the robot has power."""
        pass

    ROBOT_POWER_STATE_UNKNOWN: PowerState.RobotPowerState.ValueType  # 0
    """Unknown robot power state. Do not use this field."""

    ROBOT_POWER_STATE_ON: PowerState.RobotPowerState.ValueType  # 1
    """The robot is powered on."""

    ROBOT_POWER_STATE_OFF: PowerState.RobotPowerState.ValueType  # 2
    """The robot does not have power.
    Impossible to get this response, as the robot cannot respond if it is powered off.
    """


    class _PayloadPortsPowerState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PayloadPortsPowerStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PowerState._PayloadPortsPowerState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        PAYLOAD_PORTS_POWER_STATE_UNKNOWN: PowerState._PayloadPortsPowerState.ValueType  # 0
        """Unknown payload port power state. Do not use this field."""

        PAYLOAD_PORTS_POWER_STATE_ON: PowerState._PayloadPortsPowerState.ValueType  # 1
        """The payload port is powered on."""

        PAYLOAD_PORTS_POWER_STATE_OFF: PowerState._PayloadPortsPowerState.ValueType  # 2
        """The payload port does not have power."""

    class PayloadPortsPowerState(_PayloadPortsPowerState, metaclass=_PayloadPortsPowerStateEnumTypeWrapper):
        """State describing if the payload port has power."""
        pass

    PAYLOAD_PORTS_POWER_STATE_UNKNOWN: PowerState.PayloadPortsPowerState.ValueType  # 0
    """Unknown payload port power state. Do not use this field."""

    PAYLOAD_PORTS_POWER_STATE_ON: PowerState.PayloadPortsPowerState.ValueType  # 1
    """The payload port is powered on."""

    PAYLOAD_PORTS_POWER_STATE_OFF: PowerState.PayloadPortsPowerState.ValueType  # 2
    """The payload port does not have power."""


    class _WifiRadioPowerState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _WifiRadioPowerStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PowerState._WifiRadioPowerState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        WIFI_RADIO_POWER_STATE_UNKNOWN: PowerState._WifiRadioPowerState.ValueType  # 0
        """Unknown radio power state. Do not use this field."""

        WIFI_RADIO_POWER_STATE_ON: PowerState._WifiRadioPowerState.ValueType  # 1
        """The radio is powered on."""

        WIFI_RADIO_POWER_STATE_OFF: PowerState._WifiRadioPowerState.ValueType  # 2
        """The radio does not have power."""

    class WifiRadioPowerState(_WifiRadioPowerState, metaclass=_WifiRadioPowerStateEnumTypeWrapper):
        """State describing if the robot Wi-Fi router has power."""
        pass

    WIFI_RADIO_POWER_STATE_UNKNOWN: PowerState.WifiRadioPowerState.ValueType  # 0
    """Unknown radio power state. Do not use this field."""

    WIFI_RADIO_POWER_STATE_ON: PowerState.WifiRadioPowerState.ValueType  # 1
    """The radio is powered on."""

    WIFI_RADIO_POWER_STATE_OFF: PowerState.WifiRadioPowerState.ValueType  # 2
    """The radio does not have power."""


    TIMESTAMP_FIELD_NUMBER: builtins.int
    MOTOR_POWER_STATE_FIELD_NUMBER: builtins.int
    SHORE_POWER_STATE_FIELD_NUMBER: builtins.int
    ROBOT_POWER_STATE_FIELD_NUMBER: builtins.int
    PAYLOAD_PORTS_POWER_STATE_FIELD_NUMBER: builtins.int
    WIFI_RADIO_POWER_STATE_FIELD_NUMBER: builtins.int
    LOCOMOTION_CHARGE_PERCENTAGE_FIELD_NUMBER: builtins.int
    LOCOMOTION_ESTIMATED_RUNTIME_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Robot clock timestamp corresponding to these readings."""
        pass
    motor_power_state: global___PowerState.MotorPowerState.ValueType
    """The motor power state of the robot."""

    shore_power_state: global___PowerState.ShorePowerState.ValueType
    """The shore power state of the robot."""

    robot_power_state: global___PowerState.RobotPowerState.ValueType
    """The payload ports power state of the robot."""

    payload_ports_power_state: global___PowerState.PayloadPortsPowerState.ValueType
    """The payload ports power state of the robot."""

    wifi_radio_power_state: global___PowerState.WifiRadioPowerState.ValueType
    """The hardware radio power state of the robot."""

    @property
    def locomotion_charge_percentage(self) -> google.protobuf.wrappers_pb2.DoubleValue:
        """Number from 0 (empty) to 100 (full) indicating the estimated state of charge.
        This field provides a summary of the BatteryStates that provide power for motor and/or
        base compute power, both of which are required for locomotion.
        """
        pass
    @property
    def locomotion_estimated_runtime(self) -> google.protobuf.duration_pb2.Duration:
        """An estimate of remaining runtime. Note that this field might not be populated.
        This field provides a summary of the BatteryStates that provide power for motor and/or
        base compute power, both of which are required for locomotion.
        """
        pass
    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        motor_power_state: global___PowerState.MotorPowerState.ValueType = ...,
        shore_power_state: global___PowerState.ShorePowerState.ValueType = ...,
        robot_power_state: global___PowerState.RobotPowerState.ValueType = ...,
        payload_ports_power_state: global___PowerState.PayloadPortsPowerState.ValueType = ...,
        wifi_radio_power_state: global___PowerState.WifiRadioPowerState.ValueType = ...,
        locomotion_charge_percentage: typing.Optional[google.protobuf.wrappers_pb2.DoubleValue] = ...,
        locomotion_estimated_runtime: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["locomotion_charge_percentage",b"locomotion_charge_percentage","locomotion_estimated_runtime",b"locomotion_estimated_runtime","timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["locomotion_charge_percentage",b"locomotion_charge_percentage","locomotion_estimated_runtime",b"locomotion_estimated_runtime","motor_power_state",b"motor_power_state","payload_ports_power_state",b"payload_ports_power_state","robot_power_state",b"robot_power_state","shore_power_state",b"shore_power_state","timestamp",b"timestamp","wifi_radio_power_state",b"wifi_radio_power_state"]) -> None: ...
global___PowerState = PowerState

class SystemFaultState(google.protobuf.message.Message):
    """The current state of each system fault the robot is experiencing.
    An "active" fault indicates a hardware/software currently on the robot.
    A "historical" fault indicates a, now cleared, hardware/software problem.
    Historical faults are useful to diagnose robot behavior subject to intermittent failed states.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class AggregatedEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: global___SystemFault.Severity.ValueType
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: global___SystemFault.Severity.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FAULTS_FIELD_NUMBER: builtins.int
    HISTORICAL_FAULTS_FIELD_NUMBER: builtins.int
    AGGREGATED_FIELD_NUMBER: builtins.int
    @property
    def faults(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SystemFault]:
        """Currently active faults"""
        pass
    @property
    def historical_faults(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SystemFault]:
        """Inactive faults that cleared within the last 10 minutes"""
        pass
    @property
    def aggregated(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, global___SystemFault.Severity.ValueType]:
        """Aggregated fault data.
        This provides a very quick way of determining if there any
        "battery" or "vision" faults above a certain severity level.
        """
        pass
    def __init__(self,
        *,
        faults: typing.Optional[typing.Iterable[global___SystemFault]] = ...,
        historical_faults: typing.Optional[typing.Iterable[global___SystemFault]] = ...,
        aggregated: typing.Optional[typing.Mapping[typing.Text, global___SystemFault.Severity.ValueType]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["aggregated",b"aggregated","faults",b"faults","historical_faults",b"historical_faults"]) -> None: ...
global___SystemFaultState = SystemFaultState

class SystemFault(google.protobuf.message.Message):
    """The current system faults for a robot.
    A fault is an indicator of a hardware or software problem on the robot. An
    active fault may indicate the robot may fail to comply with a user request.
    The exact response a fault may vary, but possible responses include: failure
    to enable motor power, loss of perception enabled behavior, or triggering a
    fault recovery behavior on robot.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Severity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SeverityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SystemFault._Severity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SEVERITY_UNKNOWN: SystemFault._Severity.ValueType  # 0
        """Unknown severity"""

        SEVERITY_INFO: SystemFault._Severity.ValueType  # 1
        """No hardware problem"""

        SEVERITY_WARN: SystemFault._Severity.ValueType  # 2
        """Robot performance may be degraded"""

        SEVERITY_CRITICAL: SystemFault._Severity.ValueType  # 3
        """Critical fault"""

    class Severity(_Severity, metaclass=_SeverityEnumTypeWrapper):
        pass

    SEVERITY_UNKNOWN: SystemFault.Severity.ValueType  # 0
    """Unknown severity"""

    SEVERITY_INFO: SystemFault.Severity.ValueType  # 1
    """No hardware problem"""

    SEVERITY_WARN: SystemFault.Severity.ValueType  # 2
    """Robot performance may be degraded"""

    SEVERITY_CRITICAL: SystemFault.Severity.ValueType  # 3
    """Critical fault"""


    NAME_FIELD_NUMBER: builtins.int
    ONSET_TIMESTAMP_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    SEVERITY_FIELD_NUMBER: builtins.int
    name: typing.Text
    """Name of the fault."""

    @property
    def onset_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time of robot local clock at fault onset."""
        pass
    @property
    def duration(self) -> google.protobuf.duration_pb2.Duration:
        """Time elapsed since onset of the fault."""
        pass
    code: builtins.int
    """Error code returned by a fault. The exact interpretation of the fault code
    is unique to each variety of fault on the robot. The code is useful for
    Boston Dynamics support staff to diagnose hardware/software issues on
    robot.
    """

    uid: builtins.int
    """Fault UID"""

    error_message: typing.Text
    """User visible description of the fault (and possibly remedies.)"""

    @property
    def attributes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Fault attributes
        Each fault may be flagged with attribute metadata (strings in this case.)
        These attributes are useful to communicate that a particular fault may
        have significant effect on robot operations. Some potential attributes
        may be "robot", "imu", "vision", or "battery". These attributes would let
        us flag a fault as indicating a problem with the base robot hardware,
        gyro, perception system, or battery respectively. A fault may have, zero,
        one, or more attributes attached to it, i.e. a "battery" fault may also
        be considered a "robot" fault.
        """
        pass
    severity: global___SystemFault.Severity.ValueType
    """Fault severity, how bad is the fault?
    The severity level will have some indication of the potential robot
    response to the fault. For example, a fault marked with "battery"
    attribute and severity level SEVERITY_WARN may indicate a low battery
    state of charge. However a "battery" fault with severity level
    SEVERITY_CRITICAL likely means the robot is going to shutdown
    immediately.
    """

    def __init__(self,
        *,
        name: typing.Text = ...,
        onset_timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        duration: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        code: builtins.int = ...,
        uid: builtins.int = ...,
        error_message: typing.Text = ...,
        attributes: typing.Optional[typing.Iterable[typing.Text]] = ...,
        severity: global___SystemFault.Severity.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["duration",b"duration","onset_timestamp",b"onset_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attributes",b"attributes","code",b"code","duration",b"duration","error_message",b"error_message","name",b"name","onset_timestamp",b"onset_timestamp","severity",b"severity","uid",b"uid"]) -> None: ...
global___SystemFault = SystemFault

class EStopState(google.protobuf.message.Message):
    """The robot's current E-Stop states and endpoints.
    A typical robot has several different E-Stops, all which must be "NOT_ESTOPPED"
    in order to run the robot.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[EStopState._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TYPE_UNKNOWN: EStopState._Type.ValueType  # 0
        """Unknown type of E-Stop. Do not use this field."""

        TYPE_HARDWARE: EStopState._Type.ValueType  # 1
        """E-Stop is a physical button"""

        TYPE_SOFTWARE: EStopState._Type.ValueType  # 2
        """E-Stop is a software process"""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    TYPE_UNKNOWN: EStopState.Type.ValueType  # 0
    """Unknown type of E-Stop. Do not use this field."""

    TYPE_HARDWARE: EStopState.Type.ValueType  # 1
    """E-Stop is a physical button"""

    TYPE_SOFTWARE: EStopState.Type.ValueType  # 2
    """E-Stop is a software process"""


    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[EStopState._State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATE_UNKNOWN: EStopState._State.ValueType  # 0
        """No E-Stop information is present. Only happens in an error case."""

        STATE_ESTOPPED: EStopState._State.ValueType  # 1
        """E-Stop is active -- robot cannot power its actuators."""

        STATE_NOT_ESTOPPED: EStopState._State.ValueType  # 2
        """E-Stop is released -- robot may be able to power its actuators."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        pass

    STATE_UNKNOWN: EStopState.State.ValueType  # 0
    """No E-Stop information is present. Only happens in an error case."""

    STATE_ESTOPPED: EStopState.State.ValueType  # 1
    """E-Stop is active -- robot cannot power its actuators."""

    STATE_NOT_ESTOPPED: EStopState.State.ValueType  # 2
    """E-Stop is released -- robot may be able to power its actuators."""


    TIMESTAMP_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    STATE_DESCRIPTION_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Robot clock timestamp corresponding to these readings."""
        pass
    name: typing.Text
    """Name of the E-Stop"""

    type: global___EStopState.Type.ValueType
    """What kind of E-Stop this message describes."""

    state: global___EStopState.State.ValueType
    """The state of the E-Stop (is it E-Stopped or not?)"""

    state_description: typing.Text
    """Optional description of E-Stop status."""

    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        name: typing.Text = ...,
        type: global___EStopState.Type.ValueType = ...,
        state: global___EStopState.State.ValueType = ...,
        state_description: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","state",b"state","state_description",b"state_description","timestamp",b"timestamp","type",b"type"]) -> None: ...
global___EStopState = EStopState

class BatteryState(google.protobuf.message.Message):
    """The battery state for the robot. This includes information about the charge or the
    battery temperature.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BatteryState._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: BatteryState._Status.ValueType  # 0
        """The battery is in an unknown / unexpected state."""

        STATUS_MISSING: BatteryState._Status.ValueType  # 1
        """The battery is not plugged in or otherwise not talking."""

        STATUS_CHARGING: BatteryState._Status.ValueType  # 2
        """The battery is plugged in to shore power and charging."""

        STATUS_DISCHARGING: BatteryState._Status.ValueType  # 3
        """The battery is not plugged into shore power and discharging."""

        STATUS_BOOTING: BatteryState._Status.ValueType  # 4
        """The battery was just plugged in and is booting up= 3;"""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: BatteryState.Status.ValueType  # 0
    """The battery is in an unknown / unexpected state."""

    STATUS_MISSING: BatteryState.Status.ValueType  # 1
    """The battery is not plugged in or otherwise not talking."""

    STATUS_CHARGING: BatteryState.Status.ValueType  # 2
    """The battery is plugged in to shore power and charging."""

    STATUS_DISCHARGING: BatteryState.Status.ValueType  # 3
    """The battery is not plugged into shore power and discharging."""

    STATUS_BOOTING: BatteryState.Status.ValueType  # 4
    """The battery was just plugged in and is booting up= 3;"""


    TIMESTAMP_FIELD_NUMBER: builtins.int
    IDENTIFIER_FIELD_NUMBER: builtins.int
    CHARGE_PERCENTAGE_FIELD_NUMBER: builtins.int
    ESTIMATED_RUNTIME_FIELD_NUMBER: builtins.int
    CURRENT_FIELD_NUMBER: builtins.int
    VOLTAGE_FIELD_NUMBER: builtins.int
    TEMPERATURES_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Robot clock timestamp corresponding to these readings."""
        pass
    identifier: typing.Text
    """An identifier for this battery (could be a serial number or a name. subject to change)."""

    @property
    def charge_percentage(self) -> google.protobuf.wrappers_pb2.DoubleValue:
        """Number from 0 (empty) to 100 (full) indicating the estimated state of charge of the battery."""
        pass
    @property
    def estimated_runtime(self) -> google.protobuf.duration_pb2.Duration:
        """An estimate of remaining runtime. Note that this field might not be populated."""
        pass
    @property
    def current(self) -> google.protobuf.wrappers_pb2.DoubleValue:
        """Measured current into (charging, positive) or out of (discharging, negative) the battery in
        Amps.
        """
        pass
    @property
    def voltage(self) -> google.protobuf.wrappers_pb2.DoubleValue:
        """Measured voltage of the entire battery in Volts."""
        pass
    @property
    def temperatures(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Measured temperature measurements of battery, in Celsius.
        Temperatures may be measured in many locations across the battery.
        """
        pass
    status: global___BatteryState.Status.ValueType
    """Current state of the battery."""

    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        identifier: typing.Text = ...,
        charge_percentage: typing.Optional[google.protobuf.wrappers_pb2.DoubleValue] = ...,
        estimated_runtime: typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        current: typing.Optional[google.protobuf.wrappers_pb2.DoubleValue] = ...,
        voltage: typing.Optional[google.protobuf.wrappers_pb2.DoubleValue] = ...,
        temperatures: typing.Optional[typing.Iterable[builtins.float]] = ...,
        status: global___BatteryState.Status.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["charge_percentage",b"charge_percentage","current",b"current","estimated_runtime",b"estimated_runtime","timestamp",b"timestamp","voltage",b"voltage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["charge_percentage",b"charge_percentage","current",b"current","estimated_runtime",b"estimated_runtime","identifier",b"identifier","status",b"status","temperatures",b"temperatures","timestamp",b"timestamp","voltage",b"voltage"]) -> None: ...
global___BatteryState = BatteryState

class KinematicState(google.protobuf.message.Message):
    """The kinematic state of the robot describes the current estimated positions of the robot body and joints throughout the world.
    It includes a transform snapshot of the robot’s current known frames as well as joint states and the velocity of the body.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    JOINT_STATES_FIELD_NUMBER: builtins.int
    ACQUISITION_TIMESTAMP_FIELD_NUMBER: builtins.int
    TRANSFORMS_SNAPSHOT_FIELD_NUMBER: builtins.int
    VELOCITY_OF_BODY_IN_VISION_FIELD_NUMBER: builtins.int
    VELOCITY_OF_BODY_IN_ODOM_FIELD_NUMBER: builtins.int
    @property
    def joint_states(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___JointState]:
        """Joint state of all robot joints."""
        pass
    @property
    def acquisition_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Robot clock timestamp corresponding to these readings."""
        pass
    @property
    def transforms_snapshot(self) -> bosdyn.api.geometry_pb2.FrameTreeSnapshot:
        """A tree-based collection of transformations, which will include the transformations to the
        robot body ("body") in addition to transformations to the common frames ("world", "dr") and
        ground plane estimate "gpe".
        All transforms within the snapshot are at the acquisition time of kinematic state.
        """
        pass
    @property
    def velocity_of_body_in_vision(self) -> bosdyn.api.geometry_pb2.SE3Velocity:
        """Velocity of the body frame with respect to vision frame and expressed in vision frame.
        The linear velocity is applied at the origin of the body frame.
        """
        pass
    @property
    def velocity_of_body_in_odom(self) -> bosdyn.api.geometry_pb2.SE3Velocity:
        """Velocity of the body frame with respect to odom frame and expressed in odom frame.
        Again, the linear velocity is applied at the origin of the body frame.
        """
        pass
    def __init__(self,
        *,
        joint_states: typing.Optional[typing.Iterable[global___JointState]] = ...,
        acquisition_timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        transforms_snapshot: typing.Optional[bosdyn.api.geometry_pb2.FrameTreeSnapshot] = ...,
        velocity_of_body_in_vision: typing.Optional[bosdyn.api.geometry_pb2.SE3Velocity] = ...,
        velocity_of_body_in_odom: typing.Optional[bosdyn.api.geometry_pb2.SE3Velocity] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["acquisition_timestamp",b"acquisition_timestamp","transforms_snapshot",b"transforms_snapshot","velocity_of_body_in_odom",b"velocity_of_body_in_odom","velocity_of_body_in_vision",b"velocity_of_body_in_vision"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["acquisition_timestamp",b"acquisition_timestamp","joint_states",b"joint_states","transforms_snapshot",b"transforms_snapshot","velocity_of_body_in_odom",b"velocity_of_body_in_odom","velocity_of_body_in_vision",b"velocity_of_body_in_vision"]) -> None: ...
global___KinematicState = KinematicState

class JointState(google.protobuf.message.Message):
    """Proto containing the state of a joint on the robot. This can be used with the robot skeleton to
    update the current view of the robot.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    VELOCITY_FIELD_NUMBER: builtins.int
    ACCELERATION_FIELD_NUMBER: builtins.int
    LOAD_FIELD_NUMBER: builtins.int
    name: typing.Text
    """This name maps directly to the joints in the URDF."""

    @property
    def position(self) -> google.protobuf.wrappers_pb2.DoubleValue:
        """This is typically an angle in radians as joints are typically revolute. However, for
        translational joints this could be a distance in meters.
        """
        pass
    @property
    def velocity(self) -> google.protobuf.wrappers_pb2.DoubleValue:
        """The joint velocity in [m/s]."""
        pass
    @property
    def acceleration(self) -> google.protobuf.wrappers_pb2.DoubleValue:
        """The joint acceleration in [m/s^2]."""
        pass
    @property
    def load(self) -> google.protobuf.wrappers_pb2.DoubleValue:
        """This is typically a torque in Newton meters as joints are typically revolute. However, for
        translational joints this could be a force in Newtons.
        """
        pass
    def __init__(self,
        *,
        name: typing.Text = ...,
        position: typing.Optional[google.protobuf.wrappers_pb2.DoubleValue] = ...,
        velocity: typing.Optional[google.protobuf.wrappers_pb2.DoubleValue] = ...,
        acceleration: typing.Optional[google.protobuf.wrappers_pb2.DoubleValue] = ...,
        load: typing.Optional[google.protobuf.wrappers_pb2.DoubleValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["acceleration",b"acceleration","load",b"load","position",b"position","velocity",b"velocity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["acceleration",b"acceleration","load",b"load","name",b"name","position",b"position","velocity",b"velocity"]) -> None: ...
global___JointState = JointState

class BehaviorFaultState(google.protobuf.message.Message):
    """This describes any current behaviror faults on the robot, which would block any robot commands
    from going through. These can be cleared using the ClearBehaviorFault rpc in the robot command
    service.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FAULTS_FIELD_NUMBER: builtins.int
    @property
    def faults(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BehaviorFault]:
        """Current errors potentially blocking commands on robot"""
        pass
    def __init__(self,
        *,
        faults: typing.Optional[typing.Iterable[global___BehaviorFault]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["faults",b"faults"]) -> None: ...
global___BehaviorFaultState = BehaviorFaultState

class BehaviorFault(google.protobuf.message.Message):
    """The details of what the behavior fault consistents of, and the id for the fault. The unique
    behavior_fault_id can be used to clear the fault in robot command service ClearBehaviorFault rpc.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Cause:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CauseEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BehaviorFault._Cause.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CAUSE_UNKNOWN: BehaviorFault._Cause.ValueType  # 0
        """Unknown cause of error"""

        CAUSE_FALL: BehaviorFault._Cause.ValueType  # 1
        """Error caused by mobility failure or fall"""

        CAUSE_HARDWARE: BehaviorFault._Cause.ValueType  # 2
        """Error caused by robot hardware malfunction"""

        CAUSE_LEASE_TIMEOUT: BehaviorFault._Cause.ValueType  # 3
        """/ A lease has timed out"""

    class Cause(_Cause, metaclass=_CauseEnumTypeWrapper):
        pass

    CAUSE_UNKNOWN: BehaviorFault.Cause.ValueType  # 0
    """Unknown cause of error"""

    CAUSE_FALL: BehaviorFault.Cause.ValueType  # 1
    """Error caused by mobility failure or fall"""

    CAUSE_HARDWARE: BehaviorFault.Cause.ValueType  # 2
    """Error caused by robot hardware malfunction"""

    CAUSE_LEASE_TIMEOUT: BehaviorFault.Cause.ValueType  # 3
    """/ A lease has timed out"""


    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[BehaviorFault._Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STATUS_UNKNOWN: BehaviorFault._Status.ValueType  # 0
        """Unknown clearable status"""

        STATUS_CLEARABLE: BehaviorFault._Status.ValueType  # 1
        """Fault is clearable"""

        STATUS_UNCLEARABLE: BehaviorFault._Status.ValueType  # 2
        """Fault is currently not clearable"""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        pass

    STATUS_UNKNOWN: BehaviorFault.Status.ValueType  # 0
    """Unknown clearable status"""

    STATUS_CLEARABLE: BehaviorFault.Status.ValueType  # 1
    """Fault is clearable"""

    STATUS_UNCLEARABLE: BehaviorFault.Status.ValueType  # 2
    """Fault is currently not clearable"""


    BEHAVIOR_FAULT_ID_FIELD_NUMBER: builtins.int
    ONSET_TIMESTAMP_FIELD_NUMBER: builtins.int
    CAUSE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    behavior_fault_id: builtins.int
    """Behavior fault unique id"""

    @property
    def onset_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time of robot local clock at time of the error"""
        pass
    cause: global___BehaviorFault.Cause.ValueType
    """The potential cause of the fault."""

    status: global___BehaviorFault.Status.ValueType
    """Information about the status/what can be done with the fault."""

    def __init__(self,
        *,
        behavior_fault_id: builtins.int = ...,
        onset_timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        cause: global___BehaviorFault.Cause.ValueType = ...,
        status: global___BehaviorFault.Status.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["onset_timestamp",b"onset_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["behavior_fault_id",b"behavior_fault_id","cause",b"cause","onset_timestamp",b"onset_timestamp","status",b"status"]) -> None: ...
global___BehaviorFault = BehaviorFault

class RobotMetrics(google.protobuf.message.Message):
    """Key robot metrics (e.g., Gait cycles (count), distance walked, time moving, etc...)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIMESTAMP_FIELD_NUMBER: builtins.int
    METRICS_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Robot timestamp corresponding to these metrics."""
        pass
    @property
    def metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.parameter_pb2.Parameter]:
        """Key tracked robot metrics, such as distance walked, runtime, etc."""
        pass
    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        metrics: typing.Optional[typing.Iterable[bosdyn.api.parameter_pb2.Parameter]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["metrics",b"metrics","timestamp",b"timestamp"]) -> None: ...
global___RobotMetrics = RobotMetrics

class CommsState(google.protobuf.message.Message):
    """The current comms information, including what comms the robot is using and the current status
    of the comms network.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIMESTAMP_FIELD_NUMBER: builtins.int
    WIFI_STATE_FIELD_NUMBER: builtins.int
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Robot timestamp corresponding to these readings."""
        pass
    @property
    def wifi_state(self) -> global___WiFiState:
        """The communication state is WiFi."""
        pass
    def __init__(self,
        *,
        timestamp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        wifi_state: typing.Optional[global___WiFiState] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["state",b"state","timestamp",b"timestamp","wifi_state",b"wifi_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["state",b"state","timestamp",b"timestamp","wifi_state",b"wifi_state"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["state",b"state"]) -> typing.Optional[typing_extensions.Literal["wifi_state"]]: ...
global___CommsState = CommsState

class WiFiState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Mode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[WiFiState._Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        MODE_UNKNOWN: WiFiState._Mode.ValueType  # 0
        """The robot's comms state is unknown, or no user requested mode."""

        MODE_ACCESS_POINT: WiFiState._Mode.ValueType  # 1
        """The robot is acting as an access point."""

        MODE_CLIENT: WiFiState._Mode.ValueType  # 2
        """The robot is connected to a network."""

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper):
        pass

    MODE_UNKNOWN: WiFiState.Mode.ValueType  # 0
    """The robot's comms state is unknown, or no user requested mode."""

    MODE_ACCESS_POINT: WiFiState.Mode.ValueType  # 1
    """The robot is acting as an access point."""

    MODE_CLIENT: WiFiState.Mode.ValueType  # 2
    """The robot is connected to a network."""


    CURRENT_MODE_FIELD_NUMBER: builtins.int
    ESSID_FIELD_NUMBER: builtins.int
    current_mode: global___WiFiState.Mode.ValueType
    """Current WiFi mode."""

    essid: typing.Text
    """Essid of robot (master mode) or connected network."""

    def __init__(self,
        *,
        current_mode: global___WiFiState.Mode.ValueType = ...,
        essid: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_mode",b"current_mode","essid",b"essid"]) -> None: ...
global___WiFiState = WiFiState

class FootState(google.protobuf.message.Message):
    """Information about the foot positions and contact state, on a per-foot basis."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Contact:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ContactEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[FootState._Contact.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CONTACT_UNKNOWN: FootState._Contact.ValueType  # 0
        """Unknown contact. Do not use."""

        CONTACT_MADE: FootState._Contact.ValueType  # 1
        """The foot is currently in contact with the ground."""

        CONTACT_LOST: FootState._Contact.ValueType  # 2
        """The foot is not in contact with the ground."""

    class Contact(_Contact, metaclass=_ContactEnumTypeWrapper):
        pass

    CONTACT_UNKNOWN: FootState.Contact.ValueType  # 0
    """Unknown contact. Do not use."""

    CONTACT_MADE: FootState.Contact.ValueType  # 1
    """The foot is currently in contact with the ground."""

    CONTACT_LOST: FootState.Contact.ValueType  # 2
    """The foot is not in contact with the ground."""


    class TerrainState(google.protobuf.message.Message):
        """Foot specific terrain data. Data may not be valid if the contact state is
        not CONTACT_MADE.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        GROUND_MU_EST_FIELD_NUMBER: builtins.int
        FRAME_NAME_FIELD_NUMBER: builtins.int
        FOOT_SLIP_DISTANCE_RT_FRAME_FIELD_NUMBER: builtins.int
        FOOT_SLIP_VELOCITY_RT_FRAME_FIELD_NUMBER: builtins.int
        GROUND_CONTACT_NORMAL_RT_FRAME_FIELD_NUMBER: builtins.int
        VISUAL_SURFACE_GROUND_PENETRATION_MEAN_FIELD_NUMBER: builtins.int
        VISUAL_SURFACE_GROUND_PENETRATION_STD_FIELD_NUMBER: builtins.int
        ground_mu_est: builtins.float
        """Estimated ground coefficient of friction for this foot."""

        frame_name: typing.Text
        """Reference frame name for vector data."""

        @property
        def foot_slip_distance_rt_frame(self) -> bosdyn.api.geometry_pb2.Vec3:
            """Foot slip distance rt named frame"""
            pass
        @property
        def foot_slip_velocity_rt_frame(self) -> bosdyn.api.geometry_pb2.Vec3:
            """Foot slip velocity rt named frame"""
            pass
        @property
        def ground_contact_normal_rt_frame(self) -> bosdyn.api.geometry_pb2.Vec3:
            """Ground contact normal rt named frame"""
            pass
        visual_surface_ground_penetration_mean: builtins.float
        """Mean penetration (meters) of the foot below the ground visual
        surface. For penetrable terrains (gravel/sand/grass etc.) these values are
        positive. Negative values would indicate potential odometry issues.
        """

        visual_surface_ground_penetration_std: builtins.float
        """Standard deviation of the visual surface ground penetration."""

        def __init__(self,
            *,
            ground_mu_est: builtins.float = ...,
            frame_name: typing.Text = ...,
            foot_slip_distance_rt_frame: typing.Optional[bosdyn.api.geometry_pb2.Vec3] = ...,
            foot_slip_velocity_rt_frame: typing.Optional[bosdyn.api.geometry_pb2.Vec3] = ...,
            ground_contact_normal_rt_frame: typing.Optional[bosdyn.api.geometry_pb2.Vec3] = ...,
            visual_surface_ground_penetration_mean: builtins.float = ...,
            visual_surface_ground_penetration_std: builtins.float = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["foot_slip_distance_rt_frame",b"foot_slip_distance_rt_frame","foot_slip_velocity_rt_frame",b"foot_slip_velocity_rt_frame","ground_contact_normal_rt_frame",b"ground_contact_normal_rt_frame"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["foot_slip_distance_rt_frame",b"foot_slip_distance_rt_frame","foot_slip_velocity_rt_frame",b"foot_slip_velocity_rt_frame","frame_name",b"frame_name","ground_contact_normal_rt_frame",b"ground_contact_normal_rt_frame","ground_mu_est",b"ground_mu_est","visual_surface_ground_penetration_mean",b"visual_surface_ground_penetration_mean","visual_surface_ground_penetration_std",b"visual_surface_ground_penetration_std"]) -> None: ...

    FOOT_POSITION_RT_BODY_FIELD_NUMBER: builtins.int
    CONTACT_FIELD_NUMBER: builtins.int
    TERRAIN_FIELD_NUMBER: builtins.int
    @property
    def foot_position_rt_body(self) -> bosdyn.api.geometry_pb2.Vec3:
        """The foot position described relative to the body."""
        pass
    contact: global___FootState.Contact.ValueType
    """Is the foot in contact with the ground?"""

    @property
    def terrain(self) -> global___FootState.TerrainState: ...
    def __init__(self,
        *,
        foot_position_rt_body: typing.Optional[bosdyn.api.geometry_pb2.Vec3] = ...,
        contact: global___FootState.Contact.ValueType = ...,
        terrain: typing.Optional[global___FootState.TerrainState] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["foot_position_rt_body",b"foot_position_rt_body","terrain",b"terrain"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["contact",b"contact","foot_position_rt_body",b"foot_position_rt_body","terrain",b"terrain"]) -> None: ...
global___FootState = FootState

class ManipulatorState(google.protobuf.message.Message):
    """/ Additional state published if an arm is attached to the robot."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _StowState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StowStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ManipulatorState._StowState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STOWSTATE_UNKNOWN: ManipulatorState._StowState.ValueType  # 0
        STOWSTATE_STOWED: ManipulatorState._StowState.ValueType  # 1
        STOWSTATE_DEPLOYED: ManipulatorState._StowState.ValueType  # 2
    class StowState(_StowState, metaclass=_StowStateEnumTypeWrapper):
        pass

    STOWSTATE_UNKNOWN: ManipulatorState.StowState.ValueType  # 0
    STOWSTATE_STOWED: ManipulatorState.StowState.ValueType  # 1
    STOWSTATE_DEPLOYED: ManipulatorState.StowState.ValueType  # 2

    class _CarryState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CarryStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ManipulatorState._CarryState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CARRY_STATE_UNKNOWN: ManipulatorState._CarryState.ValueType  # 0
        CARRY_STATE_NOT_CARRIABLE: ManipulatorState._CarryState.ValueType  # 1
        CARRY_STATE_CARRIABLE: ManipulatorState._CarryState.ValueType  # 2
        CARRY_STATE_CARRIABLE_AND_STOWABLE: ManipulatorState._CarryState.ValueType  # 3
    class CarryState(_CarryState, metaclass=_CarryStateEnumTypeWrapper):
        """The stowing behavior is modified as a function of the Carry State.  If holding an item, the
        stowing behavior will be modified as follows:
         NOT_CARRIABLE - The arm will not stow, instead entering stop
         CARRIABLE - The arm will not stow, instead entering stop
         CARRIABLE_AND_STOWABLE - The arm will stow while continuing to grasp the item
        The comms loss behavior of the arm is also modified as follows:
         NOT_CARRIABLE - The arm will release the item and stow
         CARRIABLE - The arm will not stow, instead entering stop
         CARRIABLE_AND_STOWABLE - The arm will stow while continuing to grasp the item
        """
        pass

    CARRY_STATE_UNKNOWN: ManipulatorState.CarryState.ValueType  # 0
    CARRY_STATE_NOT_CARRIABLE: ManipulatorState.CarryState.ValueType  # 1
    CARRY_STATE_CARRIABLE: ManipulatorState.CarryState.ValueType  # 2
    CARRY_STATE_CARRIABLE_AND_STOWABLE: ManipulatorState.CarryState.ValueType  # 3

    GRIPPER_OPEN_PERCENTAGE_FIELD_NUMBER: builtins.int
    IS_GRIPPER_HOLDING_ITEM_FIELD_NUMBER: builtins.int
    ESTIMATED_END_EFFECTOR_FORCE_IN_HAND_FIELD_NUMBER: builtins.int
    STOW_STATE_FIELD_NUMBER: builtins.int
    VELOCITY_OF_HAND_IN_VISION_FIELD_NUMBER: builtins.int
    VELOCITY_OF_HAND_IN_ODOM_FIELD_NUMBER: builtins.int
    CARRY_STATE_FIELD_NUMBER: builtins.int
    gripper_open_percentage: builtins.float
    """How open the gripper is, measured in percent.
    0 = fully closed, 100 = fully open.
    """

    is_gripper_holding_item: builtins.bool
    """/ Will be true if the gripper is holding an item, false otherwise."""

    @property
    def estimated_end_effector_force_in_hand(self) -> bosdyn.api.geometry_pb2.Vec3:
        """The estimated force on the end-effector expressed in the hand frame."""
        pass
    stow_state: global___ManipulatorState.StowState.ValueType
    """/ Information on if the arm is stowed, or deployed."""

    @property
    def velocity_of_hand_in_vision(self) -> bosdyn.api.geometry_pb2.SE3Velocity:
        """Velocity of the hand frame with respect to vision frame and expressed in vision frame.
        The linear velocity is applied at the origin of the hand frame.
        """
        pass
    @property
    def velocity_of_hand_in_odom(self) -> bosdyn.api.geometry_pb2.SE3Velocity:
        """Velocity of the hand frame with respect to odom frame and expressed in odom frame.
        Again, the linear velocity is applied at the origin of the hand frame.
        """
        pass
    carry_state: global___ManipulatorState.CarryState.ValueType
    def __init__(self,
        *,
        gripper_open_percentage: builtins.float = ...,
        is_gripper_holding_item: builtins.bool = ...,
        estimated_end_effector_force_in_hand: typing.Optional[bosdyn.api.geometry_pb2.Vec3] = ...,
        stow_state: global___ManipulatorState.StowState.ValueType = ...,
        velocity_of_hand_in_vision: typing.Optional[bosdyn.api.geometry_pb2.SE3Velocity] = ...,
        velocity_of_hand_in_odom: typing.Optional[bosdyn.api.geometry_pb2.SE3Velocity] = ...,
        carry_state: global___ManipulatorState.CarryState.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["estimated_end_effector_force_in_hand",b"estimated_end_effector_force_in_hand","velocity_of_hand_in_odom",b"velocity_of_hand_in_odom","velocity_of_hand_in_vision",b"velocity_of_hand_in_vision"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["carry_state",b"carry_state","estimated_end_effector_force_in_hand",b"estimated_end_effector_force_in_hand","gripper_open_percentage",b"gripper_open_percentage","is_gripper_holding_item",b"is_gripper_holding_item","stow_state",b"stow_state","velocity_of_hand_in_odom",b"velocity_of_hand_in_odom","velocity_of_hand_in_vision",b"velocity_of_hand_in_vision"]) -> None: ...
global___ManipulatorState = ManipulatorState

class ServiceFaultState(google.protobuf.message.Message):
    """The current state of each service fault the robot is experiencing.
    An "active" fault indicates a fault currently in a service.
    A "historical" fault indicates a, now cleared, service problem.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class AggregatedEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: bosdyn.api.service_fault_pb2.ServiceFault.Severity.ValueType
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: bosdyn.api.service_fault_pb2.ServiceFault.Severity.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FAULTS_FIELD_NUMBER: builtins.int
    HISTORICAL_FAULTS_FIELD_NUMBER: builtins.int
    AGGREGATED_FIELD_NUMBER: builtins.int
    @property
    def faults(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.service_fault_pb2.ServiceFault]:
        """Currently active faults"""
        pass
    @property
    def historical_faults(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.service_fault_pb2.ServiceFault]:
        """Service faults that have been cleared. Acts as a ring buffer with size of 50."""
        pass
    @property
    def aggregated(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, bosdyn.api.service_fault_pb2.ServiceFault.Severity.ValueType]:
        """Aggregated service fault data. Maps attribute string to highest severity level
        of any active fault containing that attribute string.
        This provides a very quick way of determining if there any "locomotion" or
        "vision" faults above a certain severity level.
        """
        pass
    def __init__(self,
        *,
        faults: typing.Optional[typing.Iterable[bosdyn.api.service_fault_pb2.ServiceFault]] = ...,
        historical_faults: typing.Optional[typing.Iterable[bosdyn.api.service_fault_pb2.ServiceFault]] = ...,
        aggregated: typing.Optional[typing.Mapping[typing.Text, bosdyn.api.service_fault_pb2.ServiceFault.Severity.ValueType]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["aggregated",b"aggregated","faults",b"faults","historical_faults",b"historical_faults"]) -> None: ...
global___ServiceFaultState = ServiceFaultState

class RobotStateRequest(google.protobuf.message.Message):
    """The RobotState request message to get the current state of the robot."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header"]) -> None: ...
global___RobotStateRequest = RobotStateRequest

class RobotStateResponse(google.protobuf.message.Message):
    """The RobotState response message, which returns the robot state information from the time
    the request was received.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    ROBOT_STATE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def robot_state(self) -> global___RobotState:
        """The requested RobotState."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        robot_state: typing.Optional[global___RobotState] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","robot_state",b"robot_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","robot_state",b"robot_state"]) -> None: ...
global___RobotStateResponse = RobotStateResponse

class RobotMetricsRequest(google.protobuf.message.Message):
    """The RobotMetrics request message to get metrics and parameters from the robot."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header"]) -> None: ...
global___RobotMetricsRequest = RobotMetricsRequest

class RobotMetricsResponse(google.protobuf.message.Message):
    """The RobotMetrics response message, which returns the metrics information from the time
    the request was received.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    ROBOT_METRICS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def robot_metrics(self) -> global___RobotMetrics:
        """The requested robot metrics."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        robot_metrics: typing.Optional[global___RobotMetrics] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","robot_metrics",b"robot_metrics"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","robot_metrics",b"robot_metrics"]) -> None: ...
global___RobotMetricsResponse = RobotMetricsResponse

class RobotHardwareConfigurationRequest(google.protobuf.message.Message):
    """The RobotHardwareConfiguration request message to get hardware configuration, described
    by the robot skeleton and urdf.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header"]) -> None: ...
global___RobotHardwareConfigurationRequest = RobotHardwareConfigurationRequest

class RobotHardwareConfigurationResponse(google.protobuf.message.Message):
    """The RobotHardwareConfiguration response message, which returns the hardware config from the time
    the request was received.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    HARDWARE_CONFIGURATION_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def hardware_configuration(self) -> global___HardwareConfiguration:
        """The requested RobotState."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        hardware_configuration: typing.Optional[global___HardwareConfiguration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hardware_configuration",b"hardware_configuration","header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hardware_configuration",b"hardware_configuration","header",b"header"]) -> None: ...
global___RobotHardwareConfigurationResponse = RobotHardwareConfigurationResponse

class RobotLinkModelRequest(google.protobuf.message.Message):
    """The RobotLinkModel request message uses a link name returned by the RobotHardwareConfiguration response to
    get the associated OBJ file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    LINK_NAME_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.RequestHeader:
        """Common request header."""
        pass
    link_name: typing.Text
    """The link name of which the OBJ file shoould represent."""

    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.RequestHeader] = ...,
        link_name: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","link_name",b"link_name"]) -> None: ...
global___RobotLinkModelRequest = RobotLinkModelRequest

class RobotLinkModelResponse(google.protobuf.message.Message):
    """The RobotLinkModel response message returns the OBJ file for a specifc robot link."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HEADER_FIELD_NUMBER: builtins.int
    LINK_MODEL_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> bosdyn.api.header_pb2.ResponseHeader:
        """Common response header."""
        pass
    @property
    def link_model(self) -> global___Skeleton.Link.ObjModel:
        """The requested RobotState skeleton obj model."""
        pass
    def __init__(self,
        *,
        header: typing.Optional[bosdyn.api.header_pb2.ResponseHeader] = ...,
        link_model: typing.Optional[global___Skeleton.Link.ObjModel] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","link_model",b"link_model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","link_model",b"link_model"]) -> None: ...
global___RobotLinkModelResponse = RobotLinkModelResponse

class RobotImpairedState(google.protobuf.message.Message):
    """Keeps track of why the robot is not able to drive autonomously."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ImpairedStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ImpairedStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[RobotImpairedState._ImpairedStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        IMPAIRED_STATUS_UNKNOWN: RobotImpairedState._ImpairedStatus.ValueType  # 0
        """Unknown/unexpected error."""

        IMPAIRED_STATUS_OK: RobotImpairedState._ImpairedStatus.ValueType  # 1
        """The robot is able to drive."""

        IMPAIRED_STATUS_NO_ROBOT_DATA: RobotImpairedState._ImpairedStatus.ValueType  # 2
        """The autonomous system does not have any data from the robot state service."""

        IMPAIRED_STATUS_SYSTEM_FAULT: RobotImpairedState._ImpairedStatus.ValueType  # 3
        """There is a system fault which caused the robot to stop. See system_fault for details."""

        IMPAIRED_STATUS_NO_MOTOR_POWER: RobotImpairedState._ImpairedStatus.ValueType  # 4
        """The robot's motors are not powered on."""

        IMPAIRED_STATUS_REMOTE_CLOUDS_NOT_WORKING: RobotImpairedState._ImpairedStatus.ValueType  # 5
        """The autonomous system is expected to have a remote point cloud (e.g. a LIDAR), but this is not working."""

        IMPAIRED_STATUS_SERVICE_FAULT: RobotImpairedState._ImpairedStatus.ValueType  # 6
        """A remote service the autonomous system depends on is not working."""

        IMPAIRED_STATUS_BEHAVIOR_FAULT: RobotImpairedState._ImpairedStatus.ValueType  # 7
        """A behavior fault caused the robot to stop. See behavior_faults for details."""

    class ImpairedStatus(_ImpairedStatus, metaclass=_ImpairedStatusEnumTypeWrapper):
        """If the robot is stopped due to being impaired, this is the reason why."""
        pass

    IMPAIRED_STATUS_UNKNOWN: RobotImpairedState.ImpairedStatus.ValueType  # 0
    """Unknown/unexpected error."""

    IMPAIRED_STATUS_OK: RobotImpairedState.ImpairedStatus.ValueType  # 1
    """The robot is able to drive."""

    IMPAIRED_STATUS_NO_ROBOT_DATA: RobotImpairedState.ImpairedStatus.ValueType  # 2
    """The autonomous system does not have any data from the robot state service."""

    IMPAIRED_STATUS_SYSTEM_FAULT: RobotImpairedState.ImpairedStatus.ValueType  # 3
    """There is a system fault which caused the robot to stop. See system_fault for details."""

    IMPAIRED_STATUS_NO_MOTOR_POWER: RobotImpairedState.ImpairedStatus.ValueType  # 4
    """The robot's motors are not powered on."""

    IMPAIRED_STATUS_REMOTE_CLOUDS_NOT_WORKING: RobotImpairedState.ImpairedStatus.ValueType  # 5
    """The autonomous system is expected to have a remote point cloud (e.g. a LIDAR), but this is not working."""

    IMPAIRED_STATUS_SERVICE_FAULT: RobotImpairedState.ImpairedStatus.ValueType  # 6
    """A remote service the autonomous system depends on is not working."""

    IMPAIRED_STATUS_BEHAVIOR_FAULT: RobotImpairedState.ImpairedStatus.ValueType  # 7
    """A behavior fault caused the robot to stop. See behavior_faults for details."""


    IMPAIRED_STATUS_FIELD_NUMBER: builtins.int
    SYSTEM_FAULTS_FIELD_NUMBER: builtins.int
    SERVICE_FAULTS_FIELD_NUMBER: builtins.int
    BEHAVIOR_FAULTS_FIELD_NUMBER: builtins.int
    impaired_status: global___RobotImpairedState.ImpairedStatus.ValueType
    """If the status is ROBOT_IMPAIRED, this is specifically why the robot is impaired."""

    @property
    def system_faults(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SystemFault]:
        """If impaired_status is STATUS_SYSTEM_FAULT, these are the faults which caused the robot to stop."""
        pass
    @property
    def service_faults(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[bosdyn.api.service_fault_pb2.ServiceFault]:
        """If impaired_status is STATUS_SERVICE_FAULT, these are the service faults which caused
        the robot to stop.
        """
        pass
    @property
    def behavior_faults(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BehaviorFault]:
        """If impaired_status is STATUS_BEHAVIOR_FAULT, these are the behavior faults which caused
        the robot to stop.
        """
        pass
    def __init__(self,
        *,
        impaired_status: global___RobotImpairedState.ImpairedStatus.ValueType = ...,
        system_faults: typing.Optional[typing.Iterable[global___SystemFault]] = ...,
        service_faults: typing.Optional[typing.Iterable[bosdyn.api.service_fault_pb2.ServiceFault]] = ...,
        behavior_faults: typing.Optional[typing.Iterable[global___BehaviorFault]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["behavior_faults",b"behavior_faults","impaired_status",b"impaired_status","service_faults",b"service_faults","system_faults",b"system_faults"]) -> None: ...
global___RobotImpairedState = RobotImpairedState
